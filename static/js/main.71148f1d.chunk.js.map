{"version":3,"sources":["logo.png","constants.js","store.js","Components/style.js","Components/Start.js","Components/Auth.js","Components/Breadcrumbs.js","Components/Delete.js","Components/Dropdown.js","Components/Star.js","Components/FilledStar.js","Components/Thumbnail.js","Components/Data.js","Components/CreateFolder.js","Components/Favorite.js","Components/UploadFile.js","Components/SideMenu.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CLIENT_ID","token$","BehaviorSubject","window","localStorage","getItem","updateToken","newToken","setItem","removeItem","next","favorites$","JSON","parse","updateFavoriteObservable","newFavoritesArray","favoritesString","stringify","h3Style","marginTop","startButtonStyle","Start","props","_useState","useState","value","_useState2","Object","slicedToArray","token","useEffect","subscription","subscribe","unsubscribe","react_default","a","createElement","react_router","to","Fragment","Helmet","style","Button","color","onClick","event","console","log","authUrl","Dropbox","clientId","getAuthenticationUrl","location","href","Auth","redirect","updateRedirect","queryString","hash","access_token","Breadcrumbs","linkToDirectory","pathElements","path","substring","split","directoryLinks","map","directory","idx","concat","BreadcrumbItem","active","length","tag","Breadcrumb","Delete","toggle","modal","updateModal","_useState3","file","_useState4","fileToDelete","_useState5","_useState6","currentFolder","setCurrentFolder","Modal","isOpen","modalTransition","timeout","backdropTransition","ModalHeader","ModalBody","FormGroup","Label","name","ModalFooter","accessToken","fetch","filesDeleteV2","path_lower","then","response","folderToDelete","filter","t","onDelete","catch","err","error","id","object","handleDelete","Action","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dropdownOpen","deleteModal","bind","assertThisInitialized","deleteToggle","setState","prevState","filesCopy","from_path","to_path","allow_shared_folder","autorename","_this2","Dropdown","DropdownToggle","outline","caret","class","DropdownMenu","DropdownItem","Components_Delete","handleCopy","Component","Star","onClickAddFavorite","FilledStar","onClickRemoveFavorite","fileType","Thumbnail","url","updateUrl","test","filesGetThumbnail","size","urlBlob","URL","createObjectURL","fileBlob","src","alt","Data","favorites","updateFavorites","search","updateSearch","_useState7","_useState8","_useState9","_useState10","currentLocation","pathname","updateData","targetObject","target","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","data","Symbol","iterator","done","objectSpread","return","slice","push","dropbox","filesSearch","query","files","matches","metadata","position","width","Components_Breadcrumbs","Input","type","placeholder","onChange","e","minWidth","right","top","Table","favorite","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","key","Components_Thumbnail","react_router_dom","path_display","filePath","filesDownload","downloadButton","document","setAttribute","click","cursor","server_modified","date","day","month","year","replace","monthShow","handleLastModified","sizes","i","Math","pow","round","handleSize","src_Components_Dropdown","CreateFolder","folderName","updateFolderName","toggleFolder","exitModal","for","filesCreateFolder","onNewFolder","Favorite","redirectToHome","updateActiveTab","title","UploadFile","updateFile","onUploadSubmit","preventDefault","filesUpload","contents","onUpload","handleUploadFile","htmlFor","FormText","disabled","asideStyle","margin","ulStyle","listStyle","padding","liStyle","fontSize","accountStyle","usernameStyle","marginRight","verticalAlign","SideMenu","className","Components_UploadFile","Components_CreateFolder","user","logOut","Home","updateTokenState","updateUser","activeTab","renderData","filesListFolder","entries","poll","setInterval","clearInterval","usersGetCurrentAccount","given_name","display","flexGrow","Nav","tabs","NavItem","NavLink","TabContent","TabPane","tabId","Row","Col","sm","Components_Data","render","assign","Components_SideMenu","authTokenRevoke","folder","navStyle","height","justifyContent","alignItems","logoStyle","left","headerStyle","App","basename","process","logoImage","exact","component","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71148f1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7c908eb4.png\";","export const CLIENT_ID = '708xp4tm8gf03u3';","import { BehaviorSubject } from 'rxjs';\r\n\r\nexport const token$ = new BehaviorSubject(window.localStorage.getItem('token'));\r\n\r\nexport function updateToken(newToken){\r\n  newToken ? window.localStorage.setItem('token', newToken) : window.localStorage.removeItem('token')\r\n  token$.next(newToken);\r\n}\r\n\r\nexport const favorites$ = new BehaviorSubject(JSON.parse(window.localStorage.getItem('favorites')) || []);\r\n\r\n//For resetting favorites\r\n//export const favorites$ = new BehaviorSubject([]);\r\n\r\nexport function updateFavoriteObservable(newFavoritesArray) {\r\n  //Turning array into string\r\n  let favoritesString = JSON.stringify(newFavoritesArray);\r\n\r\n  //Updating local storage with new favorites string\r\n  window.localStorage.setItem('favorites', favoritesString);\r\n\r\n  //console.log('local storage: ', window.localStorage);\r\n\r\n  //Updating favorites observable\r\n  favorites$.next(newFavoritesArray);\r\n}\r\n\r\nexport function removeAllFavorites() {\r\n  window.localStorage.removeItem('favorites');\r\n  favorites$.next(null);\r\n}\r\n","export const h3Style = {\r\n  marginTop: \"60px\"\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Dropbox } from 'dropbox';\r\nimport { Button } from 'reactstrap';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { CLIENT_ID } from '../constants';\r\nimport { token$, updateToken } from '../store';\r\nimport { h3Style } from './style';\r\n\r\nconst startButtonStyle = {\r\n  marginTop: \"30px\"\r\n}\r\n\r\nexport default function Start(props) {\r\n\r\n  const [token, updateToken] = useState(token$.value);\r\n\r\n  //Listening to token when the start page is loaded\r\n  useEffect(() => {\r\n    const subscription = token$.subscribe(updateToken);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  function onClickLogin(event) {\r\n\r\n    //Creating dropbox object\r\n    console.log(CLIENT_ID);\r\n    let dropbox = new Dropbox({ clientId: CLIENT_ID });\r\n\r\n    //Getting authentication url\r\n    let authUrl = dropbox.getAuthenticationUrl('https://ayumina.github.io/mandatory-advanced-js5/auth');\r\n    //let authUrl = dropbox.getAuthenticationUrl('http://localhost:3000/auth'); //To test locally\r\n\r\n    console.log(authUrl);\r\n\r\n    //Redirecting\r\n    window.location.href = authUrl;\r\n  }\r\n\r\n  if(token) {\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n  else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>Start</title>\r\n        </Helmet>\r\n\r\n        <h3 style={h3Style}>File Hosting Service</h3>\r\n        <Button color=\"success\" onClick={onClickLogin} style={startButtonStyle}>Connect</Button>{' '}\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { token$, updateToken } from '../store';\r\n\r\nexport default function Auth(props) {\r\n  //States\r\n  const [redirect, updateRedirect] = useState(false);\r\n\r\n  function fetchAccessToken() {\r\n    let location = props.location; //The Route component has a prop called location\r\n    let parsedHash = queryString.parse(location.hash);\r\n    let accessToken = parsedHash.access_token;\r\n    updateToken(accessToken);\r\n\r\n    //Then, redirecting...\r\n    updateRedirect(true);\r\n  }\r\n\r\n  //When the auth component is loaded, fetch the access token from the URL\r\n  useEffect(fetchAccessToken, []);\r\n\r\n  if(redirect) {\r\n    return <Redirect to=\"/home\"/>;\r\n  }\r\n  else {\r\n    return <p>Redirecting...</p>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nfunction Breadcrumbs(props) {\r\n  let linkToDirectory = \"\";\r\n  let pathElements = props.path.substring(1).split(\"/\");\r\n  const directoryLinks = pathElements.map((directory, idx) => {\r\n    linkToDirectory += `/${directory}`;\r\n    return <BreadcrumbItem active={idx === pathElements.length - 1} tag=\"a\" href={linkToDirectory}>{idx === 0 ? \"Home\" : directory}</BreadcrumbItem>\r\n  })\r\n\r\n  return (\r\n    <Breadcrumb>\r\n      {directoryLinks}\r\n    </Breadcrumb>\r\n  )\r\n}\r\n\r\nexport default Breadcrumbs;","import React, { useState, useEffect } from \"react\";\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$, updateToken, favorites$, updateFavoriteObservable } from \"../store\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst Delete = (props) => {\r\n\r\n    const [modal, updateModal] = useState(props.toggle);\r\n    const [fileToDelete, updateFileToDelete] = useState(props.file);\r\n    const [currentFolder, setCurrentFolder] = useState([]);\r\n\r\n    function toggle() {\r\n      updateModal(!modal)\r\n    }\r\n\r\n    function handleDelete(file) {\r\n      const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n      dropbox.filesDeleteV2({ path: fileToDelete.path_lower })\r\n        .then(response => {\r\n          console.log(\"delete response: \", response);\r\n          let folderToDelete = currentFolder.filter((t) => {\r\n            return file !== t;\r\n          })\r\n          setCurrentFolder(folderToDelete);\r\n          props.onDelete();\r\n          toggle();\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        })\r\n\r\n      //Removing object from favorites\r\n      let id = file.id;\r\n      let favorites = favorites$.value;\r\n      let filteredFavorites = favorites.filter(object => {\r\n        return object.id !== id;\r\n      });\r\n      updateFavoriteObservable(filteredFavorites);\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\r\n        <ModalHeader toggle={toggle}>Delete file/folder</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label>Are you sure want to delete \"{fileToDelete && fileToDelete.name}\"?</Label>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={() => handleDelete(props.file)}>Delete</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Delete;\r\n","import React, { Component } from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport \"./Dropdown.css\";\r\nimport Delete from \"./Delete\";\r\nimport { token$ } from \"../store.js\";\r\nimport { Dropbox } from 'dropbox';\r\n\r\nclass Action extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      file: props.file,\r\n      deleteModal: false,\r\n      onDelete: props.onDelete\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.deleteToggle = this.deleteToggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  }\r\n\r\n  deleteToggle() {\r\n    this.setState(prevState => ({\r\n      deleteModal: !prevState.deleteModal\r\n    }))\r\n  }\r\n\r\n  //onClick={() => { updateFileToDelete(file); toggleFolder() }}\r\n\r\n  handleCopy(file) {\r\n    let path = file.path_lower;\r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.filesCopy({\r\n      from_path: path,\r\n      to_path: path,\r\n      allow_shared_folder: true,\r\n      autorename: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dropdown\r\n        isOpen={this.state.dropdownOpen}\r\n        toggle={this.toggle}\r\n      >\r\n        <DropdownToggle color=\"primary\" outline caret><i class=\"material-icons\">more_horiz</i></DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem onClick={this.deleteToggle}><Delete file={this.state.file} toggle={this.state.deleteModal} onDelete={this.state.onDelete} />Delete</DropdownItem>\r\n          <DropdownItem>Rename</DropdownItem>\r\n          <DropdownItem>Move</DropdownItem>\r\n          <DropdownItem onClick={() => this.handleCopy(this.state.file)}>Copy</DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Action;\r\n","import React from 'react';\r\n\r\nexport function Star(props) {\r\n  return <i class=\"material-icons\" id={props.id} onClick={props.onClickAddFavorite}>star_border</i>;\r\n}\r\n","import React from 'react';\r\n\r\nexport function FilledStar(props) {\r\n  return <i class=\"material-icons\" id={props.id} onClick={props.onClickRemoveFavorite}>star</i>;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$ } from '../store';\r\n\r\nconst fileType = /\\.(gif|jpg|jpeg|tiff|tif|png|bmp)$/i;\r\n\r\nconst Thumbnail = props => {\r\n  const [url, updateUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (fileType.test(props.file.name)) {\r\n      const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n      dropbox.filesGetThumbnail({ path: props.file.path_lower, size: 'w32h32' })\r\n        .then((response) => {\r\n          let urlBlob = URL.createObjectURL(response.fileBlob);\r\n          updateUrl(urlBlob);\r\n        })\r\n        .catch(function (error) {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [props.file.name, props.file.path_lower])\r\n\r\n  // filetype: image\r\n  if (fileType.test(props.file.name)) {\r\n    return (\r\n      <img src={url} alt={props.file.name}></img>\r\n    )\r\n    // filetype: file\r\n  } else if (props.file['.tag'] === 'file') {\r\n    return (\r\n      <i class=\"material-icons\">insert_drive_file</i>\r\n    )\r\n    // filetype: folder\r\n  } else if (props.file['.tag'] === 'folder') {\r\n    return (\r\n      <i class=\"material-icons\">folder</i>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default Thumbnail\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Data.css\";\r\nimport { Dropbox } from \"dropbox\";\r\nimport { token$, updateToken, favorites$, updateFavoriteObservable } from \"../store\";\r\nimport { Table, Input } from \"reactstrap\";\r\nimport Breadcrumbs from \"./Breadcrumbs\";\r\nimport Dropdown from './Dropdown';\r\nimport { Star } from './Star.js';\r\nimport { FilledStar } from './FilledStar.js';\r\nimport Thumbnail from './Thumbnail';\r\n\r\n\r\nfunction Data(props) {\r\n  const [modal, updateModal] = useState(false);\r\n  const [favorites, updateFavorites] = useState(favorites$.value); //favorites is an array of objects\r\n  const [search, updateSearch] = useState(\"\");\r\n  const [token, updateTokenState] = useState(token$.value);\r\n  const [user, updateUser] = useState(\"\");\r\n\r\n  let currentLocation = props.location.pathname.substring(5);\r\n  const updateData = props.updateData;\r\n\r\n  useEffect(() => {\r\n    // If token exists\r\n    if (token) {\r\n      let dropbox = new Dropbox({ accessToken: token });\r\n\r\n      // if then (Fetching files/folders) else (search)\r\n      if (search) {\r\n        // Search\r\n        dropbox.filesSearch({ path: '', query: search })\r\n          .then(function (response) {\r\n            const files = response.matches.map(file => {\r\n              return file.metadata\r\n            });\r\n            updateData(files)\r\n          })\r\n      }\r\n    }\r\n  }, [token, search, currentLocation]);\r\n\r\n  //Listening to favorites observable\r\n  //updateFavorites is used only here. Anywhere else, use updateFavoriteObservable to update favorites.\r\n  useEffect(() => {\r\n    const subscription = favorites$.subscribe(updateFavorites);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  function onClickAddFavorite(event) {\r\n    //Finding out id\r\n    let id = event.target.id;\r\n\r\n    //Looking for the right file/folder in data (matching on id)\r\n    let targetObject;\r\n    for (let object of props.data) {\r\n      if (object.id === id) {\r\n        targetObject = { ...object };\r\n      }\r\n    }\r\n\r\n    //Making a copy of favorites array to work with\r\n    let newFavoritesArray = favorites.slice();\r\n\r\n    //Adding new object to array\r\n    newFavoritesArray.push(targetObject);\r\n\r\n    //Updating favorites\r\n    updateFavoriteObservable(newFavoritesArray);\r\n  }\r\n\r\n  function onClickRemoveFavorite(event) {\r\n    let id = event.target.id;\r\n    let filteredFavorites = favorites.filter(object => {\r\n      return object.id !== id;\r\n    });\r\n    updateFavoriteObservable(filteredFavorites);\r\n  }\r\n\r\n\r\n  /*------------------------------------- Render table data ---------------------------------------------*/\r\n  // Table data Last modified calculations\r\n  function handleLastModified(date) {\r\n    let day = date.substring(8, 10);\r\n    let month = date.substring(5, 7);\r\n    let year = date.substring(0, 4);\r\n\r\n    let months = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n\r\n    month = month.replace(/^0+/, '');\r\n    day = day.replace(/^0+/, '');\r\n    let monthShow = months[month - 1];\r\n\r\n    return <label>{day + ' ' + monthShow + ' ' + year}</label>\r\n  }\r\n\r\n  // Table data size calculations in Bytes, KB, MB, GB, TB, PB, EB, ZB, YB\r\n  function handleSize(size) {\r\n    let sizes = [' B', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\r\n    for (let i = 1; i < sizes.length; i++) {\r\n      if (size < Math.pow(1024, i))\r\n        return (Math.round((size / Math.pow(1024, i - 1)) * 100) / 100) + sizes[i - 1];\r\n    }\r\n    return size;\r\n  }\r\n  /*------------------------------------- End Render table data ---------------------------------------------*/\r\n\r\n  /*------------------------------------- Download files ---------------------------------------------*/\r\n  // Function to download files\r\n  function handleDownloadFile(fileName, filePath) {\r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.filesDownload({ path: filePath })\r\n      .then((response) => {\r\n        console.log(\"File details to be download: \", response);\r\n        let url = URL.createObjectURL(response.fileBlob);\r\n        let downloadButton = document.createElement('a');\r\n        downloadButton.setAttribute('href', url);\r\n        downloadButton.setAttribute('download', response.name);\r\n        downloadButton.click();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      })\r\n  }\r\n  /*------------------------------------- End Download files ---------------------------------------------*/\r\n\r\n  return (\r\n    <>\r\n      {/* ------------------------------------------ Search ----------------------------------------------- */}\r\n      <div style={{ position:\"relative\", width: \"100%\" }}>\r\n        <Breadcrumbs path={props.location.pathname} />\r\n        <Input type=\"text\" size=\"lg\" placeholder=\"Search\" onChange={(e) => { updateSearch(e.target.value); }} value={props.search} style={{ position: \"absolute\", width: \"30%\", minWidth: \"150px\", right: \"0px\", top: \"-1px\" }} />\r\n      </div>\r\n\r\n      {/* Table file/folder data */}\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Name</th>\r\n            <th>Last modified</th>\r\n            <th>Size</th>\r\n            <th>Menu</th>\r\n            <th><i class=\"material-icons\">star_border</i></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map(file => {\r\n\r\n            //Favorite logic\r\n            let favorite = false;\r\n            for (let object of favorites) {\r\n              if (object.id === file.id) {\r\n                favorite = true;\r\n                break;\r\n              }\r\n            }\r\n\r\n            return (\r\n              <tr key={file.id}>\r\n                <td style={{ color: 'green' }}><Thumbnail file={file} /></td>\r\n                <td>{file[\".tag\"] === \"folder\" ? <Link to={`/home${file.path_display}`}>{file.name}</Link> : <span onClick={() => handleDownloadFile(file.name, file.path_display)} style={{ cursor: 'pointer', color: 'blue' }}>{file.name}</span>}</td>\r\n                <td>{file.server_modified ? handleLastModified(file.server_modified) : null}</td>\r\n                <td>{handleSize(file.size)}</td>\r\n                <td><Dropdown file={file} onDelete={props.onDelete} /></td>\r\n                <td>\r\n                  { favorite ? <FilledStar id={file.id} onClickRemoveFavorite={onClickRemoveFavorite}/> : <Star id={file.id} onClickAddFavorite={onClickAddFavorite}/>}\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Data;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$, updateToken } from '../store';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst CreateFolder = (props) => {\r\n\r\n  const [modal, updateModal] = useState(false);\r\n  const [folderName, updateFolderName] = useState(\"\");\r\n  const filePath = props.location.pathname.substring(5);\r\n\r\n  // Triggering modal to open\r\n  function toggleFolder() {\r\n    updateModal(true)\r\n  }\r\n\r\n  //Closing modal\r\n  function exitModal() {\r\n    updateModal(false)\r\n  }\r\n\r\n  // Handle input\r\n  function handleFolderName(e) {\r\n    updateFolderName(e.target.value);\r\n  }\r\n\r\n  // Handling create button function\r\n  function handleNewFolder() {\r\n    let dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.filesCreateFolder({ path: filePath + \"/\" + folderName, autorename: true })\r\n      .then((response) => {\r\n        props.onNewFolder(response);\r\n        exitModal();\r\n        //window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggleFolder}>New Folder</Button>\r\n      <Modal isOpen={modal} toggle={toggleFolder} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\r\n        <ModalHeader toggle={exitModal}>Create New Folder</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"name\">Folder name</Label>\r\n            <Input type=\"text\" placeholder=\"Folder name\" onChange={handleFolderName} value={folderName} />\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"success\" onClick={handleNewFolder}>Create</Button>{' '}\r\n          <Button color=\"secondary\" onClick={exitModal}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateFolder;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table } from \"reactstrap\";\r\nimport \"./Data.css\";\r\nimport { Dropbox } from \"dropbox\";\r\nimport { token$, updateToken } from \"../store\";\r\nimport { favorites$, updateFavoriteObservable } from '../store';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from \"reactstrap\";\r\nimport Dropdown from './Dropdown';\r\nimport { Star } from './Star.js';\r\nimport { FilledStar } from './FilledStar.js';\r\nimport Thumbnail from './Thumbnail';\r\nimport CreateFolder from './CreateFolder';\r\n\r\nexport default function Favorite(props) {\r\n  const [token, updateToken] = useState(token$.value);\r\n  const [favorites, updateFavorites] = useState(favorites$.value); //favorites is an array of objects\r\n  const [search, updateSearch] = useState('');\r\n\r\n  // Using this instead of helmet because it was causing problem while search\r\n  useEffect(() => {\r\n    document.title = \"Home\";\r\n  })\r\n\r\n  //Listening to token observable\r\n  useEffect(() => {\r\n    const subscription = token$.subscribe(updateToken);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  //Listening to favorites observable\r\n  //'updateFavorites' is used only here. Anywhere else, use updateFavoriteObservable to update favorites.\r\n  useEffect(() => {\r\n    const subscription = favorites$.subscribe(updateFavorites);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  /*------------------------------------- Download files ---------------------------------------------*/\r\n  // Function to download files\r\n  function handleDownloadFile(fileName, filePath) {\r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.filesDownload({ path: filePath })\r\n      .then((response) => {\r\n        console.log(\"File details to be download: \", response);\r\n        let url = URL.createObjectURL(response.fileBlob);\r\n        let downloadButton = document.createElement('a');\r\n        downloadButton.setAttribute('href', url);\r\n        downloadButton.setAttribute('download', response.name);\r\n        downloadButton.click();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      })\r\n  }\r\n/*------------------------------------- End Download files ---------------------------------------------*/\r\n\r\n  // Table data Last modified calculations\r\n  function handleLastModified(date) {\r\n    let day = date.substring(8, 10);\r\n    let month = date.substring(5, 7);\r\n    let year = date.substring(0, 4);\r\n\r\n    let months = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n\r\n    month = month.replace(/^0+/, '');\r\n    day = day.replace(/^0+/, '');\r\n    let monthShow = months[month - 1];\r\n\r\n    return <label>{day + ' ' + monthShow + ' ' + year}</label>\r\n  }\r\n\r\n  // Table data size calculations in Bytes, KB, MB, GB, TB, PB, EB, ZB, YB\r\n  function handleSize(size) {\r\n    let sizes = [' B', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\r\n    for (let i = 1; i < sizes.length; i++) {\r\n      if (size < Math.pow(1024, i))\r\n        return (Math.round((size / Math.pow(1024, i - 1)) * 100) / 100) + sizes[i - 1];\r\n    }\r\n    return size;\r\n  }\r\n\r\n  function onClickRemoveFavorite(event) {\r\n    let id = event.target.id;\r\n    let filteredFavorites = favorites.filter(object => {\r\n      return object.id !== id;\r\n    });\r\n    updateFavoriteObservable(filteredFavorites);\r\n  }\r\n\r\n  function redirectToHome(event) {\r\n    props.updateActiveTab('1');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Table style={{ marginTop: \"1em\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Type</th>\r\n              <th>Name</th>\r\n              <th>Last modified</th>\r\n              <th>Size</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {favorites.map((file) => {\r\n\r\n              //console.log('file.path_display: ', file.path_display);\r\n\r\n              return (\r\n                <tr key={file.id}>\r\n                  <td style={{ color: 'green' }}><Thumbnail file={file} /></td>\r\n                  <td>{file[\".tag\"] === \"folder\" ? <Link to={`/home${file.path_display}`} onClick={redirectToHome}>{file.name}</Link> : <span onClick={() => handleDownloadFile(file.name, file.path_display)} style={{ cursor: 'pointer', color: 'blue' }}>{file.name}</span>}</td>\r\n                  <td>{file.server_modified ? handleLastModified(file.server_modified) : null}</td>\r\n                  <td>{handleSize(file.size)}</td>\r\n                  <td><button id={file.id} onClick={onClickRemoveFavorite}>Remove from favorites</button></td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n       </Table>\r\n\r\n    </>\r\n  );\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$, updateToken, updateFavoriteObservable } from '../store';\r\nimport { Button, FormGroup, FormText, Input, Label, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nfunction UploadFile(props) {\r\n  const [token, updateTokenState] = useState(token$.value);\r\n  const [modal, updateModal] = useState(false);\r\n  const [file, updateFile] =  useState(null);\r\n  const currentLocation = props.location.pathname.substring(5);\r\n\r\n  function toggle() {\r\n    updateModal(!modal)\r\n  }\r\n\r\n  function handleUploadFile(file) {\r\n    const dropbox = new Dropbox({ accessToken: token, fetch });\r\n  \r\n    if (file.size > 0 && file.size < 150000000) {\r\n      dropbox\r\n        .filesUpload({\r\n          contents: file,\r\n          path: `${currentLocation}/${file.name}`\r\n        })\r\n        .then(response => {\r\n          props.onUpload();\r\n          updateModal(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  function onUploadSubmit(e) {\r\n    e.preventDefault();\r\n    handleUploadFile(file);\r\n    updateModal(false);\r\n  }\r\n\r\n  function onChangeFile(e) {\r\n    updateFile(e.target.files[0] || null);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggle}>Upload File</Button>\r\n      <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}>\r\n        <ModalHeader toggle={toggle}>Upload file</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup id=\"upload\">\r\n            <Label htmlFor=\"uploadfile\" id=\"uploadLabel\">Please select a file to upload</Label>\r\n            <Input type=\"file\" name=\"file\" id=\"uploadfile\" onChange={onChangeFile} />\r\n            <FormText color=\"muted\">The size of a file should not exceed 150MB.</FormText>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            htmlFor=\"upload\"\r\n            type=\"submit\"\r\n            color=\"success\"\r\n            disabled={file === null}\r\n            onClick={(e) => onUploadSubmit(e)}\r\n          >\r\n            Upload\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={toggle}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadFile;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Input } from 'reactstrap';\r\nimport UploadFile from './UploadFile';\r\nimport \"./SideMenu.css\";\r\nimport CreateFolder from './CreateFolder';\r\n\r\nconst asideStyle = {\r\n  margin: \"41px 6px 0 6px\",\r\n  width: \"20%\",\r\n  minWidth: \"50px\"\r\n}\r\n\r\nconst ulStyle = {\r\n  listStyle: \"none\",\r\n  padding: \"0\"\r\n}\r\n\r\nconst liStyle = {\r\n  marginTop: \"15px\",\r\n  padding: \"0\",\r\n  fontSize: \"large\"\r\n}\r\n\r\nconst accountStyle = {\r\n  position: \"absolute\",\r\n  right: \"10px\",\r\n  top: \"10px\"\r\n}\r\n\r\nconst usernameStyle = {\r\n  marginRight: \"5px\",\r\n  verticalAlign: \"baseline\"\r\n};\r\n\r\nfunction SideMenu(props) {\r\n  return (\r\n    <aside style={asideStyle}>\r\n      <ul style={ulStyle}>\r\n        <li className=\"menu\" style={liStyle}><UploadFile onUpload={props.onUpload} location={props.location} file={props.file} /></li>\r\n        <li className=\"menu\" style={liStyle}><CreateFolder onNewFolder={props.onNewFolder} location={props.location} /></li>\r\n      </ul>\r\n      <div style={accountStyle}>\r\n        <span style={usernameStyle}>{props.user}</span>\r\n        <Button color=\"success\" onClick={props.logOut}>Log out</Button>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default SideMenu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport { Table, TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col, Input } from \"reactstrap\";\r\nimport { Dropbox } from \"dropbox\";\r\nimport { token$, updateToken, removeAllFavorites } from \"../store\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport Data from \"./Data\";\r\nimport Favorite from \"./Favorite\";\r\nimport SideMenu from \"./SideMenu\";\r\n//import Breadcrumbs from \"./Breadcrumbs\";\r\n\r\nfunction Home(props) {\r\n  const [token, updateTokenState] = useState(token$.value);\r\n  const [data, updateData] = useState([]);\r\n  //const [search, updateSearch] = useState(\"\");\r\n  const [user, updateUser] = useState(\"\");\r\n  const [activeTab, updateActiveTab] = useState(props.location.pathname === \"/home/favorites\" ? \"2\" : \"1\");\r\n  let currentLocation = props.location.pathname.substring(5);\r\n\r\n  // Using this instead of helmet because it was causing problem while search\r\n  useEffect(() => {\r\n    document.title = \"TeaCup\";\r\n  });\r\n\r\n  useEffect(() => {\r\n    const subscription = token$.subscribe(updateTokenState);\r\n    return () => subscription.unsubscribe();\r\n  });\r\n\r\n  //Fetching files/folders in designated path\r\n  function renderData() {\r\n    //If the favorite tab is active, do not make a new fetch\r\n    if(currentLocation === \"/favorites\") {\r\n      return;\r\n    }\r\n\r\n    const dropbox = new Dropbox({ accessToken: token, fetch });\r\n    if (currentLocation === \"/\") {\r\n      currentLocation = \"\";\r\n    }\r\n    dropbox.filesListFolder({ path: currentLocation })\r\n      .then(function (response) {\r\n        updateData(response.entries);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    const poll = setInterval(() => {\r\n      renderData();\r\n    }, 3000);\r\n    return() => clearInterval(poll);\r\n  }, [currentLocation]);\r\n\r\n  // Fetch user name\r\n  useEffect(() => {\r\n    const dropbox = new Dropbox({ accessToken: token });\r\n    dropbox\r\n      .usersGetCurrentAccount()\r\n      .then(function (response) {\r\n        updateUser(response.name.given_name);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  }, [token]);\r\n\r\n  if (!token) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  function onNewFolder(folder) {\r\n    renderData();\r\n  }\r\n\r\n  function onUpload() {\r\n    renderData();\r\n  }\r\n\r\n  function onDelete() {\r\n    renderData()\r\n  }\r\n\r\n  function logOut(e) {\r\n    e.preventDefault();\r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.authTokenRevoke();\r\n    updateToken(null);\r\n    removeAllFavorites();\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", width: \"100%\" }}>\r\n      <div style={{ flexGrow: 1 }}>\r\n        <Nav tabs>\r\n          <NavItem>\r\n            <Link to=\"/home\">\r\n            <NavLink\r\n              className={activeTab === \"1\" ? \"active\" : \"\"}\r\n              onClick={() => updateActiveTab(\"1\")}\r\n              style={{color: \"#31572C\"}}\r\n            >\r\n              <i class=\"material-icons\" style={{ verticalAlign: \"bottom\" }}>\r\n                folder\r\n              </i>\r\n              All\r\n            </NavLink>\r\n            </Link>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Link to=\"/home/favorites\">\r\n            <NavLink\r\n              className={activeTab === \"2\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                updateActiveTab(\"2\");\r\n          }}\r\n              style={{color: \"#31572C\"}}\r\n            >\r\n              <i class=\"material-icons\" style={{ verticalAlign: \"bottom\" }}>\r\n                star\r\n              </i>\r\n              Favorites\r\n            </NavLink>\r\n            </Link>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                {/*<Breadcrumbs path={props.location.pathname} />*/}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Data\r\n                  location={props.location}\r\n                  data={data}\r\n                  updateData={updateData}\r\n                  renderData={renderData}\r\n                  onDelete={onDelete} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/home/favorites\" render={(props) => (\r\n                  <Favorite activeTab={activeTab} updateActiveTab={updateActiveTab} {...props} />\r\n                )} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n        </TabContent>\r\n      </div>\r\n      <SideMenu\r\n        location={props.location}\r\n        logOut={logOut}\r\n        user={user}\r\n        onNewFolder={onNewFolder}\r\n        onUpload={onUpload}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Start from \"./Components/Start\";\r\nimport Auth from \"./Components/Auth\";\r\nimport Home from \"./Components/Home\";\r\nimport logoImage from \"./logo.png\";\r\n\r\nconst navStyle = {\r\n  width: \"100%\",\r\n  height: \"80px\",\r\n  margin: \"10px 0 0 0\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  alignItems: \"flex-end\",\r\n};\r\n\r\nconst logoStyle = {\r\n  width: \"50px\",\r\n  position: \"absolute\",\r\n  left: \"10px\",\r\n  top: \"8px\"\r\n};\r\n\r\nconst headerStyle = {\r\n  margin: 0,\r\n  position: \"absolute\",\r\n  left: \"64px\",\r\n  top: \"24px\",\r\n  color: \"#212529\"\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <nav style={navStyle}>\r\n          <Link to=\"/\">\r\n            <img src={logoImage} style={logoStyle} />\r\n          </Link>\r\n          <h1 style={headerStyle}>TeaCup</h1>\r\n        </nav>\r\n      \r\n        <Route exact path=\"/\" component={Start} />\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/home\" component={Home} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}