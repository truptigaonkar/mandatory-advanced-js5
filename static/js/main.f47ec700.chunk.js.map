{"version":3,"sources":["logo.png","constants.js","store.js","Components/style.js","Components/Start.js","Components/Auth.js","Components/Breadcrumbs.js","Components/Delete.js","Components/Rename.js","Components/MoveFile.js","Components/Dropdown.js","Components/Star.js","Components/FilledStar.js","Components/Thumbnail.js","Components/Data.js","Components/CreateFolder.js","Components/Favorite.js","Components/UploadFile.js","Components/SideMenu.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CLIENT_ID","token$","BehaviorSubject","window","localStorage","getItem","updateToken","newToken","setItem","removeItem","next","favorites$","JSON","parse","updateFavoriteObservable","newFavoritesArray","favoritesString","stringify","h3Style","marginTop","startButtonStyle","Start","props","_useState","useState","value","_useState2","Object","slicedToArray","token","useEffect","subscription","subscribe","unsubscribe","react_default","a","createElement","react_router","to","Fragment","Helmet","style","Button","color","onClick","event","console","log","authUrl","Dropbox","clientId","getAuthenticationUrl","location","href","Auth","redirect","updateRedirect","queryString","hash","access_token","Breadcrumbs","linkToDirectory","pathElements","path","substring","split","directoryLinks","map","directory","idx","concat","link","BreadcrumbItem","active","length","tag","Breadcrumb","Delete","toggle","modal","updateModal","_useState3","file","_useState4","fileToDelete","_useState5","_useState6","currentFolder","setCurrentFolder","Modal","isOpen","modalTransition","timeout","backdropTransition","ModalHeader","ModalBody","FormGroup","Label","name","ModalFooter","accessToken","fetch","filesDeleteV2","path_lower","then","response","folderToDelete","filter","t","onDataChange","catch","err","error","id","object","handleDelete","Rename","newName","updateNewName","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","Input","onChange","e","target","placeholder","AllFolders","data","updateData","folders","updateFolders","filesListFolder","recursive","entries","folderList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","element","push","return","allfolders","folder","key","updateToFolder","MoveFile","fileToMove","toFolder","_useState13","_useState14","MoveFile_AllFolders","dropbox","to_path","filesMoveV2","from_path","autorename","handleMoveFile","Action","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dropdownOpen","deleteModal","renameModal","moveModal","bind","assertThisInitialized","deleteToggle","renameToggle","moveToggle","setState","prevState","filesCopy","allow_shared_folder","_this2","Dropdown","DropdownToggle","outline","caret","class","DropdownMenu","DropdownItem","Components_Delete","Components_Rename","Components_MoveFile","handleCopy","Component","Star","onClickAddFavorite","verticalAlign","FilledStar","onClickRemoveFavorite","fileType","Thumbnail","url","updateUrl","test","filesGetThumbnail","size","urlBlob","URL","createObjectURL","fileBlob","src","alt","Data","favorites","updateFavorites","search","updateSearch","currentLocation","pathname","targetObject","objectSpread","slice","filesSearch","query","files","matches","metadata","position","width","Components_Breadcrumbs","type","minWidth","right","top","Table","favorite","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Components_Thumbnail","className","react_router_dom","path_display","filePath","filesDownload","downloadButton","document","setAttribute","click","cursor","server_modified","date","day","month","year","replace","monthShow","handleLastModified","sizes","i","Math","pow","round","handleSize","src_Components_Dropdown","CreateFolder","folderName","updateFolderName","toggleFolder","exitModal","for","filesCreateFolder","onNewFolder","Favorite","redirectToHome","updateActiveTab","title","UploadFile","updateFile","onUploadSubmit","preventDefault","filesUpload","contents","onUpload","handleUploadFile","htmlFor","FormText","disabled","asideStyle","margin","accountStyle","usernameStyle","marginRight","SideMenu","ButtonGroup","vertical","Components_UploadFile","Components_CreateFolder","user","logOut","Home","updateTokenState","updateUser","activeTab","renderData","poll","setInterval","clearInterval","usersGetCurrentAccount","given_name","display","flexGrow","Nav","tabs","NavItem","NavLink","TabContent","TabPane","tabId","Row","Col","sm","Components_Data","render","assign","Components_SideMenu","authTokenRevoke","navStyle","height","justifyContent","alignItems","logoStyle","left","headerStyle","App","basename","process","logoImage","exact","component","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f47ec700.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7c908eb4.png\";","export const CLIENT_ID = '708xp4tm8gf03u3';","import { BehaviorSubject } from 'rxjs';\r\n\r\nexport const token$ = new BehaviorSubject(window.localStorage.getItem('token'));\r\n\r\nexport function updateToken(newToken){\r\n  newToken ? window.localStorage.setItem('token', newToken) : window.localStorage.removeItem('token')\r\n  token$.next(newToken);\r\n}\r\n\r\nexport const favorites$ = new BehaviorSubject(JSON.parse(window.localStorage.getItem('favorites')) || []);\r\n\r\n//For resetting favorites\r\n//export const favorites$ = new BehaviorSubject([]);\r\n\r\nexport function updateFavoriteObservable(newFavoritesArray) {\r\n  //Turning array into string\r\n  let favoritesString = JSON.stringify(newFavoritesArray);\r\n\r\n  //Updating local storage with new favorites string\r\n  window.localStorage.setItem('favorites', favoritesString);\r\n\r\n  //console.log('local storage: ', window.localStorage);\r\n\r\n  //Updating favorites observable\r\n  favorites$.next(newFavoritesArray);\r\n}\r\n\r\nexport function removeAllFavorites() {\r\n  window.localStorage.removeItem('favorites');\r\n  favorites$.next(null);\r\n}\r\n","export const h3Style = {\r\n  marginTop: \"60px\"\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Dropbox } from 'dropbox';\r\nimport { Button } from 'reactstrap';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { CLIENT_ID } from '../constants';\r\nimport { token$, updateToken } from '../store';\r\nimport { h3Style } from './style';\r\n\r\nconst startButtonStyle = {\r\n  marginTop: \"30px\"\r\n}\r\n\r\nexport default function Start(props) {\r\n\r\n  const [token, updateToken] = useState(token$.value);\r\n\r\n  //Listening to token when the start page is loaded\r\n  useEffect(() => {\r\n    const subscription = token$.subscribe(updateToken);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  function onClickLogin(event) {\r\n\r\n    //Creating dropbox object\r\n    console.log(CLIENT_ID);\r\n    let dropbox = new Dropbox({ clientId: CLIENT_ID });\r\n\r\n    //Getting authentication url\r\n    //let authUrl = dropbox.getAuthenticationUrl('https://ayumina.github.io/mandatory-advanced-js5/auth');\r\n    let authUrl = dropbox.getAuthenticationUrl('http://localhost:3000/auth'); //To test locally\r\n\r\n    console.log(authUrl);\r\n\r\n    //Redirecting\r\n    window.location.href = authUrl;\r\n  }\r\n\r\n  if(token) {\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n  else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>Start</title>\r\n        </Helmet>\r\n\r\n        <h3 style={h3Style}>File Hosting Service</h3>\r\n        <Button color=\"success\" onClick={onClickLogin} style={startButtonStyle}>Connect</Button>{' '}\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { token$, updateToken } from '../store';\r\n\r\nexport default function Auth(props) {\r\n  //States\r\n  const [redirect, updateRedirect] = useState(false);\r\n\r\n  function fetchAccessToken() {\r\n    let location = props.location; //The Route component has a prop called location\r\n    let parsedHash = queryString.parse(location.hash);\r\n    let accessToken = parsedHash.access_token;\r\n    updateToken(accessToken);\r\n\r\n    //Then, redirecting...\r\n    updateRedirect(true);\r\n  }\r\n\r\n  //When the auth component is loaded, fetch the access token from the URL\r\n  useEffect(fetchAccessToken, []);\r\n\r\n  if(redirect) {\r\n    return <Redirect to=\"/home\"/>;\r\n  }\r\n  else {\r\n    return <p>Redirecting...</p>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nfunction Breadcrumbs(props) {\r\n  let linkToDirectory = \"\";\r\n  let pathElements = props.path.substring(1).split(\"/\");\r\n  const directoryLinks = pathElements.map((directory, idx) => {\r\n    linkToDirectory += `/${directory}`;\r\n    let link = `/mandatory-advanced-js5${linkToDirectory}`\r\n    return <BreadcrumbItem active={idx === pathElements.length - 1} tag=\"a\" href={link}>{idx === 0 ? \"Home\" : directory}</BreadcrumbItem>\r\n  })\r\n\r\n  return (\r\n    <Breadcrumb>\r\n      {directoryLinks}\r\n    </Breadcrumb>\r\n  )\r\n}\r\n\r\nexport default Breadcrumbs;","import React, { useState, useEffect } from \"react\";\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$, updateToken, favorites$, updateFavoriteObservable } from \"../store\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst Delete = (props) => {\r\n\r\n    const [modal, updateModal] = useState(props.toggle);\r\n    const [fileToDelete, updateFileToDelete] = useState(props.file);\r\n    const [currentFolder, setCurrentFolder] = useState([]);\r\n\r\n    function toggle() {\r\n      updateModal(!modal)\r\n    }\r\n\r\n    function handleDelete(file) {\r\n      const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n      dropbox.filesDeleteV2({ path: fileToDelete.path_lower })\r\n        .then(response => {\r\n          let folderToDelete = currentFolder.filter((t) => {\r\n            return file !== t;\r\n          })\r\n          setCurrentFolder(folderToDelete);\r\n          props.onDataChange();\r\n          toggle();\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        })\r\n\r\n      //Removing object from favorites\r\n      let id = file.id;\r\n      let favorites = favorites$.value;\r\n      let filteredFavorites = favorites.filter(object => {\r\n        return object.id !== id;\r\n      });\r\n      updateFavoriteObservable(filteredFavorites);\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\r\n        <ModalHeader toggle={toggle}>Delete file/folder</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label>Are you sure want to delete \"{fileToDelete && fileToDelete.name}\"?</Label>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={() => handleDelete(props.file)}>Delete</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Delete;\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport { Dropbox } from \"dropbox\";\r\nimport { token$, updateToken } from \"../store\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nconst Rename = (props) => {\r\n\r\n  const [modal, updateModal] = useState(props.toggle);\r\n  const [newName, updateNewName] = useState(\"\");\r\n  const [fileToRename, updateFileToRename] = useState(props.file);\r\n  const [currentFolder, setCurrentFolder] = useState([]);\r\n  const [folderName, updateFolderName] = useState(\"\");\r\n  const [renameFileData, setRenameFileData] = useState({});\r\n\r\n  function toggle() {\r\n    updateModal(!modal)\r\n  }\r\n\r\n  /*\r\n  function toggleFolder(file) {\r\n    // let fileData = {\r\n    //   fileName: file.name,\r\n    //   path: file.path_display,\r\n    // }\r\n    // setRenameFileData(fileData);\r\n    updateModal(true)\r\n  }\r\n  \r\n  //Closing modal\r\n  function exitModal() {\r\n    updateModal(false)\r\n  }\r\n  \r\n\r\n  // Handle input\r\n  function handleFolderName(e) {\r\n\r\n    // let fileData = {\r\n    //   fileName: file.name,\r\n    //   path: file.path_display,\r\n    // }\r\n    // setRenameFileData(fileData);\r\n    console.log(\"console log input value: \", e.target.value);\r\n    let fileData = JSON.parse(JSON.stringify(renameFileData));\r\n    fileData.fileName = e.target.value;\r\n    updateFolderName(fileData); \r\n  }\r\n  */\r\n\r\n  function handleRename() {\r\n    console.log('rename test');\r\n    /* const currentPath = props.location.pathname.substr(5);\r\n    let fileData = JSON.parse(JSON.stringify(renameFileData))\r\n    let newPath = fileData.path;\r\n    newPath = newPath.split('/');\r\n    newPath[newPath.length - 1] = fileData.fileName;\r\n    newPath = newPath.join('/');\r\n\r\n    const dbx = new Dropbox({ accessToken: token$.value, fetch });\r\n    dbx.filesMoveV2({\r\n      from_path: fileData.path,\r\n      to_path: newPath,\r\n    })\r\n      .then((res) => {\r\n        let renamedFile = res.metadata\r\n        const dbx = new Dropbox({ accessToken: token$.value, fetch });\r\n        dbx.filesListFolder({ path: currentPath })\r\n          .then(res => {\r\n            //updateFavorites(renamedFile);\r\n            setCurrentFolder(res.entries);\r\n            updateModal(true)\r\n          })\r\n      }) */\r\n\r\n  }\r\n\r\n/*\r\n  <FormGroup>\r\n            \r\n            <Label for=\"name\">Rename {fileToRename}</Label>\r\n            <Input type=\"text\" placeholder=\"Folder name\" onChange={handleFolderName} value={folderName} />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n          <Label htmlFor=\"newName\">Rename {fileToRename}</Label>\r\n          <Input name=\"newName\" type=\"text\" placeholder=\"New name\" onChange={handleFolderName} value={folderName} />\r\n          </FormGroup>\r\n*/\r\n  return (\r\n    <>\r\n      <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\r\n        <ModalHeader toggle={toggle}>Rename file/folder</ModalHeader>\r\n        <ModalBody>\r\n          Please specify a new name\r\n          <Input onChange={(e) => { updateNewName(e.target.value); }} value={newName} placeholder=\"New name\" />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={() => handleRename(props.file)}>Rename</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default Rename;","import React, { Component, useState, useEffect } from \"react\";\r\nimport { Dropbox } from \"dropbox\";\r\nimport { token$, updateToken } from \"../store\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nconst AllFolders = (props) => {\r\n  const [data, updateData] = useState([]);\r\n  const [folders, updateFolders] = useState([]);\r\n  const [token, updateTokenState] = useState(token$.value);\r\n  //const [destinationFolder, updateDestinationFolder] = useState(\"\");\r\n  const path = \"\";\r\n\r\n  useEffect(() => {\r\n    const dropbox = new Dropbox({ accessToken: token, fetch });\r\n    dropbox.filesListFolder({ path: path, recursive: true })\r\n      .then(function (response) {\r\n        updateData(response.entries);\r\n        let folderList = [];\r\n        for (let element of data) {\r\n          if (element[\".tag\"] === \"folder\") {\r\n            folderList.push({ name: element.name, path: element.path_lower })\r\n          }\r\n        }\r\n        //console.log(\"folderList\", folderList);\r\n        updateFolders(folderList);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      })\r\n  },[]);\r\n\r\n  const allfolders = folders.map(folder => \r\n    <option key={folder.path} value={folder.path}>{folder.name}</option>\r\n  );\r\n  //console.log(\"data\", data);\r\n  \r\n  function onChangeGetFolder(event) {\r\n    console.log(event.target.value);\r\n    props.updateToFolder(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <select name=\"folder\" onChange={onChangeGetFolder}>\r\n          <option value=\"\">Select Folder</option>\r\n          {allfolders}\r\n        </select>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst MoveFile = (props) => {\r\n  const [modal, updateModal] = useState(props.toggle);\r\n  const [fileToMove, updateFileToMove] = useState(props.file);\r\n  const [toFolder, updateToFolder] = useState(\"\");\r\n  const [currentFolder, setCurrentFolder] = useState([]);\r\n\r\n  //let currentLocation = props.location.pathname.substring(5);\r\n\r\n  function toggle() {\r\n    updateModal(!modal)\r\n  }\r\n\r\n  function handleMoveFile(fileToMove) {    \r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    let to_path = toFolder;\r\n    if (to_path === \"/\") {\r\n      to_path = \"\";\r\n    }\r\n    console.log(fileToMove.path_lower, to_path);\r\n    dropbox.filesMoveV2({ from_path: fileToMove.path_lower, to_path: to_path, autorename: false })\r\n    .then(response => {\r\n      console.log(\"response\", response);\r\n      \r\n      props.onDataChange();\r\n      toggle();\r\n    })\r\n    .catch(err => {\r\n      console.error(err);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Move file</ModalHeader>\r\n        <ModalBody>\r\n          Move \"{fileToMove && fileToMove.name}\" to <AllFolders updateToFolder={updateToFolder} />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"success\" onClick={() => handleMoveFile(props.file)}>Move</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoveFile;","import React, { Component } from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport \"./Dropdown.css\";\r\nimport Delete from \"./Delete\";\r\nimport Rename from \"./Rename\";\r\nimport MoveFile from \"./MoveFile\";\r\nimport { token$ } from \"../store.js\";\r\nimport { Dropbox } from 'dropbox';\r\n\r\nclass Action extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      file: props.file,\r\n      deleteModal: false,\r\n      renameModal: false,\r\n      moveModal: false,\r\n      onDataChange: props.onDataChange,\r\n      location: props.location\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.deleteToggle = this.deleteToggle.bind(this);\r\n    this.renameToggle = this.renameToggle.bind(this);\r\n    this.moveToggle = this.moveToggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  }\r\n\r\n  deleteToggle() {\r\n    this.setState(prevState => ({\r\n      deleteModal: !prevState.deleteModal\r\n    }))\r\n  }\r\n\r\n  renameToggle() {\r\n    this.setState(prevState => ({\r\n      renameModal: !prevState.renameModal\r\n    }))\r\n  }\r\n\r\n  moveToggle() {\r\n    this.setState(prevState => ({\r\n      moveModal: !prevState.moveModal\r\n    }))\r\n  }\r\n\r\n  handleCopy(file) {\r\n    let path = file.path_lower;\r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.filesCopy({\r\n      from_path: path,\r\n      to_path: path,\r\n      allow_shared_folder: true,\r\n      autorename: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dropdown\r\n        isOpen={this.state.dropdownOpen}\r\n        toggle={this.toggle}\r\n      >\r\n        <DropdownToggle color=\"primary\" outline caret><i class=\"material-icons\">more_horiz</i></DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem onClick={this.deleteToggle}><Delete file={this.state.file} toggle={this.state.deleteModal} onDataChange={this.state.onDataChange} />Delete</DropdownItem> \r\n          <DropdownItem onClick={this.renameToggle}><Rename file={this.state.file} toggle={this.state.renameModal} onDataChange={this.state.onDataChange} location={this.state.location} />Rename</DropdownItem>\r\n          <DropdownItem onClick={this.moveToggle}><MoveFile file={this.state.file} toggle={this.state.moveModal} onDataChange={this.state.onDataChange} location={this.state.location} />Move</DropdownItem>\r\n          <DropdownItem onClick={() => this.handleCopy(this.state.file)}>Copy</DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Action;\r\n","import React from 'react';\r\n\r\nexport function Star(props) {\r\n  return <i class=\"material-icons\" id={props.id} onClick={props.onClickAddFavorite} style={{ verticalAlign: \"bottom\", color: \"#31572C\" }}>star_border</i>;\r\n}\r\n","import React from 'react';\r\n\r\nexport function FilledStar(props) {\r\n  return <i class=\"material-icons\" id={props.id} onClick={props.onClickRemoveFavorite} style={{ verticalAlign: \"bottom\", color: \"#31572C\" }}>star</i>;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$ } from '../store';\r\n\r\nconst fileType = /\\.(gif|jpg|jpeg|tiff|tif|png|bmp)$/i;\r\n\r\nconst Thumbnail = props => {\r\n  const [url, updateUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (fileType.test(props.file.name)) {\r\n      const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n      dropbox.filesGetThumbnail({ path: props.file.path_lower, size: 'w32h32' })\r\n        .then((response) => {\r\n          let urlBlob = URL.createObjectURL(response.fileBlob);\r\n          updateUrl(urlBlob);\r\n        })\r\n        .catch(function (error) {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [props.file.name, props.file.path_lower])\r\n\r\n  // filetype: image\r\n  if (fileType.test(props.file.name)) {\r\n    return (\r\n      <img src={url} alt={props.file.name}></img>\r\n    )\r\n    // filetype: file\r\n  } else if (props.file['.tag'] === 'file') {\r\n    return (\r\n      <i class=\"material-icons\">insert_drive_file</i>\r\n    )\r\n    // filetype: folder\r\n  } else if (props.file['.tag'] === 'folder') {\r\n    return (\r\n      <i class=\"material-icons\">folder_open</i>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default Thumbnail\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Data.css\";\r\nimport { Dropbox } from \"dropbox\";\r\nimport { token$, updateToken, favorites$, updateFavoriteObservable } from \"../store\";\r\nimport { Table, Input } from \"reactstrap\";\r\nimport Breadcrumbs from \"./Breadcrumbs\";\r\nimport Dropdown from './Dropdown';\r\nimport { Star } from './Star.js';\r\nimport { FilledStar } from './FilledStar.js';\r\nimport Thumbnail from './Thumbnail';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label } from \"reactstrap\";\r\n\r\nfunction Data(props) {\r\n  const [modal, updateModal] = useState(false);\r\n  const [favorites, updateFavorites] = useState(favorites$.value); //favorites is an array of objects\r\n  const [search, updateSearch] = useState(\"\");\r\n  const [token, updateTokenState] = useState(token$.value);\r\n  const [user, updateUser] = useState(\"\");\r\n\r\n  let currentLocation = props.location.pathname.substring(5);\r\n  const updateData = props.updateData;\r\n\r\n  useEffect(() => {\r\n    // If token exists\r\n    if (token) {\r\n      let dropbox = new Dropbox({ accessToken: token });\r\n\r\n      // if then (Fetching files/folders) else (search)\r\n      if (search) {\r\n        // Search\r\n        dropbox.filesSearch({ path: '', query: search })\r\n          .then(function (response) {\r\n            const files = response.matches.map(file => {\r\n              return file.metadata\r\n            });\r\n            updateData(files)\r\n          })\r\n      }\r\n    }\r\n  }, [token, search, currentLocation]);\r\n\r\n  //Listening to favorites observable\r\n  //updateFavorites is used only here. Anywhere else, use updateFavoriteObservable to update favorites.\r\n  useEffect(() => {\r\n    const subscription = favorites$.subscribe(updateFavorites);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  function onClickAddFavorite(event) {\r\n    //Finding out id\r\n    let id = event.target.id;\r\n\r\n    //Looking for the right file/folder in data (matching on id)\r\n    let targetObject;\r\n    for (let object of props.data) {\r\n      if (object.id === id) {\r\n        targetObject = { ...object };\r\n      }\r\n    }\r\n\r\n    //Making a copy of favorites array to work with\r\n    let newFavoritesArray = favorites.slice();\r\n\r\n    //Adding new object to array\r\n    newFavoritesArray.push(targetObject);\r\n\r\n    //Updating favorites\r\n    updateFavoriteObservable(newFavoritesArray);\r\n  }\r\n\r\n  function onClickRemoveFavorite(event) {\r\n    let id = event.target.id;\r\n    let filteredFavorites = favorites.filter(object => {\r\n      return object.id !== id;\r\n    });\r\n    updateFavoriteObservable(filteredFavorites);\r\n  }\r\n\r\n\r\n  /*------------------------------------- Render table data ---------------------------------------------*/\r\n  // Table data Last modified calculations\r\n  function handleLastModified(date) {\r\n    let day = date.substring(8, 10);\r\n    let month = date.substring(5, 7);\r\n    let year = date.substring(0, 4);\r\n\r\n    let months = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n\r\n    month = month.replace(/^0+/, '');\r\n    day = day.replace(/^0+/, '');\r\n    let monthShow = months[month - 1];\r\n\r\n    return <label>{day + ' ' + monthShow + ' ' + year}</label>\r\n  }\r\n\r\n  // Table data size calculations in Bytes, KB, MB, GB, TB, PB, EB, ZB, YB\r\n  function handleSize(size) {\r\n    let sizes = [' B', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\r\n    for (let i = 1; i < sizes.length; i++) {\r\n      if (size < Math.pow(1024, i))\r\n        return (Math.round((size / Math.pow(1024, i - 1)) * 100) / 100) + sizes[i - 1];\r\n    }\r\n    return size;\r\n  }\r\n  /*------------------------------------- End Render table data ---------------------------------------------*/\r\n\r\n  /*------------------------------------- Download files ---------------------------------------------*/\r\n  // Function to download files\r\n  function handleDownloadFile(fileName, filePath) {\r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.filesDownload({ path: filePath })\r\n      .then((response) => {\r\n        console.log(\"File details to be download: \", response);\r\n        let url = URL.createObjectURL(response.fileBlob);\r\n        let downloadButton = document.createElement('a');\r\n        downloadButton.setAttribute('href', url);\r\n        downloadButton.setAttribute('download', response.name);\r\n        downloadButton.click();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      })\r\n  }\r\n  /*------------------------------------- End Download files ---------------------------------------------*/\r\n\r\n/*------------------------------------- Rename ---------------------------------------------\r\n\r\nconst [fileToDelete, updateFileToDelete] = useState(null);\r\nconst [currentFolder, setCurrentFolder] = useState([]);\r\nconst [folderName, updateFolderName] = useState(\"\");\r\nconst [renameFileData, setRenameFileData] = useState({});\r\n\r\nfunction toggleFolder(file) {\r\n  // let fileData = {\r\n  //   fileName: file.name,\r\n  //   path: file.path_display,\r\n  // }\r\n  // setRenameFileData(fileData);\r\n  updateModal(true)\r\n  \r\n}\r\n\r\n//Closing modal\r\nfunction exitModal() {\r\n  updateModal(false)\r\n}\r\n\r\n  // Handle input\r\n  function handleFolderName(e) {\r\n  \r\n      // let fileData = {\r\n  //   fileName: file.name,\r\n  //   path: file.path_display,\r\n  // }\r\n  // setRenameFileData(fileData);\r\n    console.log(\"console log input value: \", e.target.value);\r\n    let fileData = JSON.parse(JSON.stringify(renameFileData));\r\n    fileData.fileName = e.target.value;\r\n    updateFolderName(fileData);\r\n  }\r\n\r\nfunction handleRename() {\r\n  console.log('rename test');\r\n  const currentPath = window.location.pathname.substr(5);\r\n  let fileData = JSON.parse(JSON.stringify(renameFileData))\r\n  let newPath = fileData.path;\r\n  newPath = newPath.split('/');\r\n  newPath[newPath.length - 1] = fileData.fileName;\r\n  newPath = newPath.join('/');\r\n\r\n  const dbx = new Dropbox({accessToken: token$.value, fetch});\r\n  dbx.filesMoveV2({\r\n    from_path: fileData.path,\r\n    to_path: newPath,\r\n  })\r\n  .then((res) => {\r\n    let renamedFile = res.metadata\r\n    const dbx = new Dropbox({accessToken: token$.value, fetch});\r\n    dbx.filesListFolder({path: currentPath})\r\n    .then(res => {\r\n      updateFavorites(renamedFile);\r\n      setCurrentFolder(res.entries);\r\n      updateModal(true)\r\n    })\r\n  })\r\n  \r\n}\r\n/*------------------------------------- End Rename ---------------------------------------------*/\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n     {/* ------------------------------------- Rename --------------------------------------------- \r\n     <Modal isOpen={modal} toggle={toggleFolder} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\r\n        <ModalHeader toggle={exitModal}>Rename file/folder</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            {\r\n            <Label for=\"name\">Rename file/folder</Label>\r\n              <Input type=\"text\" placeholder=\"Folder name\" onChange={handleFolderName} value={folderName} />\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={() => handleRename(props.file)}>Rename</Button>{' '}\r\n          <Button color=\"secondary\" onClick={exitModal}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n       ------------------------------------- End Rename --------------------------------------------- */}\r\n\r\n\r\n      {/* ------------------------------------------ Search ----------------------------------------------- */}\r\n      <div style={{ position:\"relative\", width: \"100%\" }}>\r\n        <Breadcrumbs path={props.location.pathname} />\r\n        <Input type=\"text\" size=\"lg\" placeholder=\"Search\" onChange={(e) => { updateSearch(e.target.value); }} value={props.search} style={{ position: \"absolute\", width: \"30%\", minWidth: \"150px\", right: \"0px\", top: \"-1px\" }} />\r\n      </div>\r\n\r\n      {/* Table file/folder data */}\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Name</th>\r\n            <th>Last modified</th>\r\n            <th>Size</th>\r\n            <th>Menu</th>\r\n            <th><i class=\"material-icons\" style={{ verticalAlign: \"bottom\", color: \"#31572C\" }}>star_border</i></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map(file => {\r\n\r\n            //Favorite logic\r\n            let favorite = false;\r\n            for (let object of favorites) {\r\n              if (object.id === file.id) {\r\n                favorite = true;\r\n                break;\r\n              }\r\n            }\r\n\r\n            //<Button file={file} onClick={() => { updateFileToDelete(file); toggleFolder() }}>Rename</Button>\r\n\r\n            return (\r\n              <tr key={file.id}>\r\n                <td style={{color: \"#31572C\"}}><Thumbnail file={file} /></td>\r\n                <td className=\"link\">{file[\".tag\"] === \"folder\" ? <Link to={`/home${file.path_display}`}>{file.name}</Link> : <span onClick={() => handleDownloadFile(file.name, file.path_display)} style={{ cursor: 'pointer', color: '#31572C' }}>{file.name}</span>}</td>\r\n                <td>{file.server_modified ? handleLastModified(file.server_modified) : null}</td>\r\n                <td>{handleSize(file.size)}</td>\r\n                \r\n                <td><Dropdown file={file} onDataChange={props.onDataChange} location={props.location} /></td>\r\n                <td className=\"link\">\r\n                  { favorite ? <FilledStar id={file.id} onClickRemoveFavorite={onClickRemoveFavorite} /> : <Star id={file.id} onClickAddFavorite={onClickAddFavorite} />}\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Data;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$, updateToken } from '../store';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst CreateFolder = (props) => {\r\n\r\n  const [modal, updateModal] = useState(false);\r\n  const [folderName, updateFolderName] = useState(\"\");\r\n  const filePath = props.location.pathname.substring(5);\r\n\r\n  // Triggering modal to open\r\n  function toggleFolder() {\r\n    updateModal(true)\r\n  }\r\n\r\n  //Closing modal\r\n  function exitModal() {\r\n    updateModal(false)\r\n  }\r\n\r\n  // Handle input\r\n  function handleFolderName(e) {\r\n    updateFolderName(e.target.value);\r\n  }\r\n\r\n  // Handling create button function\r\n  function handleNewFolder() {\r\n    let dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.filesCreateFolder({ path: filePath + \"/\" + folderName, autorename: true })\r\n      .then((response) => {\r\n        props.onNewFolder(response);\r\n        exitModal();\r\n        //window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggleFolder}>New Folder</Button>\r\n      <Modal isOpen={modal} toggle={toggleFolder} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\r\n        <ModalHeader toggle={exitModal}>Create New Folder</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"name\">Folder name</Label>\r\n            <Input type=\"text\" placeholder=\"Folder name\" onChange={handleFolderName} value={folderName} />\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"success\" onClick={handleNewFolder}>Create</Button>{' '}\r\n          <Button color=\"secondary\" onClick={exitModal}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateFolder;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table } from \"reactstrap\";\r\nimport \"./Data.css\";\r\nimport { Dropbox } from \"dropbox\";\r\nimport { token$, updateToken } from \"../store\";\r\nimport { favorites$, updateFavoriteObservable } from '../store';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from \"reactstrap\";\r\nimport Dropdown from './Dropdown';\r\nimport { Star } from './Star.js';\r\nimport { FilledStar } from './FilledStar.js';\r\nimport Thumbnail from './Thumbnail';\r\nimport CreateFolder from './CreateFolder';\r\n\r\nexport default function Favorite(props) {\r\n  const [token, updateToken] = useState(token$.value);\r\n  const [favorites, updateFavorites] = useState(favorites$.value); //favorites is an array of objects\r\n  const [search, updateSearch] = useState('');\r\n\r\n  // Using this instead of helmet because it was causing problem while search\r\n  useEffect(() => {\r\n    document.title = \"Home\";\r\n  })\r\n\r\n  //Listening to token observable\r\n  useEffect(() => {\r\n    const subscription = token$.subscribe(updateToken);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  //Listening to favorites observable\r\n  //'updateFavorites' is used only here. Anywhere else, use updateFavoriteObservable to update favorites.\r\n  useEffect(() => {\r\n    const subscription = favorites$.subscribe(updateFavorites);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  /*------------------------------------- Download files ---------------------------------------------*/\r\n  // Function to download files\r\n  function handleDownloadFile(fileName, filePath) {\r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.filesDownload({ path: filePath })\r\n      .then((response) => {\r\n        console.log(\"File details to be download: \", response);\r\n        let url = URL.createObjectURL(response.fileBlob);\r\n        let downloadButton = document.createElement('a');\r\n        downloadButton.setAttribute('href', url);\r\n        downloadButton.setAttribute('download', response.name);\r\n        downloadButton.click();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      })\r\n  }\r\n/*------------------------------------- End Download files ---------------------------------------------*/\r\n\r\n  // Table data Last modified calculations\r\n  function handleLastModified(date) {\r\n    let day = date.substring(8, 10);\r\n    let month = date.substring(5, 7);\r\n    let year = date.substring(0, 4);\r\n\r\n    let months = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n\r\n    month = month.replace(/^0+/, '');\r\n    day = day.replace(/^0+/, '');\r\n    let monthShow = months[month - 1];\r\n\r\n    return <label>{day + ' ' + monthShow + ' ' + year}</label>\r\n  }\r\n\r\n  // Table data size calculations in Bytes, KB, MB, GB, TB, PB, EB, ZB, YB\r\n  function handleSize(size) {\r\n    let sizes = [' B', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\r\n    for (let i = 1; i < sizes.length; i++) {\r\n      if (size < Math.pow(1024, i))\r\n        return (Math.round((size / Math.pow(1024, i - 1)) * 100) / 100) + sizes[i - 1];\r\n    }\r\n    return size;\r\n  }\r\n\r\n  function onClickRemoveFavorite(event) {\r\n    let id = event.target.id;\r\n    let filteredFavorites = favorites.filter(object => {\r\n      return object.id !== id;\r\n    });\r\n    updateFavoriteObservable(filteredFavorites);\r\n  }\r\n\r\n  function redirectToHome(event) {\r\n    props.updateActiveTab('1');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Table style={{ marginTop: \"1em\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Type</th>\r\n              <th>Name</th>\r\n              <th>Last modified</th>\r\n              <th>Size</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {favorites.map((file) => {\r\n\r\n              //console.log('file.path_display: ', file.path_display);\r\n\r\n              return (\r\n                <tr key={file.id}>\r\n                  <td style={{color: \"#31572C\"}}><Thumbnail file={file} /></td>\r\n                  <td>{file[\".tag\"] === \"folder\" ? <Link to={`/home${file.path_display}`} onClick={redirectToHome}>{file.name}</Link> : <span onClick={() => handleDownloadFile(file.name, file.path_display)} style={{ cursor: 'pointer', color: 'blue' }}>{file.name}</span>}</td>\r\n                  <td>{file.server_modified ? handleLastModified(file.server_modified) : null}</td>\r\n                  <td>{handleSize(file.size)}</td>\r\n                  <td><Button size=\"sm\" id={file.id} onClick={onClickRemoveFavorite}>Remove from favorites</Button></td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n       </Table>\r\n\r\n    </>\r\n  );\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$, updateToken, updateFavoriteObservable } from '../store';\r\nimport { Button, FormGroup, FormText, Input, Label, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nfunction UploadFile(props) {\r\n  const [token, updateTokenState] = useState(token$.value);\r\n  const [modal, updateModal] = useState(false);\r\n  const [file, updateFile] =  useState(null);\r\n  const currentLocation = props.location.pathname.substring(5);\r\n\r\n  function toggle() {\r\n    updateModal(!modal)\r\n  }\r\n\r\n  function handleUploadFile(file) {\r\n    const dropbox = new Dropbox({ accessToken: token, fetch });\r\n  \r\n    if (file.size > 0 && file.size < 150000000) {\r\n      dropbox\r\n        .filesUpload({\r\n          contents: file,\r\n          path: `${currentLocation}/${file.name}`\r\n        })\r\n        .then(response => {\r\n          props.onUpload();\r\n          updateModal(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  function onUploadSubmit(e) {\r\n    e.preventDefault();\r\n    handleUploadFile(file);\r\n    updateModal(false);\r\n  }\r\n\r\n  function onChangeFile(e) {\r\n    updateFile(e.target.files[0] || null);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggle}>Upload File</Button>\r\n      <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}>\r\n        <ModalHeader toggle={toggle}>Upload file</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup id=\"upload\">\r\n            <Label htmlFor=\"uploadfile\" id=\"uploadLabel\">Please select a file to upload</Label>\r\n            <Input type=\"file\" name=\"file\" id=\"uploadfile\" onChange={onChangeFile} />\r\n            <FormText color=\"muted\">The size of a file should not exceed 150MB.</FormText>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            htmlFor=\"upload\"\r\n            type=\"submit\"\r\n            color=\"success\"\r\n            disabled={file === null}\r\n            onClick={(e) => onUploadSubmit(e)}\r\n          >\r\n            Upload\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={toggle}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadFile;\r\n","import React from \"react\";\r\nimport { Button, ButtonGroup } from 'reactstrap';\r\nimport UploadFile from './UploadFile';\r\nimport CreateFolder from './CreateFolder';\r\n\r\nconst asideStyle = {\r\n  margin: \"41px 6px 0 6px\",\r\n  width: \"20%\",\r\n  minWidth: \"50px\"\r\n}\r\n\r\nconst accountStyle = {\r\n  position: \"absolute\",\r\n  right: \"10px\",\r\n  top: \"10px\"\r\n}\r\n\r\nconst usernameStyle = {\r\n  marginRight: \"5px\",\r\n  verticalAlign: \"baseline\"\r\n};\r\n\r\nfunction SideMenu(props) {\r\n  return (\r\n    <aside style={asideStyle}>\r\n      <ButtonGroup vertical>\r\n        <UploadFile onUpload={props.onUpload} location={props.location} file={props.file} />\r\n        <CreateFolder onNewFolder={props.onNewFolder} location={props.location} />\r\n      </ButtonGroup>\r\n      <div style={accountStyle}>\r\n        <span style={usernameStyle}>{props.user}</span>\r\n        <Button color=\"success\" onClick={props.logOut}>Log out</Button>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default SideMenu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport { Table, TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col, Input } from \"reactstrap\";\r\nimport { Dropbox } from \"dropbox\";\r\nimport { token$, updateToken, removeAllFavorites } from \"../store\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport Data from \"./Data\";\r\nimport Favorite from \"./Favorite\";\r\nimport SideMenu from \"./SideMenu\";\r\n//import Breadcrumbs from \"./Breadcrumbs\";\r\n\r\nfunction Home(props) {\r\n  const [token, updateTokenState] = useState(token$.value);\r\n  const [data, updateData] = useState([]);\r\n  //const [search, updateSearch] = useState(\"\");\r\n  const [user, updateUser] = useState(\"\");\r\n  const [activeTab, updateActiveTab] = useState(props.location.pathname === \"/home/favorites\" ? \"2\" : \"1\");\r\n  let currentLocation = props.location.pathname.substring(5);\r\n\r\n  // Using this instead of helmet because it was causing problem while search\r\n  useEffect(() => {\r\n    document.title = \"TeaCup\";\r\n  });\r\n\r\n  useEffect(() => {\r\n    const subscription = token$.subscribe(updateTokenState);\r\n    return () => subscription.unsubscribe();\r\n  });\r\n\r\n  //Fetching files/folders in designated path\r\n  function renderData() {\r\n    //If the favorite tab is active, do not make a new fetch\r\n    if(currentLocation === \"/favorites\") {\r\n      return;\r\n    }\r\n\r\n    const dropbox = new Dropbox({ accessToken: token, fetch });\r\n    if (currentLocation === \"/\") {\r\n      currentLocation = \"\";\r\n    }\r\n    dropbox.filesListFolder({ path: currentLocation })\r\n      .then(function (response) {\r\n        updateData(response.entries);\r\n        console.log(response.entries);\r\n        \r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n      renderData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const poll = setInterval(() => {\r\n      renderData();\r\n    }, 3000);\r\n    return() => clearInterval(poll);\r\n  }, [currentLocation]); \r\n\r\n  // Fetch user name\r\n  useEffect(() => {\r\n    const dropbox = new Dropbox({ accessToken: token });\r\n    dropbox\r\n      .usersGetCurrentAccount()\r\n      .then(function (response) {\r\n        updateUser(response.name.given_name);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  }, [token]);\r\n\r\n  if (!token) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  function onNewFolder(folder) {\r\n    renderData();\r\n  }\r\n\r\n  function onUpload() {\r\n    renderData();\r\n  }\r\n\r\n  function onDataChange() {\r\n    renderData()\r\n  }\r\n\r\n  function logOut(e) {\r\n    e.preventDefault();\r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.authTokenRevoke();\r\n    updateToken(null);\r\n    removeAllFavorites();\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", width: \"100%\" }}>\r\n      <div style={{ flexGrow: 1 }}>\r\n        <Nav tabs>\r\n          <NavItem>\r\n            <Link to=\"/home\">\r\n            <NavLink\r\n              className={activeTab === \"1\" ? \"active\" : \"\"}\r\n              onClick={() => updateActiveTab(\"1\")}\r\n              style={{color: \"#31572C\"}}\r\n            >\r\n              <i class=\"material-icons\" style={{ verticalAlign: \"bottom\" }}>\r\n                folder\r\n              </i>\r\n              All\r\n            </NavLink>\r\n            </Link>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Link to=\"/home/favorites\">\r\n            <NavLink\r\n              className={activeTab === \"2\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                updateActiveTab(\"2\");\r\n          }}\r\n              style={{color: \"#31572C\"}}\r\n            >\r\n              <i class=\"material-icons\" style={{ verticalAlign: \"bottom\" }}>\r\n                star\r\n              </i>\r\n              Favorites\r\n            </NavLink>\r\n            </Link>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                {/*<Breadcrumbs path={props.location.pathname} />*/}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Data\r\n                  location={props.location}\r\n                  data={data}\r\n                  updateData={updateData}\r\n                  renderData={renderData}\r\n                  onDataChange={onDataChange} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/home/favorites\" render={(props) => (\r\n                  <Favorite activeTab={activeTab} updateActiveTab={updateActiveTab} {...props} />\r\n                )} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n        </TabContent>\r\n      </div>\r\n      <SideMenu\r\n        location={props.location}\r\n        logOut={logOut}\r\n        user={user}\r\n        onNewFolder={onNewFolder}\r\n        onUpload={onUpload}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Start from \"./Components/Start\";\r\nimport Auth from \"./Components/Auth\";\r\nimport Home from \"./Components/Home\";\r\nimport logoImage from \"./logo.png\";\r\n\r\nconst navStyle = {\r\n  width: \"100%\",\r\n  height: \"80px\",\r\n  margin: \"10px 0 0 0\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  alignItems: \"flex-end\",\r\n};\r\n\r\nconst logoStyle = {\r\n  width: \"50px\",\r\n  position: \"absolute\",\r\n  left: \"10px\",\r\n  top: \"8px\"\r\n};\r\n\r\nconst headerStyle = {\r\n  margin: 0,\r\n  position: \"absolute\",\r\n  left: \"64px\",\r\n  top: \"24px\",\r\n  color: \"#212529\"\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <nav style={navStyle}>\r\n          <Link to=\"/\">\r\n            <img src={logoImage} style={logoStyle} />\r\n          </Link>\r\n          <h1 style={headerStyle}>TeaCup</h1>\r\n        </nav>\r\n      \r\n        <Route exact path=\"/\" component={Start} />\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/home\" component={Home} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}