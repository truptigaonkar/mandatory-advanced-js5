{"version":3,"sources":["logo.png","constants.js","store.js","Components/style.js","Components/Start.js","Components/Auth.js","Components/Breadcrumbs.js","Components/Delete.js","Components/Rename.js","Components/MoveFile.js","Components/Dropdown.js","Components/Star.js","Components/FilledStar.js","Components/Thumbnail.js","Components/Data.js","Components/CreateFolder.js","Components/Favorite.js","Components/UploadFile.js","Components/SideMenu.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CLIENT_ID","token$","BehaviorSubject","window","localStorage","getItem","updateToken","newToken","setItem","removeItem","next","favorites$","JSON","parse","updateFavoriteObservable","newFavoritesArray","favoritesString","stringify","h3Style","marginTop","startButtonStyle","Start","props","_useState","useState","value","_useState2","Object","slicedToArray","token","useEffect","subscription","subscribe","unsubscribe","react_default","a","createElement","react_router","to","Fragment","Helmet","style","Button","color","onClick","event","console","log","authUrl","Dropbox","clientId","getAuthenticationUrl","location","href","Auth","redirect","updateRedirect","queryString","hash","access_token","Breadcrumbs","linkToDirectory","pathElements","path","substring","split","directoryLinks","map","directory","idx","concat","link","BreadcrumbItem","active","length","tag","Breadcrumb","Delete","toggle","modal","updateModal","_useState3","file","_useState4","fileToDelete","_useState5","_useState6","currentFolder","setCurrentFolder","Modal","isOpen","modalTransition","timeout","backdropTransition","ModalHeader","ModalBody","FormGroup","Label","name","ModalFooter","accessToken","fetch","filesDeleteV2","path_lower","then","response","folderToDelete","filter","t","onDataChange","catch","err","error","id","object","handleDelete","Rename","newName","updateNewName","Input","onChange","e","target","placeholder","folder","beforePath","afterPath","dropbox","filesMoveV2","from_path","to_path","autorename","res","filesListFolder","handleFolderRename","AllFolders","data","updateData","folders","updateFolders","recursive","entries","folderList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","element","push","return","allfolders","key","updateToFolder","MoveFile","_useState7","_useState8","_useState9","_useState10","fileToMove","_useState11","_useState12","toFolder","_useState13","_useState14","MoveFile_AllFolders","handleMoveFile","Action","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dropdownOpen","deleteModal","renameModal","moveModal","bind","assertThisInitialized","deleteToggle","renameToggle","moveToggle","setState","prevState","filesCopy","allow_shared_folder","_this2","Dropdown","DropdownToggle","outline","caret","class","DropdownMenu","DropdownItem","Components_Delete","Components_Rename","Components_MoveFile","handleCopy","Component","Star","onClickAddFavorite","verticalAlign","FilledStar","onClickRemoveFavorite","fileType","Thumbnail","url","updateUrl","test","filesGetThumbnail","size","urlBlob","URL","createObjectURL","fileBlob","src","alt","Data","favorites","updateFavorites","search","updateSearch","currentLocation","pathname","targetObject","objectSpread","slice","filesSearch","query","files","matches","metadata","position","width","Components_Breadcrumbs","type","minWidth","right","top","Table","hover","responsive","favorite","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Components_Thumbnail","className","react_router_dom","path_display","filePath","filesDownload","downloadButton","document","setAttribute","click","cursor","server_modified","date","day","month","year","replace","monthShow","moment","fromNow","handleLastModified","sizes","i","Math","pow","round","handleSize","src_Components_Dropdown","CreateFolder","folderName","updateFolderName","toggleFolder","exitModal","for","filesCreateFolder","onNewFolder","Favorite","redirectToHome","updateActiveTab","title","UploadFile","updateFile","onUploadSubmit","preventDefault","filesUpload","contents","onUpload","handleUploadFile","htmlFor","FormText","disabled","asideStyle","margin","accountStyle","usernameStyle","marginRight","SideMenu","ButtonGroup","vertical","Components_UploadFile","Components_CreateFolder","user","logOut","Home","updateTokenState","updateUser","activeTab","renderData","poll","setInterval","clearInterval","usersGetCurrentAccount","given_name","display","flexGrow","Nav","tabs","NavItem","NavLink","TabContent","TabPane","tabId","Row","Col","sm","Components_Data","render","assign","Components_SideMenu","authTokenRevoke","navStyle","height","justifyContent","alignItems","logoStyle","left","headerStyle","App","basename","process","logoImage","exact","component","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38c12156.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7c908eb4.png\";","export const CLIENT_ID = '708xp4tm8gf03u3';","import { BehaviorSubject } from 'rxjs';\n\nexport const token$ = new BehaviorSubject(window.localStorage.getItem('token'));\n\nexport function updateToken(newToken){\n  newToken ? window.localStorage.setItem('token', newToken) : window.localStorage.removeItem('token')\n  token$.next(newToken);\n}\n\nexport const favorites$ = new BehaviorSubject(JSON.parse(window.localStorage.getItem('favorites')) || []);\n\n//For resetting favorites\n//export const favorites$ = new BehaviorSubject([]);\n\nexport function updateFavoriteObservable(newFavoritesArray) {\n  //Turning array into string\n  let favoritesString = JSON.stringify(newFavoritesArray);\n\n  //Updating local storage with new favorites string\n  window.localStorage.setItem('favorites', favoritesString);\n\n  //console.log('local storage: ', window.localStorage);\n\n  //Updating favorites observable\n  favorites$.next(newFavoritesArray);\n}\n\nexport function removeAllFavorites() {\n  window.localStorage.removeItem('favorites');\n  favorites$.next(null);\n}\n","export const h3Style = {\n  marginTop: \"60px\"\n}","import React, { useEffect, useState } from 'react';\nimport { Dropbox } from 'dropbox';\nimport { Button } from 'reactstrap';\nimport { Helmet } from 'react-helmet';\nimport { Redirect } from 'react-router-dom';\nimport { CLIENT_ID } from '../constants';\nimport { token$, updateToken } from '../store';\nimport { h3Style } from './style';\n\nconst startButtonStyle = {\n  marginTop: \"30px\"\n}\n\nexport default function Start(props) {\n\n  const [token, updateToken] = useState(token$.value);\n\n  //Listening to token when the start page is loaded\n  useEffect(() => {\n    const subscription = token$.subscribe(updateToken);\n    return () => subscription.unsubscribe();\n  }, []);\n\n  function onClickLogin(event) {\n\n    //Creating dropbox object\n    console.log(CLIENT_ID);\n    let dropbox = new Dropbox({ clientId: CLIENT_ID });\n\n    //Getting authentication url\n    let authUrl = dropbox.getAuthenticationUrl('https://ayumina.github.io/mandatory-advanced-js5/auth');\n    //let authUrl = dropbox.getAuthenticationUrl('http://localhost:3000/auth'); //To test locally\n\n    console.log(authUrl);\n\n    //Redirecting\n    window.location.href = authUrl;\n  }\n\n  if(token) {\n    return <Redirect to=\"/home\" />;\n  }\n  else {\n    return (\n      <>\n        <Helmet>\n          <title>Start</title>\n        </Helmet>\n\n        <h3 style={h3Style}>File Hosting Service</h3>\n        <Button color=\"success\" onClick={onClickLogin} style={startButtonStyle}>Connect</Button>{' '}\n      </>\n    );\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { token$, updateToken } from '../store';\n\nexport default function Auth(props) {\n  //States\n  const [redirect, updateRedirect] = useState(false);\n\n  function fetchAccessToken() {\n    let location = props.location; //The Route component has a prop called location\n    let parsedHash = queryString.parse(location.hash);\n    let accessToken = parsedHash.access_token;\n    updateToken(accessToken);\n\n    //Then, redirecting...\n    updateRedirect(true);\n  }\n\n  //When the auth component is loaded, fetch the access token from the URL\n  useEffect(fetchAccessToken, []);\n\n  if(redirect) {\n    return <Redirect to=\"/home\"/>;\n  }\n  else {\n    return <p>Redirecting...</p>;\n  }\n}\n","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nfunction Breadcrumbs(props) {\n  let linkToDirectory = \"\";\n  let pathElements = props.path.substring(1).split(\"/\");\n  const directoryLinks = pathElements.map((directory, idx) => {\n    linkToDirectory += `/${directory}`;\n    let link = `/mandatory-advanced-js5${linkToDirectory}`\n    return <BreadcrumbItem active={idx === pathElements.length - 1} tag=\"a\" href={link}>{idx === 0 ? \"Home\" : directory}</BreadcrumbItem>\n  })\n\n  return (\n    <Breadcrumb>\n      {directoryLinks}\n    </Breadcrumb>\n  )\n}\n\nexport default Breadcrumbs;","import React, { useState, useEffect } from \"react\";\nimport { Dropbox } from 'dropbox';\nimport { token$, updateToken, favorites$, updateFavoriteObservable } from \"../store\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\n\nconst Delete = (props) => {\n\n    const [modal, updateModal] = useState(props.toggle);\n    const [fileToDelete, updateFileToDelete] = useState(props.file);\n    const [currentFolder, setCurrentFolder] = useState([]);\n\n    function toggle() {\n      updateModal(!modal)\n    }\n\n    function handleDelete(file) {\n      const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n      dropbox.filesDeleteV2({ path: fileToDelete.path_lower })\n        .then(response => {\n          let folderToDelete = currentFolder.filter((t) => {\n            return file !== t;\n          })\n          setCurrentFolder(folderToDelete);\n          props.onDataChange();\n          toggle();\n        })\n        .catch(err => {\n          console.error(err);\n        })\n\n      //Removing object from favorites\n      let id = file.id;\n      let favorites = favorites$.value;\n      let filteredFavorites = favorites.filter(object => {\n        return object.id !== id;\n      });\n      updateFavoriteObservable(filteredFavorites);\n    }\n\n  return (\n    <>\n    <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\n        <ModalHeader toggle={toggle}>Delete file/folder</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label>Are you sure want to delete \"{fileToDelete && fileToDelete.name}\"?</Label>\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={() => handleDelete(props.file)}>Delete</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n\nexport default Delete;\n","import React, { Component, useState, useEffect } from \"react\";\nimport { Dropbox } from \"dropbox\";\nimport { token$, updateToken } from \"../store\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst Rename = (props) => {\n\n  const [modal, updateModal] = useState(props.toggle);\n  const [newName, updateNewName] = useState(\"\");\n  //const [fileToRename, updateFileToRename] = useState(props.file);\n  //const [currentFolder, setCurrentFolder] = useState([]);\n  //const [folderName, updateFolderName] = useState(\"\");\n  //const [renameFileData, setRenameFileData] = useState({});\n\n  function toggle() {\n    updateModal(!modal)\n  }\n\n  /*\n  function toggleFolder(file) {\n    // let fileData = {\n    //   fileName: file.name,\n    //   path: file.path_display,\n    // }\n    // setRenameFileData(fileData);\n    updateModal(true)\n  }\n  \n  //Closing modal\n  function exitModal() {\n    updateModal(false)\n  }\n\n  // Handle input\n  function handleFolderName(e) {\n\n    // let fileData = {\n    //   fileName: file.name,\n    //   path: file.path_display,\n    // }\n    // setRenameFileData(fileData);\n    console.log(\"console log input value: \", e.target.value);\n    let fileData = JSON.parse(JSON.stringify(renameFileData));\n    fileData.fileName = e.target.value;\n    updateFolderName(fileData); \n  }\n  */\n\n  function handleFolderRename(folder) {\n    const beforePath = folder.path_lower;\n    let afterPath = newName;\n    afterPath = `/${afterPath}`;\n    /*\n    let newPath = fileData.path;\n    newPath = newPath.split('/');\n    newPath[newPath.length - 1] = fileData.fileName;\n    newPath = newPath.join('/');\n    */\n\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.filesMoveV2({\n      from_path: beforePath,\n      to_path: afterPath,\n      autorename: true\n    })\n      .then(res => {\n        dropbox.filesListFolder({ path: afterPath })\n          .then(res => {\n            //setCurrentFolder(res.entries);\n            props.onDataChange();\n            toggle();\n          })\n      }) \n\n  }\n\n/*\n  <FormGroup>\n            <Label for=\"name\">Rename {fileToRename}</Label>\n            <Input type=\"text\" placeholder=\"Folder name\" onChange={handleFolderName} value={folderName} />\n          </FormGroup>\n\n          <FormGroup>\n          <Label htmlFor=\"newName\">Rename {fileToRename}</Label>\n          <Input name=\"newName\" type=\"text\" placeholder=\"New name\" onChange={handleFolderName} value={folderName} />\n          </FormGroup>\n*/\n  return (\n    <>\n      <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\n        <ModalHeader toggle={toggle}>Rename file/folder</ModalHeader>\n        <ModalBody>\n          New name for {props.file.name} (include extentions for files)\n          <Input onChange={(e) => { updateNewName(e.target.value); }} value={newName} placeholder=\"New name\" />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={() => handleFolderRename(props.file)}>Rename</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n\nexport default Rename;","import React, { Component, useState, useEffect } from \"react\";\nimport { Dropbox } from \"dropbox\";\nimport { token$, updateToken } from \"../store\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst AllFolders = (props) => {\n  const [data, updateData] = useState([]);\n  const [folders, updateFolders] = useState([]);\n  const [token, updateTokenState] = useState(token$.value);\n  //const [destinationFolder, updateDestinationFolder] = useState(\"\");\n  const path = \"\";\n\n  useEffect(() => {\n    const dropbox = new Dropbox({ accessToken: token, fetch });\n    dropbox.filesListFolder({ path: path, recursive: true })\n      .then(function (response) {\n        updateData(response.entries);\n        let folderList = [];\n        for (let element of data) {\n          if (element[\".tag\"] === \"folder\") {\n            folderList.push({ name: element.name, path: element.path_lower })\n          }\n        }\n        //console.log(\"folderList\", folderList);\n        updateFolders(folderList);\n      })\n      .catch(function (error) {\n        console.error(error);\n      })\n  },[]);\n\n  const allfolders = folders.map(folder => \n    <option key={folder.path} value={folder.path}>{folder.name}</option>\n  );\n  //console.log(\"data\", data);\n  \n  function onChangeGetFolder(event) {\n    console.log(event.target.value);\n    props.updateToFolder(event.target.value);\n  }\n\n  return (\n    <>\n      <form>\n        <select name=\"folder\" onChange={onChangeGetFolder}>\n          <option value=\"\">Select Folder</option>\n          {allfolders}\n        </select>\n      </form>\n    </>\n  )\n}\n\nconst MoveFile = (props) => {\n  const [modal, updateModal] = useState(props.toggle);\n  const [fileToMove, updateFileToMove] = useState(props.file);\n  const [toFolder, updateToFolder] = useState(\"\");\n  const [currentFolder, setCurrentFolder] = useState([]);\n\n  //let currentLocation = props.location.pathname.substring(5);\n\n  function toggle() {\n    updateModal(!modal)\n  }\n\n  function handleMoveFile(fileToMove) {    \n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    let to_path = toFolder;\n    if (to_path === \"/\") {\n      to_path = \"\";\n    }\n    console.log(fileToMove.path_lower, to_path);\n    dropbox.filesMoveV2({ from_path: fileToMove.path_lower, to_path: to_path, autorename: false })\n    .then(response => {\n      console.log(\"response\", response);\n      \n      props.onDataChange();\n      toggle();\n    })\n    .catch(err => {\n      console.error(err);\n    })\n  }\n\n  return (\n    <>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Move file</ModalHeader>\n        <ModalBody>\n          Move \"{fileToMove && fileToMove.name}\" to <AllFolders updateToFolder={updateToFolder} />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => handleMoveFile(props.file)}>Move</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n\nexport default MoveFile;","import React, { Component } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport \"./Dropdown.css\";\nimport Delete from \"./Delete\";\nimport Rename from \"./Rename\";\nimport MoveFile from \"./MoveFile\";\nimport { token$ } from \"../store.js\";\nimport { Dropbox } from 'dropbox';\n\nclass Action extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdownOpen: false,\n      file: props.file,\n      deleteModal: false,\n      renameModal: false,\n      moveModal: false,\n      onDataChange: props.onDataChange,\n      location: props.location\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.deleteToggle = this.deleteToggle.bind(this);\n    this.renameToggle = this.renameToggle.bind(this);\n    this.moveToggle = this.moveToggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  deleteToggle() {\n    this.setState(prevState => ({\n      deleteModal: !prevState.deleteModal\n    }))\n  }\n\n  renameToggle() {\n    this.setState(prevState => ({\n      renameModal: !prevState.renameModal\n    }))\n  }\n\n  moveToggle() {\n    this.setState(prevState => ({\n      moveModal: !prevState.moveModal\n    }))\n  }\n\n  handleCopy(file) {\n    let path = file.path_lower;\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.filesCopy({\n      from_path: path,\n      to_path: path,\n      allow_shared_folder: true,\n      autorename: true,\n    });\n  }\n\n  render() {\n    return (\n      <Dropdown\n        isOpen={this.state.dropdownOpen}\n        toggle={this.toggle}\n      >\n        <DropdownToggle color=\"primary\" outline caret><i class=\"material-icons\">more_horiz</i></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem onClick={this.deleteToggle}><Delete file={this.state.file} toggle={this.state.deleteModal} onDataChange={this.state.onDataChange} />Delete</DropdownItem> \n          <DropdownItem onClick={this.renameToggle}><Rename file={this.state.file} toggle={this.state.renameModal} onDataChange={this.state.onDataChange} location={this.state.location} />Rename</DropdownItem>\n          <DropdownItem onClick={this.moveToggle}><MoveFile file={this.state.file} toggle={this.state.moveModal} onDataChange={this.state.onDataChange} location={this.state.location} />Move</DropdownItem>\n          <DropdownItem onClick={() => this.handleCopy(this.state.file)}>Copy</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    )\n  }\n}\n\nexport default Action;\n","import React from 'react';\n\nexport function Star(props) {\n  return <i class=\"material-icons\" id={props.id} onClick={props.onClickAddFavorite} style={{ verticalAlign: \"bottom\", color: \"#31572C\" }}>star_border</i>;\n}\n","import React from 'react';\n\nexport function FilledStar(props) {\n  return <i class=\"material-icons\" id={props.id} onClick={props.onClickRemoveFavorite} style={{ verticalAlign: \"bottom\", color: \"#31572C\" }}>star</i>;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Dropbox } from 'dropbox';\nimport { token$ } from '../store';\n\nconst fileType = /\\.(gif|jpg|jpeg|tiff|tif|png|bmp)$/i;\n\nconst Thumbnail = props => {\n  const [url, updateUrl] = useState('');\n\n  useEffect(() => {\n    if (fileType.test(props.file.name)) {\n      const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n      dropbox.filesGetThumbnail({ path: props.file.path_lower, size: 'w32h32' })\n        .then((response) => {\n          let urlBlob = URL.createObjectURL(response.fileBlob);\n          updateUrl(urlBlob);\n        })\n        .catch(function (error) {\n          console.error(error);\n        });\n    }\n  }, [props.file.name, props.file.path_lower])\n\n  // filetype: image\n  if (fileType.test(props.file.name)) {\n    return (\n      <img src={url} alt={props.file.name}></img>\n    )\n    // filetype: file\n  } else if (props.file['.tag'] === 'file') {\n    return (\n      <i class=\"material-icons\">insert_drive_file</i>\n    )\n    // filetype: folder\n  } else if (props.file['.tag'] === 'folder') {\n    return (\n      <i class=\"material-icons\">folder_open</i>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default Thumbnail\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Data.css\";\nimport { Dropbox } from \"dropbox\";\nimport { token$, updateToken, favorites$, updateFavoriteObservable } from \"../store\";\nimport { Table, Input } from \"reactstrap\";\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport Dropdown from './Dropdown';\nimport { Star } from './Star.js';\nimport { FilledStar } from './FilledStar.js';\nimport Thumbnail from './Thumbnail';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label } from \"reactstrap\";\nimport moment from 'moment';\n\nfunction Data(props) {\n  const [modal, updateModal] = useState(false);\n  const [favorites, updateFavorites] = useState(favorites$.value); //favorites is an array of objects\n  const [search, updateSearch] = useState(\"\");\n  const [token, updateTokenState] = useState(token$.value);\n  const [user, updateUser] = useState(\"\");\n\n  let currentLocation = props.location.pathname.substring(5);\n  const updateData = props.updateData;\n\n  useEffect(() => {\n    // If token exists\n    if (token) {\n      let dropbox = new Dropbox({ accessToken: token });\n\n      // if then (Fetching files/folders) else (search)\n      if (search) {\n        // Search\n        dropbox.filesSearch({ path: '', query: search })\n          .then(function (response) {\n            const files = response.matches.map(file => {\n              return file.metadata\n            });\n            updateData(files)\n          })\n      }\n    }\n  }, [token, search, currentLocation]);\n\n  //Listening to favorites observable\n  //updateFavorites is used only here. Anywhere else, use updateFavoriteObservable to update favorites.\n  useEffect(() => {\n    const subscription = favorites$.subscribe(updateFavorites);\n    return () => subscription.unsubscribe();\n  }, []);\n\n  function onClickAddFavorite(event) {\n    //Finding out id\n    let id = event.target.id;\n\n    //Looking for the right file/folder in data (matching on id)\n    let targetObject;\n    for (let object of props.data) {\n      if (object.id === id) {\n        targetObject = { ...object };\n      }\n    }\n\n    //Making a copy of favorites array to work with\n    let newFavoritesArray = favorites.slice();\n\n    //Adding new object to array\n    newFavoritesArray.push(targetObject);\n\n    //Updating favorites\n    updateFavoriteObservable(newFavoritesArray);\n  }\n\n  function onClickRemoveFavorite(event) {\n    let id = event.target.id;\n    let filteredFavorites = favorites.filter(object => {\n      return object.id !== id;\n    });\n    updateFavoriteObservable(filteredFavorites);\n  }\n\n  /*------------------------------------- Render table data ---------------------------------------------*/\n  // Table data Last modified calculations\n  function handleLastModified(date) {\n    let day = date.substring(8, 10);\n    let month = date.substring(5, 7);\n    let year = date.substring(0, 4);\n\n    let months = [\n      \"January\", \"February\", \"March\",\n      \"April\", \"May\", \"June\", \"July\",\n      \"August\", \"September\", \"October\",\n      \"November\", \"December\"\n    ];\n\n    month = month.replace(/^0+/, '');\n    day = day.replace(/^0+/, '');\n    let monthShow = months[month - 1];\n\n    return <label>{day + ' ' + monthShow + ' ' + year + ', ' + moment(date).fromNow()}</label>\n  }\n\n  // Table data size calculations in Bytes, KB, MB, GB, TB, PB, EB, ZB, YB\n  function handleSize(size) {\n    let sizes = [' B', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\n    for (let i = 1; i < sizes.length; i++) {\n      if (size < Math.pow(1024, i))\n        return (Math.round((size / Math.pow(1024, i - 1)) * 100) / 100) + sizes[i - 1];\n    }\n    return size;\n  }\n  /*------------------------------------- End Render table data ---------------------------------------------*/\n\n  /*------------------------------------- Download files ---------------------------------------------*/\n  // Function to download files\n  function handleDownloadFile(fileName, filePath) {\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.filesDownload({ path: filePath })\n      .then((response) => {\n        console.log(\"File details to be download: \", response);\n        let url = URL.createObjectURL(response.fileBlob);\n        let downloadButton = document.createElement('a');\n        downloadButton.setAttribute('href', url);\n        downloadButton.setAttribute('download', response.name);\n        downloadButton.click();\n      })\n      .catch((error) => {\n        console.log(error.response);\n      })\n  }\n  /*------------------------------------- End Download files ---------------------------------------------*/\n\n  return (\n    <>\n      {/* ------------------------------------------ Search ----------------------------------------------- */}\n      <div style={{ position:\"relative\", width: \"100%\" }}>\n        <Breadcrumbs path={props.location.pathname} />\n        <Input type=\"text\" size=\"lg\" placeholder=\"Search\" onChange={(e) => { updateSearch(e.target.value); }} value={props.search} style={{ position: \"absolute\", width: \"30%\", minWidth: \"150px\", right: \"0px\", top: \"-1px\" }} />\n      </div>\n\n      {/* Table file/folder data */}\n      <Table hover responsive>\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Name</th>\n            <th>Last modified</th>\n            <th>Size</th>\n            <th>Menu</th>\n            <th><i class=\"material-icons\" style={{ verticalAlign: \"bottom\", color: \"#31572C\" }}>star_border</i></th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.data.map(file => {\n\n            //Favorite logic\n            let favorite = false;\n            for (let object of favorites) {\n              if (object.id === file.id) {\n                favorite = true;\n                break;\n              }\n            }\n            return (\n              <tr key={file.id}>\n                <td style={{color: \"#31572C\"}}><Thumbnail file={file} /></td>\n                <td className=\"link\">{file[\".tag\"] === \"folder\" ? <Link to={`/home${file.path_display}`}>{file.name}</Link> : <span onClick={() => handleDownloadFile(file.name, file.path_display)} style={{ cursor: 'pointer', color: '#31572C' }}>{file.name}</span>}</td>\n                <td>{file.server_modified ? handleLastModified(file.server_modified) : null}</td>\n                <td>{handleSize(file.size)}</td>\n                \n                <td><Dropdown file={file} onDataChange={props.onDataChange} location={props.location} /></td>\n                <td className=\"link\">\n                  { favorite ? <FilledStar id={file.id} onClickRemoveFavorite={onClickRemoveFavorite} /> : <Star id={file.id} onClickAddFavorite={onClickAddFavorite} />}\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n}\n\nexport default Data;\n","import React, { useState, useEffect } from \"react\";\nimport { Dropbox } from 'dropbox';\nimport { token$, updateToken } from '../store';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\n\nconst CreateFolder = (props) => {\n\n  const [modal, updateModal] = useState(false);\n  const [folderName, updateFolderName] = useState(\"\");\n  const filePath = props.location.pathname.substring(5);\n\n  // Triggering modal to open\n  function toggleFolder() {\n    updateModal(true)\n  }\n\n  //Closing modal\n  function exitModal() {\n    updateModal(false)\n  }\n\n  // Handle input\n  function handleFolderName(e) {\n    updateFolderName(e.target.value);\n  }\n\n  // Handling create button function\n  function handleNewFolder() {\n    let dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.filesCreateFolder({ path: filePath + \"/\" + folderName, autorename: true })\n      .then((response) => {\n        props.onNewFolder(response);\n        exitModal();\n        //window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  }\n\n  return (\n    <>\n      <Button onClick={toggleFolder}>New Folder</Button>\n      <Modal isOpen={modal} toggle={toggleFolder} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\n        <ModalHeader toggle={exitModal}>Create New Folder</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label for=\"name\">Folder name</Label>\n            <Input type=\"text\" placeholder=\"Folder name\" onChange={handleFolderName} value={folderName} />\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleNewFolder}>Create</Button>{' '}\n          <Button color=\"secondary\" onClick={exitModal}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateFolder;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from \"reactstrap\";\nimport \"./Data.css\";\nimport { Dropbox } from \"dropbox\";\nimport { token$, updateToken } from \"../store\";\nimport { favorites$, updateFavoriteObservable } from '../store';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from \"reactstrap\";\nimport Dropdown from './Dropdown';\nimport { Star } from './Star.js';\nimport { FilledStar } from './FilledStar.js';\nimport Thumbnail from './Thumbnail';\nimport CreateFolder from './CreateFolder';\n\nexport default function Favorite(props) {\n  const [token, updateToken] = useState(token$.value);\n  const [favorites, updateFavorites] = useState(favorites$.value); //favorites is an array of objects\n  const [search, updateSearch] = useState('');\n\n  // Using this instead of helmet because it was causing problem while search\n  useEffect(() => {\n    document.title = \"Home\";\n  })\n\n  //Listening to token observable\n  useEffect(() => {\n    const subscription = token$.subscribe(updateToken);\n    return () => subscription.unsubscribe();\n  }, []);\n\n  //Listening to favorites observable\n  //'updateFavorites' is used only here. Anywhere else, use updateFavoriteObservable to update favorites.\n  useEffect(() => {\n    const subscription = favorites$.subscribe(updateFavorites);\n    return () => subscription.unsubscribe();\n  }, []);\n\n  /*------------------------------------- Download files ---------------------------------------------*/\n  // Function to download files\n  function handleDownloadFile(fileName, filePath) {\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.filesDownload({ path: filePath })\n      .then((response) => {\n        console.log(\"File details to be download: \", response);\n        let url = URL.createObjectURL(response.fileBlob);\n        let downloadButton = document.createElement('a');\n        downloadButton.setAttribute('href', url);\n        downloadButton.setAttribute('download', response.name);\n        downloadButton.click();\n      })\n      .catch((error) => {\n        console.log(error.response);\n      })\n  }\n/*------------------------------------- End Download files ---------------------------------------------*/\n\n  // Table data Last modified calculations\n  function handleLastModified(date) {\n    let day = date.substring(8, 10);\n    let month = date.substring(5, 7);\n    let year = date.substring(0, 4);\n\n    let months = [\n      \"January\", \"February\", \"March\",\n      \"April\", \"May\", \"June\", \"July\",\n      \"August\", \"September\", \"October\",\n      \"November\", \"December\"\n    ];\n\n    month = month.replace(/^0+/, '');\n    day = day.replace(/^0+/, '');\n    let monthShow = months[month - 1];\n\n    return <label>{day + ' ' + monthShow + ' ' + year}</label>\n  }\n\n  // Table data size calculations in Bytes, KB, MB, GB, TB, PB, EB, ZB, YB\n  function handleSize(size) {\n    let sizes = [' B', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\n    for (let i = 1; i < sizes.length; i++) {\n      if (size < Math.pow(1024, i))\n        return (Math.round((size / Math.pow(1024, i - 1)) * 100) / 100) + sizes[i - 1];\n    }\n    return size;\n  }\n\n  function onClickRemoveFavorite(event) {\n    let id = event.target.id;\n    let filteredFavorites = favorites.filter(object => {\n      return object.id !== id;\n    });\n    updateFavoriteObservable(filteredFavorites);\n  }\n\n  function redirectToHome(event) {\n    props.updateActiveTab('1');\n  }\n\n  return (\n    <>\n      <Table style={{ marginTop: \"1em\" }}>\n          <thead>\n            <tr>\n              <th>Type</th>\n              <th>Name</th>\n              <th>Last modified</th>\n              <th>Size</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {favorites.map((file) => {\n\n              //console.log('file.path_display: ', file.path_display);\n\n              return (\n                <tr key={file.id}>\n                  <td style={{color: \"#31572C\"}}><Thumbnail file={file} /></td>\n                  <td>{file[\".tag\"] === \"folder\" ? <Link to={`/home${file.path_display}`} onClick={redirectToHome}>{file.name}</Link> : <span onClick={() => handleDownloadFile(file.name, file.path_display)} style={{ cursor: 'pointer', color: 'blue' }}>{file.name}</span>}</td>\n                  <td>{file.server_modified ? handleLastModified(file.server_modified) : null}</td>\n                  <td>{handleSize(file.size)}</td>\n                  <td><Button size=\"sm\" id={file.id} onClick={onClickRemoveFavorite}>Remove from favorites</Button></td>\n                </tr>\n              )\n            })}\n          </tbody>\n       </Table>\n\n    </>\n  );\n\n}\n","import React, { useState } from \"react\";\nimport { Dropbox } from 'dropbox';\nimport { token$, updateToken, updateFavoriteObservable } from '../store';\nimport { Button, FormGroup, FormText, Input, Label, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nfunction UploadFile(props) {\n  const [token, updateTokenState] = useState(token$.value);\n  const [modal, updateModal] = useState(false);\n  const [file, updateFile] =  useState(null);\n  const currentLocation = props.location.pathname.substring(5);\n\n  function toggle() {\n    updateModal(!modal)\n  }\n\n  function handleUploadFile(file) {\n    const dropbox = new Dropbox({ accessToken: token, fetch });\n  \n    if (file.size > 0 && file.size < 150000000) {\n      dropbox\n        .filesUpload({\n          contents: file,\n          path: `${currentLocation}/${file.name}`\n        })\n        .then(response => {\n          props.onUpload();\n          updateModal(false);\n        })\n        .catch(function (error) {\n          console.error(error);\n        });\n    }\n  }\n\n  function onUploadSubmit(e) {\n    e.preventDefault();\n    handleUploadFile(file);\n    updateModal(false);\n  }\n\n  function onChangeFile(e) {\n    updateFile(e.target.files[0] || null);\n  }\n\n  return (\n    <>\n      <Button onClick={toggle}>Upload File</Button>\n      <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}>\n        <ModalHeader toggle={toggle}>Upload file</ModalHeader>\n        <ModalBody>\n          <FormGroup id=\"upload\">\n            <Label htmlFor=\"uploadfile\" id=\"uploadLabel\">Please select a file to upload</Label>\n            <Input type=\"file\" name=\"file\" id=\"uploadfile\" onChange={onChangeFile} />\n            <FormText color=\"muted\">The size of a file should not exceed 150MB.</FormText>\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            htmlFor=\"upload\"\n            type=\"submit\"\n            color=\"success\"\n            disabled={file === null}\n            onClick={(e) => onUploadSubmit(e)}\n          >\n            Upload\n          </Button>{\" \"}\n          <Button\n            color=\"secondary\"\n            onClick={toggle}\n          >\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n\nexport default UploadFile;\n","import React from \"react\";\nimport { Button, ButtonGroup } from 'reactstrap';\nimport UploadFile from './UploadFile';\nimport CreateFolder from './CreateFolder';\n\nconst asideStyle = {\n  margin: \"41px 6px 0 6px\",\n  width: \"20%\",\n  minWidth: \"50px\"\n}\n\nconst accountStyle = {\n  position: \"absolute\",\n  right: \"10px\",\n  top: \"10px\"\n}\n\nconst usernameStyle = {\n  marginRight: \"5px\",\n  verticalAlign: \"baseline\"\n};\n\nfunction SideMenu(props) {\n  return (\n    <aside style={asideStyle}>\n      <ButtonGroup vertical>\n        <UploadFile onUpload={props.onUpload} location={props.location} file={props.file} />\n        <CreateFolder onNewFolder={props.onNewFolder} location={props.location} />\n      </ButtonGroup>\n      <div style={accountStyle}>\n        <span style={usernameStyle}>{props.user}</span>\n        <Button color=\"success\" onClick={props.logOut}>Log out</Button>\n      </div>\n    </aside>\n  );\n}\n\nexport default SideMenu;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport { Table, TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col, Input } from \"reactstrap\";\nimport { Dropbox } from \"dropbox\";\nimport { token$, updateToken, removeAllFavorites } from \"../store\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Data from \"./Data\";\nimport Favorite from \"./Favorite\";\nimport SideMenu from \"./SideMenu\";\n//import Breadcrumbs from \"./Breadcrumbs\";\n\nfunction Home(props) {\n  const [token, updateTokenState] = useState(token$.value);\n  const [data, updateData] = useState([]);\n  //const [search, updateSearch] = useState(\"\");\n  const [user, updateUser] = useState(\"\");\n  const [activeTab, updateActiveTab] = useState(props.location.pathname === \"/home/favorites\" ? \"2\" : \"1\");\n  let currentLocation = props.location.pathname.substring(5);\n\n  // Using this instead of helmet because it was causing problem while search\n  useEffect(() => {\n    document.title = \"TeaCup\";\n  });\n\n  useEffect(() => {\n    const subscription = token$.subscribe(updateTokenState);\n    return () => subscription.unsubscribe();\n  });\n\n  //Fetching files/folders in designated path\n  function renderData() {\n    //If the favorite tab is active, do not make a new fetch\n    if(currentLocation === \"/favorites\") {\n      return;\n    }\n\n    const dropbox = new Dropbox({ accessToken: token, fetch });\n    if (currentLocation === \"/\") {\n      currentLocation = \"\";\n    }\n    dropbox.filesListFolder({ path: currentLocation })\n      .then(function (response) {\n        updateData(response.entries);\n        console.log(response.entries);\n        \n      })\n      .catch(function (error) {\n        console.error(error);\n      })\n  }\n\n  useEffect(() => {\n      renderData();\n  }, []);\n\n  useEffect(() => {\n    const poll = setInterval(() => {\n      renderData();\n    }, 3000);\n    return() => clearInterval(poll);\n  }, [currentLocation]); \n\n  // Fetch user name\n  useEffect(() => {\n    const dropbox = new Dropbox({ accessToken: token });\n    dropbox\n      .usersGetCurrentAccount()\n      .then(function (response) {\n        updateUser(response.name.given_name);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, [token]);\n\n  if (!token) {\n    return <Redirect to=\"/\" />;\n  }\n\n  function onNewFolder(folder) {\n    renderData();\n  }\n\n  function onUpload() {\n    renderData();\n  }\n\n  function onDataChange() {\n    renderData()\n  }\n\n  function logOut(e) {\n    e.preventDefault();\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.authTokenRevoke();\n    updateToken(null);\n    removeAllFavorites();\n  }\n\n  return (\n    <div style={{ display: \"flex\", width: \"100%\" }}>\n      <div style={{ flexGrow: 1 }}>\n        <Nav tabs>\n          <NavItem>\n            <Link to=\"/home\">\n            <NavLink\n              className={activeTab === \"1\" ? \"active\" : \"\"}\n              onClick={() => updateActiveTab(\"1\")}\n              style={{color: \"#31572C\"}}\n            >\n              <i class=\"material-icons\" style={{ verticalAlign: \"bottom\" }}>\n                folder\n              </i>\n              All\n            </NavLink>\n            </Link>\n          </NavItem>\n          <NavItem>\n            <Link to=\"/home/favorites\">\n            <NavLink\n              className={activeTab === \"2\" ? \"active\" : \"\"}\n              onClick={() => {\n                updateActiveTab(\"2\");\n          }}\n              style={{color: \"#31572C\"}}\n            >\n              <i class=\"material-icons\" style={{ verticalAlign: \"bottom\" }}>\n                star\n              </i>\n              Favorites\n            </NavLink>\n            </Link>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                {/*<Breadcrumbs path={props.location.pathname} />*/}\n              </Col>\n            </Row>\n            <Row>\n              <Col sm=\"12\">\n                <Data\n                  location={props.location}\n                  data={data}\n                  updateData={updateData}\n                  renderData={renderData}\n                  onDataChange={onDataChange} />\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Route path=\"/home/favorites\" render={(props) => (\n                  <Favorite activeTab={activeTab} updateActiveTab={updateActiveTab} {...props} />\n                )} />\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n      <SideMenu\n        location={props.location}\n        logOut={logOut}\n        user={user}\n        onNewFolder={onNewFolder}\n        onUpload={onUpload}\n      />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Start from \"./Components/Start\";\nimport Auth from \"./Components/Auth\";\nimport Home from \"./Components/Home\";\nimport logoImage from \"./logo.png\";\n\nconst navStyle = {\n  width: \"100%\",\n  height: \"80px\",\n  margin: \"10px 0 0 0\",\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"flex-end\",\n};\n\nconst logoStyle = {\n  width: \"50px\",\n  position: \"absolute\",\n  left: \"10px\",\n  top: \"8px\"\n};\n\nconst headerStyle = {\n  margin: 0,\n  position: \"absolute\",\n  left: \"64px\",\n  top: \"24px\",\n  color: \"#212529\"\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router basename={process.env.PUBLIC_URL}>\n        <nav style={navStyle}>\n          <Link to=\"/\">\n            <img src={logoImage} style={logoStyle} />\n          </Link>\n          <h1 style={headerStyle}>TeaCup</h1>\n        </nav>\n      \n        <Route exact path=\"/\" component={Start} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/home\" component={Home} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}