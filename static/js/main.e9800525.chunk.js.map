{"version":3,"sources":["logo.png","constants.js","store.js","Components/style.js","Components/Start.js","Components/Auth.js","Components/Breadcrumbs.js","Components/Delete.js","Components/Dropdown.js","Components/Star.js","Components/FilledStar.js","Components/Thumbnail.js","Components/Data.js","Components/CreateFolder.js","Components/Favorite.js","Components/UploadFile.js","Components/SideMenu.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CLIENT_ID","token$","BehaviorSubject","window","localStorage","getItem","updateToken","newToken","setItem","removeItem","next","favorites$","JSON","parse","updateFavoriteObservable","newFavoritesArray","favoritesString","stringify","console","log","h3Style","marginTop","startButtonStyle","Start","props","_useState","useState","value","_useState2","Object","slicedToArray","token","useEffect","subscription","subscribe","unsubscribe","react_default","a","createElement","react_router","to","Fragment","Helmet","style","Button","color","onClick","event","authUrl","Dropbox","clientId","getAuthenticationUrl","location","href","Auth","redirect","updateRedirect","queryString","hash","access_token","Breadcrumbs","linkToDirectory","pathElements","path","substring","split","directoryLinks","map","directory","idx","concat","BreadcrumbItem","active","length","tag","Breadcrumb","Delete","toggle","modal","updateModal","_useState3","file","_useState4","fileToDelete","_useState5","_useState6","currentFolder","setCurrentFolder","Modal","isOpen","modalTransition","timeout","backdropTransition","ModalHeader","ModalBody","FormGroup","Label","name","ModalFooter","accessToken","fetch","filesDeleteV2","path_lower","then","response","folderToDelete","filter","t","onDelete","catch","err","error","Action","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dropdownOpen","deleteModal","bind","assertThisInitialized","deleteToggle","setState","prevState","Dropdown","DropdownToggle","outline","caret","class","DropdownMenu","DropdownItem","Components_Delete","Component","Star","id","onClickAddFavorite","FilledStar","onClickRemoveFavorite","fileType","Thumbnail","url","updateUrl","test","filesGetThumbnail","size","urlBlob","URL","createObjectURL","fileBlob","src","alt","Data","favorites","updateFavorites","search","updateSearch","_useState7","_useState8","_useState9","_useState10","currentLocation","pathname","updateData","targetObject","target","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","data","Symbol","iterator","done","object","objectSpread","return","slice","push","dropbox","filesSearch","query","files","matches","metadata","position","width","Components_Breadcrumbs","Input","type","placeholder","onChange","e","minWidth","right","top","Table","favorite","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","key","Components_Thumbnail","react_router_dom","path_display","filePath","filesDownload","downloadButton","document","setAttribute","click","cursor","server_modified","date","day","month","year","replace","monthShow","handleLastModified","sizes","i","Math","pow","round","handleSize","src_Components_Dropdown","CreateFolder","folderName","updateFolderName","toggleFolder","exitModal","for","filesCreateFolder","autorename","onNewFolder","Favorite","redirectToHome","updateActiveTab","title","UploadFile","updateFile","onUploadSubmit","preventDefault","filesUpload","contents","onUpload","handleUploadFile","htmlFor","FormText","disabled","asideStyle","margin","ulStyle","listStyle","padding","liStyle","fontSize","accountStyle","usernameStyle","marginRight","verticalAlign","SideMenu","className","Components_UploadFile","Components_CreateFolder","user","logOut","Home","updateTokenState","updateUser","activeTab","renderData","filesListFolder","entries","poll","setInterval","clearInterval","usersGetCurrentAccount","given_name","display","flexGrow","Nav","tabs","NavItem","NavLink","TabContent","TabPane","tabId","Row","Col","sm","Components_Data","render","assign","Components_SideMenu","authTokenRevoke","folder","navStyle","height","justifyContent","alignItems","logoStyle","left","headerStyle","App","logoImage","exact","component","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9800525.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7c908eb4.png\";","export const CLIENT_ID = '708xp4tm8gf03u3';","import { BehaviorSubject } from 'rxjs';\r\n\r\nexport const token$ = new BehaviorSubject(window.localStorage.getItem('token'));\r\n\r\nexport function updateToken(newToken){\r\n  newToken ? window.localStorage.setItem('token', newToken) : window.localStorage.removeItem('token')\r\n  token$.next(newToken);\r\n}\r\n\r\nexport const favorites$ = new BehaviorSubject(JSON.parse(window.localStorage.getItem('favorites')) || []);\r\n\r\n//For resetting favorites\r\n//export const favorites$ = new BehaviorSubject([]);\r\n\r\nexport function updateFavoriteObservable(newFavoritesArray) {\r\n  //Turning array into string\r\n  let favoritesString = JSON.stringify(newFavoritesArray);\r\n\r\n  //Updating local storage with new favorites string\r\n  window.localStorage.setItem('favorites', favoritesString);\r\n\r\n  console.log('local storage: ', window.localStorage);\r\n\r\n  //Updating favorites observable\r\n  favorites$.next(newFavoritesArray);\r\n}\r\n\r\nexport function removeFavorites() {\r\n  window.localStorage.removeItem('favorites');\r\n  favorites$.next(null);\r\n}\r\n","export const h3Style = {\r\n  marginTop: \"60px\"\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Dropbox } from 'dropbox';\r\nimport { Button } from 'reactstrap';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { CLIENT_ID } from '../constants';\r\nimport { token$, updateToken } from '../store';\r\nimport { h3Style } from './style';\r\n\r\nconst startButtonStyle = {\r\n  marginTop: \"30px\"\r\n}\r\n\r\nexport default function Start(props) {\r\n\r\n  const [token, updateToken] = useState(token$.value);\r\n\r\n  //Listening to token when the start page is loaded\r\n  useEffect(() => {\r\n    const subscription = token$.subscribe(updateToken);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  // function onClickLoginOnTestAccount(event) {\r\n  //   console.log('Logging in on test account.');\r\n  //   //Creating an instance of the dropbox object\r\n  //   let dropbox = new Dropbox({ accessToken: ACCESS_TOKEN });\r\n  //\r\n  //   //Testing out that the correct account is linked\r\n  //   dropbox.usersGetCurrentAccount()\r\n  //     .then(function (response) {\r\n  //       console.log(response);\r\n  //     })\r\n  //     .catch(function (error) {\r\n  //       console.error(error);\r\n  //     });\r\n  //\r\n  //   //Fetching all folders\r\n  //   dropbox.filesListFolder({ path: '' })\r\n  //     .then(function (response) {\r\n  //       console.log(response.entries);\r\n  //     })\r\n  //     .catch(function (error) {\r\n  //       console.error(error);\r\n  //     });\r\n  // }\r\n\r\n  function onClickLogin(event) {\r\n    console.log('Redirecting...');\r\n\r\n    //Creating dropbox object\r\n    console.log(CLIENT_ID);\r\n    let dropbox = new Dropbox({ clientId: CLIENT_ID });\r\n\r\n    //Getting authentication url\r\n    let authUrl = dropbox.getAuthenticationUrl('http://localhost:3000/auth');\r\n\r\n    console.log(authUrl);\r\n\r\n    //Redirecting\r\n    window.location.href = authUrl;\r\n  }\r\n\r\n  if(token) {\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n  else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>Start</title>\r\n        </Helmet>\r\n\r\n        <h3 style={h3Style}>File Hosting Service</h3>\r\n        <Button color=\"success\" onClick={onClickLogin} style={startButtonStyle}>Connect</Button>{' '}\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { token$, updateToken } from '../store';\r\n\r\nexport default function Auth(props) {\r\n  //States\r\n  const [redirect, updateRedirect] = useState(false);\r\n\r\n  function fetchAccessToken() {\r\n    let location = props.location; //The Route component has a prop called location\r\n    let parsedHash = queryString.parse(location.hash);\r\n    let accessToken = parsedHash.access_token;\r\n    updateToken(accessToken);\r\n\r\n    //Then, redirecting...\r\n    updateRedirect(true);\r\n  }\r\n\r\n  //When the auth component is loaded, fetch the access token from the URL\r\n  useEffect(fetchAccessToken, []);\r\n\r\n  if(redirect) {\r\n    return <Redirect to=\"/home\"/>;\r\n  }\r\n  else {\r\n    return <p>Redirecting...</p>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nfunction Breadcrumbs(props) {\r\n  let linkToDirectory = \"\";\r\n  let pathElements = props.path.substring(1).split(\"/\");\r\n  const directoryLinks = pathElements.map((directory, idx) => {\r\n    linkToDirectory += `/${directory}`;\r\n    return <BreadcrumbItem active={idx === pathElements.length - 1} tag=\"a\" href={linkToDirectory}>{idx === 0 ? \"Home\" : directory}</BreadcrumbItem>\r\n  })\r\n\r\n  return (\r\n    <Breadcrumb>\r\n      {directoryLinks}\r\n    </Breadcrumb>\r\n  )\r\n}\r\n\r\nexport default Breadcrumbs;","import React, { useState, useEffect } from \"react\";\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$, updateToken } from '../store';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst Delete = (props) => {\r\n\r\n    const [modal, updateModal] = useState(props.toggle);\r\n    const [fileToDelete, updateFileToDelete] = useState(props.file);\r\n    const [currentFolder, setCurrentFolder] = useState([]);\r\n  \r\n    function toggle() {\r\n      updateModal(!modal)\r\n    }\r\n  \r\n    function handleDelete(file) {\r\n      const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n      dropbox.filesDeleteV2({ path: fileToDelete.path_lower })\r\n        .then(response => {\r\n          console.log(\"delete response: \", response);\r\n          let folderToDelete = currentFolder.filter((t) => {\r\n            return file !== t;\r\n          })\r\n          setCurrentFolder(folderToDelete);\r\n          props.onDelete();\r\n          toggle();\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        })\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\r\n        <ModalHeader toggle={toggle}>Delete file/folder</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label>Are you sure want to delete \"{fileToDelete && fileToDelete.name}\"?</Label>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={() => handleDelete(props.file)}>Delete</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Delete;","import React, { Component } from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport \"./Dropdown.css\"\r\nimport Delete from \"./Delete\"\r\n\r\nclass Action extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      file: props.file,\r\n      deleteModal: false,\r\n      onDelete: props.onDelete\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.deleteToggle = this.deleteToggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  }\r\n\r\n  deleteToggle() {\r\n    this.setState(prevState => ({\r\n      deleteModal: !prevState.deleteModal\r\n    }))  \r\n  }\r\n\r\n  //onClick={() => { updateFileToDelete(file); toggleFolder() }}\r\n\r\n  render() {\r\n    return (\r\n      <Dropdown\r\n        isOpen={this.state.dropdownOpen}\r\n        toggle={this.toggle}\r\n      >\r\n        <DropdownToggle color=\"primary\" outline caret><i class=\"material-icons\">more_horiz</i></DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem onClick={this.deleteToggle}><Delete file={this.state.file} toggle={this.state.deleteModal} onDelete={this.state.onDelete} />Delete</DropdownItem> \r\n          <DropdownItem>Rename</DropdownItem>\r\n          <DropdownItem>Move</DropdownItem>\r\n          <DropdownItem>Copy</DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Action;","import React from 'react';\r\n\r\nexport function Star(props) {\r\n  return <i class=\"material-icons\" id={props.id} onClick={props.onClickAddFavorite}>star_border</i>;\r\n}\r\n","import React from 'react';\r\n\r\nexport function FilledStar(props) {\r\n  return <i class=\"material-icons\" id={props.id} onClick={props.onClickRemoveFavorite}>star</i>;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$ } from '../store';\r\n\r\nconst fileType = /\\.(gif|jpg|jpeg|tiff|tif|png|bmp)$/i;\r\n\r\nconst Thumbnail = props => {\r\n  const [url, updateUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (fileType.test(props.file.name)) {\r\n      const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n      dropbox.filesGetThumbnail({ path: props.file.path_lower, size: 'w32h32' })\r\n        .then((response) => {\r\n          let urlBlob = URL.createObjectURL(response.fileBlob);\r\n          updateUrl(urlBlob);\r\n        })\r\n        .catch(function (error) {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [props.file.name, props.file.path_lower])\r\n\r\n  // filetype: image\r\n  if (fileType.test(props.file.name)) {\r\n    return (\r\n      <img src={url} alt={props.file.name}></img>\r\n    )\r\n    // filetype: file\r\n  } else if (props.file['.tag'] === 'file') {\r\n    return (\r\n      <i class=\"material-icons\">insert_drive_file</i>\r\n    )\r\n    // filetype: folder\r\n  } else if (props.file['.tag'] === 'folder') {\r\n    return (\r\n      <i class=\"material-icons\">folder</i>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default Thumbnail\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Data.css\";\r\nimport { Dropbox } from \"dropbox\";\r\nimport { token$, updateToken, favorites$, updateFavoriteObservable } from \"../store\";\r\nimport { Table, Input } from \"reactstrap\";\r\nimport Breadcrumbs from \"./Breadcrumbs\";\r\nimport Dropdown from './Dropdown';\r\nimport { Star } from './Star.js';\r\nimport { FilledStar } from './FilledStar.js';\r\nimport Thumbnail from './Thumbnail';\r\n\r\n\r\nfunction Data(props) {\r\n  const [modal, updateModal] = useState(false);\r\n  const [favorites, updateFavorites] = useState(favorites$.value); //favorites is an array of objects\r\n  const [search, updateSearch] = useState(\"\");\r\n  const [token, updateTokenState] = useState(token$.value);\r\n  const [user, updateUser] = useState(\"\");\r\n\r\n  let currentLocation = props.location.pathname.substring(5);\r\n  const updateData = props.updateData;\r\n\r\n  useEffect(() => {\r\n    // If token exists\r\n    if (token) {\r\n      let dropbox = new Dropbox({ accessToken: token });\r\n\r\n      // if then (Fetching files/folders) else (search)\r\n      if (search) {\r\n        // Search\r\n        dropbox.filesSearch({ path: '', query: search })\r\n          .then(function (response) {\r\n            const files = response.matches.map(file => {\r\n              return file.metadata\r\n            });\r\n            updateData(files)\r\n          })\r\n      }\r\n    }\r\n  }, [token, search, currentLocation]);\r\n\r\n  //Listening to favorites observable\r\n  //updateFavorites is used only here. Anywhere else, use updateFavoriteObservable to update favorites.\r\n  useEffect(() => {\r\n    const subscription = favorites$.subscribe(updateFavorites);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  function onClickAddFavorite(event) {\r\n    //Finding out id\r\n    let id = event.target.id;\r\n\r\n    //Looking for the right file/folder in data (matching on id)\r\n    let targetObject;\r\n    for (let object of props.data) {\r\n      if (object.id === id) {\r\n        targetObject = { ...object };\r\n      }\r\n    }\r\n\r\n    //Making a copy of favorites array to work with\r\n    let newFavoritesArray = favorites.slice();\r\n\r\n    //Adding new object to array\r\n    newFavoritesArray.push(targetObject);\r\n\r\n    //Updating favorites\r\n    updateFavoriteObservable(newFavoritesArray);\r\n  }\r\n\r\n  function onClickRemoveFavorite(event) {\r\n    let id = event.target.id;\r\n    let filteredFavorites = favorites.filter(object => {\r\n      return object.id !== id;\r\n    });\r\n    updateFavoriteObservable(filteredFavorites);\r\n  }\r\n\r\n\r\n  /*------------------------------------- Render table data ---------------------------------------------*/\r\n  // Table data Last modified calculations\r\n  function handleLastModified(date) {\r\n    let day = date.substring(8, 10);\r\n    let month = date.substring(5, 7);\r\n    let year = date.substring(0, 4);\r\n\r\n    let months = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n\r\n    month = month.replace(/^0+/, '');\r\n    day = day.replace(/^0+/, '');\r\n    let monthShow = months[month - 1];\r\n\r\n    return <label>{day + ' ' + monthShow + ' ' + year}</label>\r\n  }\r\n\r\n  // Table data size calculations in Bytes, KB, MB, GB, TB, PB, EB, ZB, YB\r\n  function handleSize(size) {\r\n    let sizes = [' B', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\r\n    for (let i = 1; i < sizes.length; i++) {\r\n      if (size < Math.pow(1024, i))\r\n        return (Math.round((size / Math.pow(1024, i - 1)) * 100) / 100) + sizes[i - 1];\r\n    }\r\n    return size;\r\n  }\r\n  /*------------------------------------- End Render table data ---------------------------------------------*/\r\n\r\n  /*------------------------------------- Download files ---------------------------------------------*/\r\n  // Function to download files\r\n  function handleDownloadFile(fileName, filePath) {\r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.filesDownload({ path: filePath })\r\n      .then((response) => {\r\n        console.log(\"File details to be download: \", response);\r\n        let url = URL.createObjectURL(response.fileBlob);\r\n        let downloadButton = document.createElement('a');\r\n        downloadButton.setAttribute('href', url);\r\n        downloadButton.setAttribute('download', response.name);\r\n        downloadButton.click();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      })\r\n  }\r\n  /*------------------------------------- End Download files ---------------------------------------------*/\r\n\r\n  return (\r\n    <>\r\n      {/* ------------------------------------------ Search ----------------------------------------------- */}\r\n      <div style={{ position:\"relative\", width: \"100%\" }}>\r\n        <Breadcrumbs path={props.location.pathname} />\r\n        <Input type=\"text\" size=\"lg\" placeholder=\"Search\" onChange={(e) => { updateSearch(e.target.value); }} value={props.search} style={{ position: \"absolute\", width: \"30%\", minWidth: \"150px\", right: \"0px\", top: \"-1px\" }} />\r\n      </div>\r\n      \r\n      {/* Table file/folder data */}\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Name</th>\r\n            <th>Last modified</th>\r\n            <th>Size</th>\r\n            <th>Menu</th>\r\n            <th><i class=\"material-icons\">star_border</i></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map(file => {\r\n\r\n            //Favorite logic\r\n            let favorite = false;\r\n            for (let object of favorites) {\r\n              if (object.id === file.id) {\r\n                favorite = true;\r\n                break;\r\n              }\r\n            }\r\n\r\n            return (\r\n              <tr key={file.id}>\r\n                <td style={{ color: 'green' }}><Thumbnail file={file} /></td>\r\n                <td>{file[\".tag\"] === \"folder\" ? <Link to={`/home${file.path_display}`}>{file.name}</Link> : <span onClick={() => handleDownloadFile(file.name, file.path_display)} style={{ cursor: 'pointer', color: 'blue' }}>{file.name}</span>}</td>\r\n                <td>{file.server_modified ? handleLastModified(file.server_modified) : null}</td>\r\n                <td>{handleSize(file.size)}</td>\r\n                <td><Dropdown file={file} onDelete={props.onDelete} /></td>\r\n                <td>\r\n                  { favorite ? <FilledStar id={file.id} onClickRemoveFavorite={onClickRemoveFavorite}/> : <Star id={file.id} onClickAddFavorite={onClickAddFavorite}/>}\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Data;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$, updateToken } from '../store';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst CreateFolder = (props) => {\r\n\r\n  const [modal, updateModal] = useState(false);\r\n  const [folderName, updateFolderName] = useState(\"\");\r\n  const filePath = props.location.pathname.substring(5);\r\n\r\n  // Triggering modal to open\r\n  function toggleFolder() {\r\n    updateModal(true)\r\n  }\r\n\r\n  //Closing modal\r\n  function exitModal() {\r\n    updateModal(false)\r\n  }\r\n\r\n  // Handle input\r\n  function handleFolderName(e) {\r\n    updateFolderName(e.target.value);\r\n  }\r\n\r\n  // Handling create button function\r\n  function handleNewFolder() {\r\n    let dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.filesCreateFolder({ path: filePath + \"/\" + folderName, autorename: true })\r\n      .then((response) => {\r\n        props.onNewFolder(response);\r\n        exitModal();\r\n        //window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggleFolder}>New Folder</Button>\r\n      <Modal isOpen={modal} toggle={toggleFolder} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\r\n        <ModalHeader toggle={exitModal}>Create New Folder</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"name\">Folder name</Label>\r\n            <Input type=\"text\" placeholder=\"Folder name\" onChange={handleFolderName} value={folderName} />\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"success\" onClick={handleNewFolder}>Create</Button>{' '}\r\n          <Button color=\"secondary\" onClick={exitModal}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateFolder;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table } from \"reactstrap\";\r\nimport \"./Data.css\";\r\nimport { Dropbox } from \"dropbox\";\r\nimport { token$, updateToken } from \"../store\";\r\nimport { favorites$, updateFavoriteObservable } from '../store';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from \"reactstrap\";\r\nimport Dropdown from './Dropdown';\r\nimport { Star } from './Star.js';\r\nimport { FilledStar } from './FilledStar.js';\r\nimport Thumbnail from './Thumbnail';\r\nimport CreateFolder from './CreateFolder';\r\n\r\nexport default function Favorite(props) {\r\n  const [token, updateToken] = useState(token$.value);\r\n  const [favorites, updateFavorites] = useState(favorites$.value); //favorites is an array of objects\r\n  const [search, updateSearch] = useState('');\r\n\r\n  // Using this instead of helmet because it was causing problem while search\r\n  useEffect(() => {\r\n    document.title = \"Home\";\r\n  })\r\n\r\n  //Listening to token observable\r\n  useEffect(() => {\r\n    const subscription = token$.subscribe(updateToken);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  //Listening to favorites observable\r\n  //'updateFavorites' is used only here. Anywhere else, use updateFavoriteObservable to update favorites.\r\n  useEffect(() => {\r\n    const subscription = favorites$.subscribe(updateFavorites);\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  /*------------------------------------- Download files ---------------------------------------------*/\r\n  // Function to download files\r\n  function handleDownloadFile(fileName, filePath) {\r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.filesDownload({ path: filePath })\r\n      .then((response) => {\r\n        console.log(\"File details to be download: \", response);\r\n        let url = URL.createObjectURL(response.fileBlob);\r\n        let downloadButton = document.createElement('a');\r\n        downloadButton.setAttribute('href', url);\r\n        downloadButton.setAttribute('download', response.name);\r\n        downloadButton.click();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      })\r\n  }\r\n/*------------------------------------- End Download files ---------------------------------------------*/\r\n\r\n  // Table data Last modified calculations\r\n  function handleLastModified(date) {\r\n    let day = date.substring(8, 10);\r\n    let month = date.substring(5, 7);\r\n    let year = date.substring(0, 4);\r\n\r\n    let months = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n\r\n    month = month.replace(/^0+/, '');\r\n    day = day.replace(/^0+/, '');\r\n    let monthShow = months[month - 1];\r\n\r\n    return <label>{day + ' ' + monthShow + ' ' + year}</label>\r\n  }\r\n\r\n  // Table data size calculations in Bytes, KB, MB, GB, TB, PB, EB, ZB, YB\r\n  function handleSize(size) {\r\n    let sizes = [' B', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\r\n    for (let i = 1; i < sizes.length; i++) {\r\n      if (size < Math.pow(1024, i))\r\n        return (Math.round((size / Math.pow(1024, i - 1)) * 100) / 100) + sizes[i - 1];\r\n    }\r\n    return size;\r\n  }\r\n\r\n  function onClickRemoveFavorite(event) {\r\n    let id = event.target.id;\r\n    let filteredFavorites = favorites.filter(object => {\r\n      return object.id !== id;\r\n    });\r\n    updateFavoriteObservable(filteredFavorites);\r\n  }\r\n\r\n  function redirectToHome(event) {\r\n    props.updateActiveTab('1');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Table style={{ marginTop: \"1em\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Type</th>\r\n              <th>Name</th>\r\n              <th>Last modified</th>\r\n              <th>Size</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {favorites.map((file) => {\r\n\r\n              //console.log('file.path_display: ', file.path_display);\r\n\r\n              return (\r\n                <tr key={file.id}>\r\n                  <td style={{ color: 'green' }}><Thumbnail file={file} /></td>\r\n                  <td>{file[\".tag\"] === \"folder\" ? <Link to={`/home${file.path_display}`} onClick={redirectToHome}>{file.name}</Link> : <span onClick={() => handleDownloadFile(file.name, file.path_display)} style={{ cursor: 'pointer', color: 'blue' }}>{file.name}</span>}</td>\r\n                  <td>{file.server_modified ? handleLastModified(file.server_modified) : null}</td>\r\n                  <td>{handleSize(file.size)}</td>\r\n                  <td><button id={file.id} onClick={onClickRemoveFavorite}>Remove from favorites</button></td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n       </Table>\r\n\r\n    </>\r\n  );\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Dropbox } from 'dropbox';\r\nimport { token$, updateToken, updateFavoriteObservable } from '../store';\r\nimport { Button, FormGroup, FormText, Input, Label, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nfunction UploadFile(props) {\r\n  const [token, updateTokenState] = useState(token$.value);\r\n  const [modal, updateModal] = useState(false);\r\n  const [file, updateFile] =  useState(null);\r\n  const currentLocation = props.location.pathname.substring(5);\r\n\r\n  function toggle() {\r\n    updateModal(!modal)\r\n  }\r\n\r\n  function handleUploadFile(file) {\r\n    const dropbox = new Dropbox({ accessToken: token, fetch });\r\n  \r\n    if (file.size > 0 && file.size < 150000000) {\r\n      dropbox\r\n        .filesUpload({\r\n          contents: file,\r\n          path: `${currentLocation}/${file.name}`\r\n        })\r\n        .then(response => {\r\n          props.onUpload();\r\n          updateModal(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  function onUploadSubmit(e) {\r\n    e.preventDefault();\r\n    handleUploadFile(file);\r\n    updateModal(false);\r\n  }\r\n\r\n  function onChangeFile(e) {\r\n    updateFile(e.target.files[0] || null);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggle}>Upload File</Button>\r\n      <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}>\r\n        <ModalHeader toggle={toggle}>Upload file</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup id=\"upload\">\r\n            <Label htmlFor=\"uploadfile\" id=\"uploadLabel\">Please select a file to upload</Label>\r\n            <Input type=\"file\" name=\"file\" id=\"uploadfile\" onChange={onChangeFile} />\r\n            <FormText color=\"muted\">The size of a file should not exceed 150MB.</FormText>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            htmlFor=\"upload\"\r\n            type=\"submit\"\r\n            color=\"success\"\r\n            disabled={file === null}\r\n            onClick={(e) => onUploadSubmit(e)}\r\n          >\r\n            Upload\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={toggle}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadFile;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Input } from 'reactstrap';\r\nimport UploadFile from './UploadFile';\r\nimport \"./SideMenu.css\";\r\nimport CreateFolder from './CreateFolder';\r\n\r\nconst asideStyle = {\r\n  margin: \"41px 6px 0 6px\",\r\n  width: \"20%\",\r\n  minWidth: \"50px\"\r\n}\r\n\r\nconst ulStyle = {\r\n  listStyle: \"none\",\r\n  padding: \"0\"\r\n}\r\n\r\nconst liStyle = {\r\n  marginTop: \"15px\",\r\n  padding: \"0\",\r\n  fontSize: \"large\"\r\n}\r\n\r\nconst accountStyle = {\r\n  position: \"absolute\",\r\n  right: \"10px\",\r\n  top: \"10px\"\r\n}\r\n\r\nconst usernameStyle = {\r\n  marginRight: \"5px\",\r\n  verticalAlign: \"baseline\"\r\n};\r\n\r\nfunction SideMenu(props) {\r\n  return (\r\n    <aside style={asideStyle}>\r\n      <ul style={ulStyle}>\r\n        <li className=\"menu\" style={liStyle}><UploadFile onUpload={props.onUpload} location={props.location} file={props.file} /></li>\r\n        <li className=\"menu\" style={liStyle}><CreateFolder onNewFolder={props.onNewFolder} location={props.location} /></li>\r\n      </ul>\r\n      <div style={accountStyle}>\r\n        <span style={usernameStyle}>{props.user}</span>\r\n        <Button color=\"success\" onClick={props.logOut}>Log out</Button>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default SideMenu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport { Table, TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col, Input } from \"reactstrap\";\r\nimport { Dropbox } from \"dropbox\";\r\nimport { token$, updateToken, removeFavorites } from \"../store\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport Data from \"./Data\";\r\nimport Favorite from \"./Favorite\";\r\nimport SideMenu from \"./SideMenu\";\r\n//import Breadcrumbs from \"./Breadcrumbs\";\r\n\r\nfunction Home(props) {\r\n  const [token, updateTokenState] = useState(token$.value);\r\n  const [data, updateData] = useState([]);\r\n  //const [search, updateSearch] = useState(\"\");\r\n  const [user, updateUser] = useState(\"\");\r\n  const [activeTab, updateActiveTab] = useState(props.location.pathname === \"/home/favorites\" ? \"2\" : \"1\");\r\n  let currentLocation = props.location.pathname.substring(5);\r\n\r\n  // Using this instead of helmet because it was causing problem while search\r\n  useEffect(() => {\r\n    document.title = \"TeaCup\";\r\n  });\r\n\r\n  useEffect(() => {\r\n    const subscription = token$.subscribe(updateTokenState);\r\n    return () => subscription.unsubscribe();\r\n  });\r\n\r\n  //Fetching files/folders in designated path\r\n  function renderData() {\r\n    const dropbox = new Dropbox({ accessToken: token, fetch });\r\n    if (currentLocation === \"/\") {\r\n      currentLocation = \"\";\r\n    }\r\n    dropbox.filesListFolder({ path: currentLocation })\r\n      .then(function (response) {\r\n        updateData(response.entries);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    const poll = setInterval(() => {\r\n      renderData();\r\n    }, 3000);\r\n    return() => clearInterval(poll);\r\n  }, [currentLocation]);\r\n\r\n  // Fetch user name\r\n  useEffect(() => {\r\n    const dropbox = new Dropbox({ accessToken: token });\r\n    dropbox\r\n      .usersGetCurrentAccount()\r\n      .then(function (response) {\r\n        updateUser(response.name.given_name);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  }, [token]);\r\n\r\n  if (!token) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  function onNewFolder(folder) {\r\n    renderData();\r\n  }\r\n\r\n  function onUpload() {\r\n    renderData();\r\n  }\r\n\r\n  function onDelete() {\r\n    renderData()\r\n  }\r\n\r\n  function logOut(e) {\r\n    e.preventDefault();\r\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\r\n    dropbox.authTokenRevoke();\r\n    updateToken(null);\r\n    removeFavorites();\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", width: \"100%\" }}>\r\n      <div style={{ flexGrow: 1 }}>\r\n        <Nav tabs>\r\n          <NavItem>\r\n            <Link to=\"/home\">\r\n            <NavLink\r\n              className={activeTab === \"1\" ? \"active\" : \"\"}\r\n              onClick={() => updateActiveTab(\"1\")}\r\n              style={{color: \"#31572C\"}}\r\n            >\r\n              <i class=\"material-icons\" style={{ verticalAlign: \"bottom\" }}>\r\n                folder\r\n              </i>\r\n              All\r\n            </NavLink>\r\n            </Link>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Link to=\"/home/favorites\">\r\n            <NavLink\r\n              className={activeTab === \"2\" ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                updateActiveTab(\"2\");\r\n          }}\r\n              style={{color: \"#31572C\"}}\r\n            >\r\n              <i class=\"material-icons\" style={{ verticalAlign: \"bottom\" }}>\r\n                star\r\n              </i>\r\n              Favorites\r\n            </NavLink>\r\n            </Link>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                {/*<Breadcrumbs path={props.location.pathname} />*/}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Data \r\n                  location={props.location}\r\n                  data={data} \r\n                  updateData={updateData} \r\n                  renderData={renderData}\r\n                  onDelete={onDelete} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/home/favorites\" render={(props) => (\r\n                  <Favorite activeTab={activeTab} updateActiveTab={updateActiveTab} {...props} />\r\n                )} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n        </TabContent>\r\n      </div>\r\n      <SideMenu\r\n        location={props.location}\r\n        logOut={logOut}\r\n        user={user}\r\n        onNewFolder={onNewFolder}\r\n        onUpload={onUpload}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Start from \"./Components/Start\";\r\nimport Auth from \"./Components/Auth\";\r\nimport Home from \"./Components/Home\";\r\nimport logoImage from \"./logo.png\";\r\n\r\n\r\nconst navStyle = {\r\n  width: \"100%\",\r\n  height: \"80px\",\r\n  margin: \"10px 0 0 0\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  alignItems: \"flex-end\",\r\n};\r\n\r\nconst logoStyle = {\r\n  width: \"50px\",\r\n  position: \"absolute\",\r\n  left: \"10px\",\r\n  top: \"8px\"\r\n};\r\n\r\nconst headerStyle = {\r\n  margin: 0,\r\n  position: \"absolute\",\r\n  left: \"64px\",\r\n  top: \"24px\",\r\n  color: \"#212529\"\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <nav style={navStyle}>\r\n          <Link to=\"/\">\r\n            <img src={logoImage} style={logoStyle} />\r\n          </Link>\r\n          <h1 style={headerStyle}>TeaCup</h1>\r\n        </nav>\r\n\r\n        <Route exact path=\"/\" component={Start} />\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/home\" component={Home} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}