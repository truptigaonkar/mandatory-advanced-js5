{"version":3,"sources":["logo.png","constants.js","store.js","Components/style.js","Components/Start.js","Components/Auth.js","Components/Breadcrumbs.js","Components/Delete.js","Components/MoveFile.js","Components/Dropdown.js","Components/Star.js","Components/FilledStar.js","Components/Thumbnail.js","Components/Data.js","Components/CreateFolder.js","Components/Favorite.js","Components/UploadFile.js","Components/SideMenu.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CLIENT_ID","token$","BehaviorSubject","window","localStorage","getItem","updateToken","newToken","setItem","removeItem","next","favorites$","JSON","parse","updateFavoriteObservable","newFavoritesArray","favoritesString","stringify","h3Style","marginTop","startButtonStyle","Start","props","_useState","useState","value","_useState2","Object","slicedToArray","token","useEffect","subscription","subscribe","unsubscribe","react_default","a","createElement","react_router","to","Fragment","Helmet","style","Button","color","onClick","event","console","log","authUrl","Dropbox","clientId","getAuthenticationUrl","location","href","Auth","redirect","updateRedirect","queryString","hash","access_token","Breadcrumbs","linkToDirectory","pathElements","path","substring","split","directoryLinks","map","directory","idx","concat","BreadcrumbItem","active","length","tag","Breadcrumb","Delete","toggle","modal","updateModal","_useState3","file","_useState4","fileToDelete","_useState5","_useState6","currentFolder","setCurrentFolder","Modal","isOpen","modalTransition","timeout","backdropTransition","ModalHeader","ModalBody","FormGroup","Label","name","ModalFooter","accessToken","fetch","filesDeleteV2","path_lower","then","response","folderToDelete","filter","t","onDataChange","catch","err","error","id","object","handleDelete","AllFolders","moveToFolder","updateMoveToFolder","folderList","allfolders","filesListFolder","recursive","entries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","element","push","path_display","return","folder","MoveFile","fileToMove","_useState7","_useState8","currentLocation","pathname","MoveFile_AllFolders","dropbox","filesMoveV2","from_path","to_path","handleMoveFile","Action","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dropdownOpen","deleteModal","moveModal","bind","assertThisInitialized","deleteToggle","moveToggle","setState","prevState","Dropdown","DropdownToggle","outline","caret","class","DropdownMenu","DropdownItem","Components_Delete","Components_MoveFile","Component","Star","onClickAddFavorite","verticalAlign","FilledStar","onClickRemoveFavorite","fileType","Thumbnail","url","updateUrl","test","filesGetThumbnail","size","urlBlob","URL","createObjectURL","fileBlob","src","alt","Data","favorites","updateFavorites","search","updateSearch","_useState9","_useState10","updateData","targetObject","target","data","objectSpread","slice","filesSearch","query","files","matches","metadata","position","width","Components_Breadcrumbs","Input","type","placeholder","onChange","e","minWidth","right","top","Table","favorite","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","key","Components_Thumbnail","className","react_router_dom","filePath","filesDownload","downloadButton","document","setAttribute","click","cursor","server_modified","date","day","month","year","replace","monthShow","handleLastModified","sizes","i","Math","pow","round","handleSize","src_Components_Dropdown","CreateFolder","folderName","updateFolderName","toggleFolder","exitModal","for","filesCreateFolder","autorename","onNewFolder","Favorite","redirectToHome","updateActiveTab","title","UploadFile","updateFile","onUploadSubmit","preventDefault","filesUpload","contents","onUpload","handleUploadFile","htmlFor","FormText","disabled","asideStyle","margin","accountStyle","usernameStyle","marginRight","SideMenu","ButtonGroup","vertical","Components_UploadFile","Components_CreateFolder","user","logOut","Home","updateTokenState","updateUser","activeTab","renderData","poll","setInterval","clearInterval","usersGetCurrentAccount","given_name","display","flexGrow","Nav","tabs","NavItem","NavLink","TabContent","TabPane","tabId","Row","Col","sm","Components_Data","render","assign","Components_SideMenu","authTokenRevoke","navStyle","height","justifyContent","alignItems","logoStyle","left","headerStyle","App","basename","process","logoImage","exact","component","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sRCA3BC,EAAY,2BCEZC,EAAS,IAAIC,IAAgBC,OAAOC,aAAaC,QAAQ,UAE/D,SAASC,EAAYC,GAC1BA,EAAWJ,OAAOC,aAAaI,QAAQ,QAASD,GAAYJ,OAAOC,aAAaK,WAAW,SAC3FR,EAAOS,KAAKH,GAGP,IAAMI,EAAa,IAAIT,IAAgBU,KAAKC,MAAMV,OAAOC,aAAaC,QAAQ,eAAiB,IAK/F,SAASS,EAAyBC,GAEvC,IAAIC,EAAkBJ,KAAKK,UAAUF,GAGrCZ,OAAOC,aAAaI,QAAQ,YAAaQ,GAKzCL,EAAWD,KAAKK,GCxBX,IAAMG,EAAU,CACrBC,UAAW,QCQPC,EAAmB,CACvBD,UAAW,QAGE,SAASE,EAAMC,GAAO,IAAAC,EAENC,mBAASvB,EAAOwB,OAFVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE5BM,EAF4BH,EAAA,GAErBpB,EAFqBoB,EAAA,GAyBnC,OApBAI,oBAAU,WACR,IAAMC,EAAe9B,EAAO+B,UAAU1B,GACtC,OAAO,kBAAMyB,EAAaE,gBACzB,IAiBAJ,EACMK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,UAIlBJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAACI,EAAA,OAAD,KACEN,EAAAC,EAAAC,cAAA,uBAGFF,EAAAC,EAAAC,cAAA,MAAIK,MAAOvB,GAAX,wBACAgB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,MAAM,UAAUC,QA1B9B,SAAsBC,GAGpBC,QAAQC,IAAI/C,GACZ,IAGIgD,EAHU,IAAIC,UAAQ,CAAEC,SAAUlD,IAGhBmD,qBAAqB,yDAE3CL,QAAQC,IAAIC,GAGZ7C,OAAOiD,SAASC,KAAOL,GAc4BP,MAAOrB,GAAtD,WAAyF,0BC5ClF,SAASkC,EAAKhC,GAAO,IAAAC,EAECC,oBAAS,GAFVE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE3BgC,EAF2B7B,EAAA,GAEjB8B,EAFiB9B,EAAA,GAiBlC,OAFAI,oBAXA,WACE,IAAIsB,EAAW9B,EAAM8B,SAGrB9C,EAFiBmD,IAAY5C,MAAMuC,EAASM,MACfC,cAI7BH,GAAe,IAIW,IAEzBD,EACMrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,UAGbJ,EAAAC,EAAAC,cAAA,0JCRIwB,MAff,SAAqBtC,GACnB,IAAIuC,EAAkB,GAClBC,EAAexC,EAAMyC,KAAKC,UAAU,GAAGC,MAAM,KAC3CC,EAAiBJ,EAAaK,IAAI,SAACC,EAAWC,GAElD,OADAR,GAAe,IAAAS,OAAQF,GAChBlC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAgBC,OAAQH,IAAQP,EAAaW,OAAS,EAAGC,IAAI,IAAIrB,KAAMQ,GAA0B,IAARQ,EAAY,OAASD,KAGvH,OACElC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACGT,sJC4CQU,GApDA,SAACtD,GAAU,IAAAC,EAEOC,mBAASF,EAAMuD,QAFtBnD,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEfuD,EAFepD,EAAA,GAERqD,EAFQrD,EAAA,GAAAsD,EAGqBxD,mBAASF,EAAM2D,MAHpCC,EAAAvD,OAAAC,EAAA,EAAAD,CAAAqD,EAAA,GAGfG,EAHeD,EAAA,GAAAE,GAAAF,EAAA,GAIoB1D,mBAAS,KAJ7B6D,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAIfE,EAJeD,EAAA,GAIAE,EAJAF,EAAA,GAMtB,SAASR,IACPE,GAAaD,GA2BjB,OACE5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACAL,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOC,OAAQX,EAAOD,OAAQA,EAAQa,gBAAiB,CAAEC,QAAS,KAAOC,mBAAoB,CAAED,QAAS,OACpGzD,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAahB,OAAQA,GAArB,sBACA3C,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,KACE5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,KACE7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,qCAAqCb,GAAgBA,EAAac,KAAlE,QAGJ/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACEhE,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,kBAlCtC,SAAsBqC,GACJ,IAAIhC,UAAQ,CAAEkD,YAAalG,EAAOwB,MAAO2E,cACjDC,cAAc,CAAEtC,KAAMoB,EAAamB,aACxCC,KAAK,SAAAC,GACJ,IAAIC,EAAiBnB,EAAcoB,OAAO,SAACC,GACzC,OAAO1B,IAAS0B,IAElBpB,EAAiBkB,GACjBnF,EAAMsF,eACN/B,MAEDgC,MAAM,SAAAC,GACLhE,QAAQiE,MAAMD,KAIlB,IAAIE,EAAK/B,EAAK+B,GAKdlG,EAJgBH,EAAWc,MACOiF,OAAO,SAAAO,GACvC,OAAOA,EAAOD,KAAOA,KAemBE,CAAa5F,EAAM2D,QAAzD,UAAgF,IAChF/C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAASiC,GAAnC,cC7CJsC,GAAa,WAAM,IAAA5F,EACoBC,mBAAS,IAD7BE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAChB6F,EADgB1F,EAAA,GACF2F,EADE3F,EAAA,GAEnB4F,EAAa,GACbC,EAAa,GAuBjB,OArBAzF,oBAAU,WACQ,IAAImB,UAAQ,CAAEkD,YAAalG,EAAOwB,MAAO2E,cACjDoB,gBAAgB,CAAEzD,KAAM,GAAI0D,WAAW,IAC5ClB,KAAK,SAAUC,GACda,EAAmBb,EAASkB,SADJ,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAExB,QAAAC,EAAAC,EAAoBZ,EAApBa,OAAAC,cAAAP,GAAAI,EAAAC,EAAAtH,QAAAyH,MAAAR,GAAA,EAAkC,KAAzBS,EAAyBL,EAAAtG,MACR,WAApB2G,EAAQ,SACVd,EAAWe,KAAK,CAAEpC,KAAMmC,EAAQnC,KAAMlC,KAAMqE,EAAQE,gBAJhC,MAAAxB,GAAAc,GAAA,EAAAC,EAAAf,EAAA,YAAAa,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAOxBN,EAAaD,EAAWnD,IAAI,SAAAqE,GAAM,OAChCtG,EAAAC,EAAAC,cAAA,UAAQX,MAAM,eAAe+G,EAAOvC,QAEtCnD,QAAQC,IAAI,aAAcuE,GAC1BxE,QAAQC,IAAI,aAAcwE,KAE3BV,MAAM,SAAUE,GACfjE,QAAQiE,MAAMA,OAKlB7E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,UAAQ6D,KAAK,UACT/D,EAAAC,EAAAC,cAAA,UAAQX,MAAM,IAAd,iBACC8F,MAkFIkB,GA1EE,SAACnH,GAAU,IAAA0D,EAEGxD,mBAASF,EAAMuD,QAFlBK,EAAAvD,OAAAC,EAAA,EAAAD,CAAAqD,EAAA,GAEnBF,EAFmBI,EAAA,GAEZH,EAFYG,EAAA,GAAAE,EAGa5D,mBAASF,EAAM2D,MAH5BI,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAGnBsD,EAHmBrD,EAAA,GAAAsD,GAAAtD,EAAA,GAIgB7D,mBAAS,KAJzBoH,EAAAjH,OAAAC,EAAA,EAAAD,CAAAgH,EAAA,GAKtBE,GALsBD,EAAA,GAAAA,EAAA,GAKJtH,EAAM8B,SAAS0F,SAAS9E,UAAU,IAExD,SAASa,IACPE,GAAaD,GAiDf,OACE5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOC,OAAQX,EAAOD,OAAQA,GAC5B3C,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAahB,OAAQA,GAArB,aACA3C,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,cACS4C,GAAcA,EAAWzC,KADlC,QAC4C/D,EAAAC,EAAAC,cAAC2G,GAAD,OAE5C7G,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACEhE,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAtDzC,SAAwBqC,GACtB,IAAM+D,EAAU,IAAI/F,UAAQ,CAAEkD,YAAalG,EAAOwB,MAAO2E,cACjC,MAApByC,IACFA,EAAkB,IAEpBG,EAAQC,YAAY,CAAEC,UAAWjE,EAAKqB,WAAY6C,QAAS,YAC1D5C,KAAK,SAAAC,GACJlF,EAAMsF,eACN/B,MAEDgC,MAAM,SAAAC,GACLhE,QAAQiE,MAAMD,KA2C6BsC,CAAe9H,EAAM2D,QAA5D,QAAiF,IACjF/C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAASiC,GAAnC,cClDKwE,eArDb,SAAAA,EAAY/H,GAAO,IAAAgI,EAAA,OAAA3H,OAAA4H,EAAA,EAAA5H,CAAA6H,KAAAH,IACjBC,EAAA3H,OAAA8H,EAAA,EAAA9H,CAAA6H,KAAA7H,OAAA+H,EAAA,EAAA/H,CAAA0H,GAAAM,KAAAH,KAAMlI,KAEDsI,MAAQ,CACXC,cAAc,EACd5E,KAAM3D,EAAM2D,KACZ6E,aAAa,EACbC,WAAW,EACXnD,aAActF,EAAMsF,aACpBxD,SAAU9B,EAAM8B,UAGlBkG,EAAKzE,OAASyE,EAAKzE,OAAOmF,KAAZrI,OAAAsI,EAAA,EAAAtI,CAAA2H,IACdA,EAAKY,aAAeZ,EAAKY,aAAaF,KAAlBrI,OAAAsI,EAAA,EAAAtI,CAAA2H,IACpBA,EAAKa,WAAab,EAAKa,WAAWH,KAAhBrI,OAAAsI,EAAA,EAAAtI,CAAA2H,IAdDA,wEAkBjBE,KAAKY,SAAS,SAAAC,GAAS,MAAK,CAC1BR,cAAeQ,EAAUR,uDAK3BL,KAAKY,SAAS,SAAAC,GAAS,MAAK,CAC1BP,aAAcO,EAAUP,oDAK1BN,KAAKY,SAAS,SAAAC,GAAS,MAAK,CAC1BN,WAAYM,EAAUN,8CAKxB,OACE7H,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CACE7E,OAAQ+D,KAAKI,MAAMC,aACnBhF,OAAQ2E,KAAK3E,QAEb3C,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAgB5H,MAAM,UAAU6H,SAAO,EAACC,OAAK,GAACvI,EAAAC,EAAAC,cAAA,KAAGsI,MAAM,kBAAT,eAC9CxI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACEzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAchI,QAAS4G,KAAKU,cAAchI,EAAAC,EAAAC,cAACyI,GAAD,CAAQ5F,KAAMuE,KAAKI,MAAM3E,KAAMJ,OAAQ2E,KAAKI,MAAME,YAAalD,aAAc4C,KAAKI,MAAMhD,eAAlI,UACA1E,EAAAC,EAAAC,cAACwI,EAAA,EAAD,eACA1I,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAchI,QAAS4G,KAAKW,YAAYjI,EAAAC,EAAAC,cAAC0I,GAAD,CAAU7F,KAAMuE,KAAKI,MAAM3E,KAAMJ,OAAQ2E,KAAKI,MAAMG,UAAWnD,aAAc4C,KAAKI,MAAMhD,aAAcxD,SAAUoG,KAAKI,MAAMxG,WAAnK,QACAlB,EAAAC,EAAAC,cAACwI,EAAA,EAAD,sBA/CWG,aCJd,SAASC,GAAK1J,GACnB,OAAOY,EAAAC,EAAAC,cAAA,KAAGsI,MAAM,iBAAiB1D,GAAI1F,EAAM0F,GAAIpE,QAAStB,EAAM2J,mBAAoBxI,MAAO,CAAEyI,cAAe,SAAUvI,MAAO,YAApH,eCDF,SAASwI,GAAW7J,GACzB,OAAOY,EAAAC,EAAAC,cAAA,KAAGsI,MAAM,iBAAiB1D,GAAI1F,EAAM0F,GAAIpE,QAAStB,EAAM8J,sBAAuB3I,MAAO,CAAEyI,cAAe,SAAUvI,MAAO,YAAvH,QCCT,IAAM0I,GAAW,sCAuCFC,GArCG,SAAAhK,GAAS,IAAAC,EACAC,mBAAS,IADTE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAClBgK,EADkB7J,EAAA,GACb8J,EADa9J,EAAA,GAkBzB,OAfAI,oBAAU,WACJuJ,GAASI,KAAKnK,EAAM2D,KAAKgB,OACX,IAAIhD,UAAQ,CAAEkD,YAAalG,EAAOwB,MAAO2E,cACjDsF,kBAAkB,CAAE3H,KAAMzC,EAAM2D,KAAKqB,WAAYqF,KAAM,WAC5DpF,KAAK,SAACC,GACL,IAAIoF,EAAUC,IAAIC,gBAAgBtF,EAASuF,UAC3CP,EAAUI,KAEX/E,MAAM,SAAUE,GACfjE,QAAQiE,MAAMA,MAGnB,CAACzF,EAAM2D,KAAKgB,KAAM3E,EAAM2D,KAAKqB,aAG5B+E,GAASI,KAAKnK,EAAM2D,KAAKgB,MAEzB/D,EAAAC,EAAAC,cAAA,OAAK4J,IAAKT,EAAKU,IAAK3K,EAAM2D,KAAKgB,OAGD,SAAvB3E,EAAM2D,KAAK,QAElB/C,EAAAC,EAAAC,cAAA,KAAGsI,MAAM,kBAAT,qBAG8B,WAAvBpJ,EAAM2D,KAAK,QAElB/C,EAAAC,EAAAC,cAAA,KAAGsI,MAAM,kBAAT,eAGK,MC+IIwB,OAzKf,SAAc5K,GAAO,IAAAC,EACUC,oBAAS,GADnBE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAAyD,GAAAtD,EAAA,GAAAA,EAAA,GAEkBF,mBAASb,EAAWc,QAFtCyD,EAAAvD,OAAAC,EAAA,EAAAD,CAAAqD,EAAA,GAEZmH,EAFYjH,EAAA,GAEDkH,EAFClH,EAAA,GAAAE,EAGY5D,mBAAS,IAHrB6D,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAGZiH,EAHYhH,EAAA,GAGJiH,EAHIjH,EAAA,GAAAsD,EAIenH,mBAASvB,EAAOwB,OAJ/BmH,EAAAjH,OAAAC,EAAA,EAAAD,CAAAgH,EAAA,GAIZ9G,EAJY+G,EAAA,GAAA2D,GAAA3D,EAAA,GAKQpH,mBAAS,KALjBgL,EAAA7K,OAAAC,EAAA,EAAAD,CAAA4K,EAAA,GAOf1D,GAPe2D,EAAA,GAAAA,EAAA,GAOGlL,EAAM8B,SAAS0F,SAAS9E,UAAU,IAClDyI,EAAanL,EAAMmL,WA4BzB,SAASxB,EAAmBpI,GAE1B,IAGI6J,EAHA1F,EAAKnE,EAAM8J,OAAO3F,GAFWW,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAMjC,QAAAC,EAAAC,EAAmB1G,EAAMsL,KAAzB3E,OAAAC,cAAAP,GAAAI,EAAAC,EAAAtH,QAAAyH,MAAAR,GAAA,EAA+B,KAAtBV,EAAsBc,EAAAtG,MACzBwF,EAAOD,KAAOA,IAChB0F,EAAY/K,OAAAkL,EAAA,EAAAlL,CAAA,GAAQsF,KARS,MAAAH,GAAAc,GAAA,EAAAC,EAAAf,EAAA,YAAAa,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAajC,IAAI9G,EAAoBoL,EAAUW,QAGlC/L,EAAkBsH,KAAKqE,GAGvB5L,EAAyBC,GAG3B,SAASqK,EAAsBvI,GAC7B,IAAImE,EAAKnE,EAAM8J,OAAO3F,GAItBlG,EAHwBqL,EAAUzF,OAAO,SAAAO,GACvC,OAAOA,EAAOD,KAAOA,KAyDzB,OA5GAlF,oBAAU,WAER,GAAID,EAAO,CACT,IAAImH,EAAU,IAAI/F,UAAQ,CAAEkD,YAAatE,IAGrCwK,GAEFrD,EAAQ+D,YAAY,CAAEhJ,KAAM,GAAIiJ,MAAOX,IACpC9F,KAAK,SAAUC,GACd,IAAMyG,EAAQzG,EAAS0G,QAAQ/I,IAAI,SAAAc,GACjC,OAAOA,EAAKkI,WAEdV,EAAWQ,OAIlB,CAACpL,EAAOwK,EAAQxD,IAInB/G,oBAAU,WACR,IAAMC,EAAepB,EAAWqB,UAAUoK,GAC1C,OAAO,kBAAMrK,EAAaE,gBACzB,IAqFDC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KAEEL,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAE2K,SAAS,WAAYC,MAAO,SACxCnL,EAAAC,EAAAC,cAACkL,EAAD,CAAavJ,KAAMzC,EAAM8B,SAAS0F,WAClC5G,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOC,KAAK,OAAO7B,KAAK,KAAK8B,YAAY,SAASC,SAAU,SAACC,GAAQrB,EAAaqB,EAAEhB,OAAOlL,QAAWA,MAAOH,EAAM+K,OAAQ5J,MAAO,CAAE2K,SAAU,WAAYC,MAAO,MAAOO,SAAU,QAASC,MAAO,MAAOC,IAAK,WAIhN5L,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,KACE7L,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGsI,MAAM,iBAAiBjI,MAAO,CAAEyI,cAAe,SAAUvI,MAAO,YAAnE,kBAGRT,EAAAC,EAAAC,cAAA,aACGd,EAAMsL,KAAKzI,IAAI,SAAAc,GAGd,IAAI+I,GAAW,EAHOC,GAAA,EAAAC,GAAA,EAAAC,OAAArG,EAAA,IAItB,QAAAsG,EAAAC,EAAmBlC,EAAnBlE,OAAAC,cAAA+F,GAAAG,EAAAC,EAAA3N,QAAAyH,MAAA8F,GAAA,EACE,GAD4BG,EAAA3M,MACjBuF,KAAO/B,EAAK+B,GAAI,CACzBgH,GAAW,EACX,OAPkB,MAAAlH,GAAAoH,GAAA,EAAAC,EAAArH,EAAA,YAAAmH,GAAA,MAAAI,EAAA9F,QAAA8F,EAAA9F,SAAA,WAAA2F,EAAA,MAAAC,GAWtB,OACEjM,EAAAC,EAAAC,cAAA,MAAIkM,IAAKrJ,EAAK+B,IACZ9E,EAAAC,EAAAC,cAAA,MAAIK,MAAO,CAACE,MAAO,YAAYT,EAAAC,EAAAC,cAACmM,GAAD,CAAWtJ,KAAMA,KAChD/C,EAAAC,EAAAC,cAAA,MAAIoM,UAAU,QAAyB,WAAjBvJ,EAAK,QAAuB/C,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAMnM,GAAE,QAAAgC,OAAUW,EAAKqD,eAAiBrD,EAAKgB,MAAe/D,EAAAC,EAAAC,cAAA,QAAMQ,QAAS,kBAAyBqC,EAAKgB,KApDnIyI,EAoDyIzJ,EAAKqD,kBAnDlK,IAAIrF,UAAQ,CAAEkD,YAAalG,EAAOwB,MAAO2E,cACjDuI,cAAc,CAAE5K,KAAM2K,IAC3BnI,KAAK,SAACC,GACL1D,QAAQC,IAAI,gCAAiCyD,GAC7C,IAAI+E,EAAMM,IAAIC,gBAAgBtF,EAASuF,UACnC6C,EAAiBC,SAASzM,cAAc,KAC5CwM,EAAeE,aAAa,OAAQvD,GACpCqD,EAAeE,aAAa,WAAYtI,EAASP,MACjD2I,EAAeG,UAEhBlI,MAAM,SAACE,GACNjE,QAAQC,IAAIgE,EAAMP,YAZxB,IAAsCkI,GAoD6JjM,MAAO,CAAEuM,OAAQ,UAAWrM,MAAO,YAAcsC,EAAKgB,OAC3O/D,EAAAC,EAAAC,cAAA,UAAK6C,EAAKgK,gBArFxB,SAA4BC,GAC1B,IAAIC,EAAMD,EAAKlL,UAAU,EAAG,IACxBoL,EAAQF,EAAKlL,UAAU,EAAG,GAC1BqL,EAAOH,EAAKlL,UAAU,EAAG,GAS7BoL,EAAQA,EAAME,QAAQ,MAAO,IAC7BH,EAAMA,EAAIG,QAAQ,MAAO,IACzB,IAAIC,EATS,CACX,UAAW,WAAY,QACvB,QAAS,MAAO,OAAQ,OACxB,SAAU,YAAa,UACvB,WAAY,YAKSH,EAAQ,GAE/B,OAAOlN,EAAAC,EAAAC,cAAA,aAAQ+M,EAAM,IAAMI,EAAY,IAAMF,GAqELG,CAAmBvK,EAAKgK,iBAAmB,MACvE/M,EAAAC,EAAAC,cAAA,UAlEd,SAAoBuJ,GAElB,IADA,IAAI8D,EAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,EAAI,EAAGA,EAAID,EAAMhL,OAAQiL,IAChC,GAAI/D,EAAOgE,KAAKC,IAAI,KAAMF,GACxB,OAAQC,KAAKE,MAAOlE,EAAOgE,KAAKC,IAAI,KAAMF,EAAI,GAAM,KAAO,IAAOD,EAAMC,EAAI,GAEhF,OAAO/D,EA4DUmE,CAAW7K,EAAK0G,OACrBzJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC2N,GAAD,CAAU9K,KAAMA,EAAM2B,aAActF,EAAMsF,aAAcxD,SAAU9B,EAAM8B,YAC5ElB,EAAAC,EAAAC,cAAA,MAAIoM,UAAU,QACVR,EAAW9L,EAAAC,EAAAC,cAAC+I,GAAD,CAAYnE,GAAI/B,EAAK+B,GAAIoE,sBAAuBA,IAA4BlJ,EAAAC,EAAAC,cAAC4I,GAAD,CAAMhE,GAAI/B,EAAK+B,GAAIiE,mBAAoBA,YC/GnI+E,GAvDM,SAAC1O,GAAU,IAAAC,EAEDC,oBAAS,GAFRE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEvBuD,EAFuBpD,EAAA,GAEhBqD,EAFgBrD,EAAA,GAAAsD,EAGSxD,mBAAS,IAHlB0D,EAAAvD,OAAAC,EAAA,EAAAD,CAAAqD,EAAA,GAGvBiL,EAHuB/K,EAAA,GAGXgL,EAHWhL,EAAA,GAIxBwJ,EAAWpN,EAAM8B,SAAS0F,SAAS9E,UAAU,GAGnD,SAASmM,IACPpL,GAAY,GAId,SAASqL,IACPrL,GAAY,GAsBd,OACE7C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQE,QAASuN,GAAjB,cACAjO,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOC,OAAQX,EAAOD,OAAQsL,EAAczK,gBAAiB,CAAEC,QAAS,KAAOC,mBAAoB,CAAED,QAAS,OAC5GzD,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAahB,OAAQuL,GAArB,qBACAlO,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,KACE5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,KACE7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAOqK,IAAI,QAAX,eACAnO,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,cAAcC,SA1BvD,SAA0BC,GACxBuC,EAAiBvC,EAAEhB,OAAOlL,QAyBuDA,MAAOwO,MAGpF/N,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACEhE,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAzBhC,WACgB,IAAIK,UAAQ,CAAEkD,YAAalG,EAAOwB,MAAO2E,cAC/CkK,kBAAkB,CAAEvM,KAAM2K,EAAW,IAAMuB,EAAYM,YAAY,IACxEhK,KAAK,SAACC,GACLlF,EAAMkP,YAAYhK,GAClB4J,MAGDvJ,MAAM,SAACE,GACNjE,QAAQC,IAAIgE,EAAMP,cAgBhB,UAAkE,IAClEtE,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAASwN,GAAnC,cCvCK,SAASK,GAASnP,GAAO,IAAAC,EACTC,mBAASvB,EAAOwB,OADPC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACxBjB,GADwBoB,EAAA,GAAAA,EAAA,IAAAsD,EAEDxD,mBAASb,EAAWc,OAFnByD,EAAAvD,OAAAC,EAAA,EAAAD,CAAAqD,EAAA,GAE/BmH,EAF+BjH,EAAA,GAEpBkH,EAFoBlH,EAAA,GAAAE,EAGP5D,mBAAS,IAHF6D,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAwEtC,SAAS+F,EAAsBvI,GAC7B,IAAImE,EAAKnE,EAAM8J,OAAO3F,GAItBlG,EAHwBqL,EAAUzF,OAAO,SAAAO,GACvC,OAAOA,EAAOD,KAAOA,KAKzB,SAAS0J,EAAe7N,GACtBvB,EAAMqP,gBAAgB,KAGxB,OA9EA7O,oBAAU,WACR+M,SAAS+B,MAAQ,SAInB9O,oBAAU,WACR,IAAMC,EAAe9B,EAAO+B,UAAU1B,GACtC,OAAO,kBAAMyB,EAAaE,gBACzB,IAIHH,oBAAU,WACR,IAAMC,EAAepB,EAAWqB,UAAUoK,GAC1C,OAAO,kBAAMrK,EAAaE,gBACzB,IAgEDC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,CAAOtL,MAAO,CAAEtB,UAAW,QACvBe,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,aAGJF,EAAAC,EAAAC,cAAA,aACG+J,EAAUhI,IAAI,SAACc,GAId,OACE/C,EAAAC,EAAAC,cAAA,MAAIkM,IAAKrJ,EAAK+B,IACZ9E,EAAAC,EAAAC,cAAA,MAAIK,MAAO,CAACE,MAAO,YAAYT,EAAAC,EAAAC,cAACmM,GAAD,CAAWtJ,KAAMA,KAChD/C,EAAAC,EAAAC,cAAA,UAAsB,WAAjB6C,EAAK,QAAuB/C,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAMnM,GAAE,QAAAgC,OAAUW,EAAKqD,cAAgB1F,QAAS8N,GAAiBzL,EAAKgB,MAAe/D,EAAAC,EAAAC,cAAA,QAAMQ,QAAS,kBAAyBqC,EAAKgB,KA/E7IyI,EA+EmJzJ,EAAKqD,kBA9E5K,IAAIrF,UAAQ,CAAEkD,YAAalG,EAAOwB,MAAO2E,cACjDuI,cAAc,CAAE5K,KAAM2K,IAC3BnI,KAAK,SAACC,GACL1D,QAAQC,IAAI,gCAAiCyD,GAC7C,IAAI+E,EAAMM,IAAIC,gBAAgBtF,EAASuF,UACnC6C,EAAiBC,SAASzM,cAAc,KAC5CwM,EAAeE,aAAa,OAAQvD,GACpCqD,EAAeE,aAAa,WAAYtI,EAASP,MACjD2I,EAAeG,UAEhBlI,MAAM,SAACE,GACNjE,QAAQC,IAAIgE,EAAMP,YAZxB,IAAsCkI,GA+EuKjM,MAAO,CAAEuM,OAAQ,UAAWrM,MAAO,SAAWsC,EAAKgB,OAChP/D,EAAAC,EAAAC,cAAA,UAAK6C,EAAKgK,gBA9D1B,SAA4BC,GAC1B,IAAIC,EAAMD,EAAKlL,UAAU,EAAG,IACxBoL,EAAQF,EAAKlL,UAAU,EAAG,GAC1BqL,EAAOH,EAAKlL,UAAU,EAAG,GAS7BoL,EAAQA,EAAME,QAAQ,MAAO,IAC7BH,EAAMA,EAAIG,QAAQ,MAAO,IACzB,IAAIC,EATS,CACX,UAAW,WAAY,QACvB,QAAS,MAAO,OAAQ,OACxB,SAAU,YAAa,UACvB,WAAY,YAKSH,EAAQ,GAE/B,OAAOlN,EAAAC,EAAAC,cAAA,aAAQ+M,EAAM,IAAMI,EAAY,IAAMF,GA8CHG,CAAmBvK,EAAKgK,iBAAmB,MACvE/M,EAAAC,EAAAC,cAAA,UA3ChB,SAAoBuJ,GAElB,IADA,IAAI8D,EAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,EAAI,EAAGA,EAAID,EAAMhL,OAAQiL,IAChC,GAAI/D,EAAOgE,KAAKC,IAAI,KAAMF,GACxB,OAAQC,KAAKE,MAAOlE,EAAOgE,KAAKC,IAAI,KAAMF,EAAI,GAAM,KAAO,IAAOD,EAAMC,EAAI,GAEhF,OAAO/D,EAqCYmE,CAAW7K,EAAK0G,OACrBzJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQiJ,KAAK,KAAK3E,GAAI/B,EAAK+B,GAAIpE,QAASwI,GAAxC,wDC3CPyF,OAzEf,SAAoBvP,GAAO,IAAAC,EACSC,mBAASvB,EAAOwB,OADzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAClBM,EADkBH,EAAA,GAAAsD,GAAAtD,EAAA,GAEIF,oBAAS,IAFb0D,EAAAvD,OAAAC,EAAA,EAAAD,CAAAqD,EAAA,GAElBF,EAFkBI,EAAA,GAEXH,EAFWG,EAAA,GAAAE,EAGG5D,mBAAS,MAHZ6D,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAGlBH,EAHkBI,EAAA,GAGZyL,EAHYzL,EAAA,GAInBwD,EAAkBvH,EAAM8B,SAAS0F,SAAS9E,UAAU,GAE1D,SAASa,IACPE,GAAaD,GAsBf,SAASiM,EAAepD,GACtBA,EAAEqD,iBApBJ,SAA0B/L,GACxB,IAAM+D,EAAU,IAAI/F,UAAQ,CAAEkD,YAAatE,EAAOuE,cAE9CnB,EAAK0G,KAAO,GAAK1G,EAAK0G,KAAO,MAC/B3C,EACGiI,YAAY,CACXC,SAAUjM,EACVlB,KAAI,GAAAO,OAAKuE,EAAL,KAAAvE,OAAwBW,EAAKgB,QAElCM,KAAK,SAAAC,GACJlF,EAAM6P,WACNpM,GAAY,KAEb8B,MAAM,SAAUE,GACfjE,QAAQiE,MAAMA,KAOpBqK,CAAiBnM,GACjBF,GAAY,GAOd,OACE7C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQE,QAASiC,GAAjB,eACA3C,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOC,OAAQX,EAAOD,OAAQA,EAAQa,gBAAiB,CAAEC,QAAS,KAAOC,mBAAoB,CAAED,QAAS,OACtGzD,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAahB,OAAQA,GAArB,eACA3C,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,KACE5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAWiB,GAAG,UACZ9E,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAOqL,QAAQ,aAAarK,GAAG,eAA/B,kCACA9E,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOC,KAAK,OAAOvH,KAAK,OAAOe,GAAG,aAAa0G,SAZzD,SAAsBC,GACpBmD,EAAWnD,EAAEhB,OAAOM,MAAM,IAAM,SAYxB/K,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAU3O,MAAM,SAAhB,iDAGJT,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACEhE,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACE2O,QAAQ,SACR7D,KAAK,SACL7K,MAAM,UACN4O,SAAmB,OAATtM,EACVrC,QAAS,SAAC+K,GAAD,OAAOoD,EAAepD,KALjC,UAQU,IACVzL,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,MAAM,YACNC,QAASiC,GAFX,cC7DJ2M,GAAa,CACjBC,OAAQ,iBACRpE,MAAO,MACPO,SAAU,QAGN8D,GAAe,CACnBtE,SAAU,WACVS,MAAO,OACPC,IAAK,QAGD6D,GAAgB,CACpBC,YAAa,MACb1G,cAAe,YAkBF2G,OAff,SAAkBvQ,GAChB,OACEY,EAAAC,EAAAC,cAAA,SAAOK,MAAO+O,IACZtP,EAAAC,EAAAC,cAAC0P,GAAA,EAAD,CAAaC,UAAQ,GACnB7P,EAAAC,EAAAC,cAAC4P,GAAD,CAAYb,SAAU7P,EAAM6P,SAAU/N,SAAU9B,EAAM8B,SAAU6B,KAAM3D,EAAM2D,OAC5E/C,EAAAC,EAAAC,cAAC6P,GAAD,CAAczB,YAAalP,EAAMkP,YAAapN,SAAU9B,EAAM8B,YAEhElB,EAAAC,EAAAC,cAAA,OAAKK,MAAOiP,IACVxP,EAAAC,EAAAC,cAAA,QAAMK,MAAOkP,IAAgBrQ,EAAM4Q,MACnChQ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAStB,EAAM6Q,QAAvC,cCgJOC,OAnKf,SAAc9Q,GAAO,IAAAC,EACeC,mBAASvB,EAAOwB,OAD/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACZM,EADYH,EAAA,GACL2Q,EADK3Q,EAAA,GAAAsD,EAEQxD,mBAAS,IAFjB0D,EAAAvD,OAAAC,EAAA,EAAAD,CAAAqD,EAAA,GAEZ4H,EAFY1H,EAAA,GAENuH,EAFMvH,EAAA,GAAAE,EAIQ5D,mBAAS,IAJjB6D,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAIZ8M,EAJY7M,EAAA,GAINiN,EAJMjN,EAAA,GAAAsD,EAKkBnH,mBAAqC,oBAA5BF,EAAM8B,SAAS0F,SAAiC,IAAM,KALjFF,EAAAjH,OAAAC,EAAA,EAAAD,CAAAgH,EAAA,GAKZ4J,EALY3J,EAAA,GAKD+H,EALC/H,EAAA,GAMfC,EAAkBvH,EAAM8B,SAAS0F,SAAS9E,UAAU,GAaxD,SAASwO,IAEP,GAAuB,eAApB3J,EAAH,CAIA,IAAMG,EAAU,IAAI/F,UAAQ,CAAEkD,YAAatE,EAAOuE,cAC1B,MAApByC,IACFA,EAAkB,IAEpBG,EAAQxB,gBAAgB,CAAEzD,KAAM8E,IAC7BtC,KAAK,SAAUC,GACdiG,EAAWjG,EAASkB,SACpB5E,QAAQC,IAAIyD,EAASkB,WAGtBb,MAAM,SAAUE,GACfjE,QAAQiE,MAAMA,MA4BpB,OAvDAjF,oBAAU,WACR+M,SAAS+B,MAAQ,WAGnB9O,oBAAU,WACR,IAAMC,EAAe9B,EAAO+B,UAAUqQ,GACtC,OAAO,kBAAMtQ,EAAaE,iBAyB5BH,oBAAU,WACN0Q,KACD,IAEH1Q,oBAAU,WACR,IAAM2Q,EAAOC,YAAY,WACvBF,KACC,KACH,OAAM,kBAAMG,cAAcF,KACzB,CAAC5J,IAGJ/G,oBAAU,WACQ,IAAImB,UAAQ,CAAEkD,YAAatE,IAExC+Q,yBACArM,KAAK,SAAUC,GACd8L,EAAW9L,EAASP,KAAK4M,cAE1BhM,MAAM,SAAUE,GACfjE,QAAQiE,MAAMA,MAEjB,CAAClF,IAECA,EAyBHK,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEqQ,QAAS,OAAQzF,MAAO,SACpCnL,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEsQ,SAAU,IACtB7Q,EAAAC,EAAAC,cAAC4Q,EAAA,EAAD,CAAKC,MAAI,GACP/Q,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,KACEhR,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAMnM,GAAG,SACTJ,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,CACE3E,UAAyB,MAAd+D,EAAoB,SAAW,GAC1C3P,QAAS,kBAAM+N,EAAgB,MAC/BlO,MAAO,CAACE,MAAO,YAEfT,EAAAC,EAAAC,cAAA,KAAGsI,MAAM,iBAAiBjI,MAAO,CAAEyI,cAAe,WAAlD,UALF,SAYFhJ,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,KACEhR,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAMnM,GAAG,mBACTJ,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,CACE3E,UAAyB,MAAd+D,EAAoB,SAAW,GAC1C3P,QAAS,WACP+N,EAAgB,MAElBlO,MAAO,CAACE,MAAO,YAEfT,EAAAC,EAAAC,cAAA,KAAGsI,MAAM,iBAAiBjI,MAAO,CAAEyI,cAAe,WAAlD,QAPF,gBAeJhJ,EAAAC,EAAAC,cAACgR,EAAA,EAAD,CAAYb,UAAWA,GACrBrQ,EAAAC,EAAAC,cAACiR,EAAA,EAAD,CAASC,MAAM,KACbpR,EAAAC,EAAAC,cAACmR,EAAA,EAAD,KACErR,EAAAC,EAAAC,cAACoR,EAAA,EAAD,CAAKC,GAAG,QAIVvR,EAAAC,EAAAC,cAACmR,EAAA,EAAD,KACErR,EAAAC,EAAAC,cAACoR,EAAA,EAAD,CAAKC,GAAG,MACNvR,EAAAC,EAAAC,cAACsR,GAAD,CACEtQ,SAAU9B,EAAM8B,SAChBwJ,KAAMA,EACNH,WAAYA,EACZ+F,WAAYA,EACZ5L,aA7DhB,WACE4L,UAgEMtQ,EAAAC,EAAAC,cAACiR,EAAA,EAAD,CAASC,MAAM,KACbpR,EAAAC,EAAAC,cAACmR,EAAA,EAAD,KACErR,EAAAC,EAAAC,cAACoR,EAAA,EAAD,CAAKC,GAAG,MACNvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO0B,KAAK,kBAAkB4P,OAAQ,SAACrS,GAAD,OACpCY,EAAAC,EAAAC,cAACqO,GAAD9O,OAAAiS,OAAA,CAAUrB,UAAWA,EAAW5B,gBAAiBA,GAAqBrP,YAOlFY,EAAAC,EAAAC,cAACyR,GAAD,CACEzQ,SAAU9B,EAAM8B,SAChB+O,OA1EN,SAAgBxE,GACdA,EAAEqD,iBACc,IAAI/N,UAAQ,CAAEkD,YAAalG,EAAOwB,MAAO2E,cACjD0N,kBACRxT,EAAY,MhBpEdH,OAAOC,aAAaK,WAAW,aAC/BE,EAAWD,KAAK,OgB0IVwR,KAAMA,EACN1B,YAxFN,SAAqBhI,GACnBgK,KAwFIrB,SArFN,WACEqB,QAROtQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,2BCrElByR,GAAW,CACf1G,MAAO,OACP2G,OAAQ,OACRvC,OAAQ,aACRqB,QAAS,OACTmB,eAAgB,aAChBC,WAAY,YAGRC,GAAY,CAChB9G,MAAO,OACPD,SAAU,WACVgH,KAAM,OACNtG,IAAK,OAGDuG,GAAc,CAClB5C,OAAQ,EACRrE,SAAU,WACVgH,KAAM,OACNtG,IAAK,OACLnL,MAAO,WAsBM2R,OAnBf,WACE,OACEpS,EAAAC,EAAAC,cAAA,OAAKoM,UAAU,OACftM,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAQ8F,SAAUC,2BACdtS,EAAAC,EAAAC,cAAA,OAAKK,MAAOsR,IACV7R,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAMnM,GAAG,KACPJ,EAAAC,EAAAC,cAAA,OAAK4J,IAAKyI,KAAWhS,MAAO0R,MAE9BjS,EAAAC,EAAAC,cAAA,MAAIK,MAAO4R,IAAX,WAGFnS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOqS,OAAK,EAAC3Q,KAAK,IAAI4Q,UAAWtT,IACjCa,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO0B,KAAK,QAAQ4Q,UAAWrR,IAC/BpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO0B,KAAK,QAAQ4Q,UAAWvC,QCjCnBwC,QACW,cAA7BzU,OAAOiD,SAASyR,UAEe,UAA7B1U,OAAOiD,SAASyR,UAEhB1U,OAAOiD,SAASyR,SAASC,MACvB,2DCXNC,IAASpB,OAAOzR,EAAAC,EAAAC,cAAC4S,GAAD,MAASnG,SAASoG,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7O,KAAK,SAAA8O,GACjCA,EAAaC","file":"static/js/main.3f26173e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7c908eb4.png\";","export const CLIENT_ID = '708xp4tm8gf03u3';","import { BehaviorSubject } from 'rxjs';\n\nexport const token$ = new BehaviorSubject(window.localStorage.getItem('token'));\n\nexport function updateToken(newToken){\n  newToken ? window.localStorage.setItem('token', newToken) : window.localStorage.removeItem('token')\n  token$.next(newToken);\n}\n\nexport const favorites$ = new BehaviorSubject(JSON.parse(window.localStorage.getItem('favorites')) || []);\n\n//For resetting favorites\n//export const favorites$ = new BehaviorSubject([]);\n\nexport function updateFavoriteObservable(newFavoritesArray) {\n  //Turning array into string\n  let favoritesString = JSON.stringify(newFavoritesArray);\n\n  //Updating local storage with new favorites string\n  window.localStorage.setItem('favorites', favoritesString);\n\n  //console.log('local storage: ', window.localStorage);\n\n  //Updating favorites observable\n  favorites$.next(newFavoritesArray);\n}\n\nexport function removeAllFavorites() {\n  window.localStorage.removeItem('favorites');\n  favorites$.next(null);\n}\n","export const h3Style = {\n  marginTop: \"60px\"\n}","import React, { useEffect, useState } from 'react';\nimport { Dropbox } from 'dropbox';\nimport { Button } from 'reactstrap';\nimport { Helmet } from 'react-helmet';\nimport { Redirect } from 'react-router-dom';\nimport { CLIENT_ID } from '../constants';\nimport { token$, updateToken } from '../store';\nimport { h3Style } from './style';\n\nconst startButtonStyle = {\n  marginTop: \"30px\"\n}\n\nexport default function Start(props) {\n\n  const [token, updateToken] = useState(token$.value);\n\n  //Listening to token when the start page is loaded\n  useEffect(() => {\n    const subscription = token$.subscribe(updateToken);\n    return () => subscription.unsubscribe();\n  }, []);\n\n  function onClickLogin(event) {\n\n    //Creating dropbox object\n    console.log(CLIENT_ID);\n    let dropbox = new Dropbox({ clientId: CLIENT_ID });\n\n    //Getting authentication url\n    let authUrl = dropbox.getAuthenticationUrl('https://ayumina.github.io/mandatory-advanced-js5/auth');\n\n    console.log(authUrl);\n\n    //Redirecting\n    window.location.href = authUrl;\n  }\n\n  if(token) {\n    return <Redirect to=\"/home\" />;\n  }\n  else {\n    return (\n      <>\n        <Helmet>\n          <title>Start</title>\n        </Helmet>\n\n        <h3 style={h3Style}>File Hosting Service</h3>\n        <Button color=\"success\" onClick={onClickLogin} style={startButtonStyle}>Connect</Button>{' '}\n      </>\n    );\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { token$, updateToken } from '../store';\n\nexport default function Auth(props) {\n  //States\n  const [redirect, updateRedirect] = useState(false);\n\n  function fetchAccessToken() {\n    let location = props.location; //The Route component has a prop called location\n    let parsedHash = queryString.parse(location.hash);\n    let accessToken = parsedHash.access_token;\n    updateToken(accessToken);\n\n    //Then, redirecting...\n    updateRedirect(true);\n  }\n\n  //When the auth component is loaded, fetch the access token from the URL\n  useEffect(fetchAccessToken, []);\n\n  if(redirect) {\n    return <Redirect to=\"/home\"/>;\n  }\n  else {\n    return <p>Redirecting...</p>;\n  }\n}\n","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nfunction Breadcrumbs(props) {\n  let linkToDirectory = \"\";\n  let pathElements = props.path.substring(1).split(\"/\");\n  const directoryLinks = pathElements.map((directory, idx) => {\n    linkToDirectory += `/${directory}`;\n    return <BreadcrumbItem active={idx === pathElements.length - 1} tag=\"a\" href={linkToDirectory}>{idx === 0 ? \"Home\" : directory}</BreadcrumbItem>\n  })\n\n  return (\n    <Breadcrumb>\n      {directoryLinks}\n    </Breadcrumb>\n  )\n}\n\nexport default Breadcrumbs;","import React, { useState, useEffect } from \"react\";\nimport { Dropbox } from 'dropbox';\nimport { token$, updateToken, favorites$, updateFavoriteObservable } from \"../store\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\n\nconst Delete = (props) => {\n\n    const [modal, updateModal] = useState(props.toggle);\n    const [fileToDelete, updateFileToDelete] = useState(props.file);\n    const [currentFolder, setCurrentFolder] = useState([]);\n\n    function toggle() {\n      updateModal(!modal)\n    }\n\n    function handleDelete(file) {\n      const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n      dropbox.filesDeleteV2({ path: fileToDelete.path_lower })\n        .then(response => {\n          let folderToDelete = currentFolder.filter((t) => {\n            return file !== t;\n          })\n          setCurrentFolder(folderToDelete);\n          props.onDataChange();\n          toggle();\n        })\n        .catch(err => {\n          console.error(err);\n        })\n\n      //Removing object from favorites\n      let id = file.id;\n      let favorites = favorites$.value;\n      let filteredFavorites = favorites.filter(object => {\n        return object.id !== id;\n      });\n      updateFavoriteObservable(filteredFavorites);\n    }\n\n  return (\n    <>\n    <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\n        <ModalHeader toggle={toggle}>Delete file/folder</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label>Are you sure want to delete \"{fileToDelete && fileToDelete.name}\"?</Label>\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={() => handleDelete(props.file)}>Delete</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n\nexport default Delete;\n","import React, { Component, useState, useEffect } from \"react\";\nimport { Dropbox } from \"dropbox\";\nimport { token$, updateToken } from \"../store\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst AllFolders = () => {\n  const [moveToFolder, updateMoveToFolder] = useState([]);\n  let folderList = [];\n  let allfolders = [];\n\n  useEffect(() => {\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.filesListFolder({ path: \"\", recursive: true })\n      .then(function (response) {\n        updateMoveToFolder(response.entries);\n        for (let element of moveToFolder) {\n          if (element[\".tag\"] === \"folder\") {\n            folderList.push({ name: element.name, path: element.path_display })\n          }\n        }\n        allfolders = folderList.map(folder => \n          <option value=\"folder.path\">{folder.name}</option>\n        );\n        console.log(\"folderList\", folderList);\n        console.log(\"allfolders\", allfolders);\n      })\n      .catch(function (error) {\n        console.error(error);\n      })\n  })\n\n  return (\n    <>\n      <form>\n      <select name=\"folder\">\n          <option value=\"\">Select Folder</option>\n          {allfolders}\n        </select>\n      </form>\n        \n    </>\n  )\n}\n\nconst MoveFile = (props) => {\n\n  const [modal, updateModal] = useState(props.toggle);\n  const [fileToMove, updateFileToMove] = useState(props.file);\n  const [currentFolder, setCurrentFolder] = useState([]);\n  let currentLocation = props.location.pathname.substring(5);\n\n  function toggle() {\n    updateModal(!modal)\n  }\n\n  function handleMoveFile(file) {\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    if (currentLocation === \"/\") {\n      currentLocation = \"\";\n    }\n    dropbox.filesMoveV2({ from_path: file.path_lower, to_path: \"/home/e\"})\n    .then(response => {\n      props.onDataChange();\n      toggle();\n    })\n    .catch(err => {\n      console.error(err);\n    })\n  }\n  \n\n/*   useEffect(() => {\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.filesListFolder({ path: \"\", recursive: true })\n      .then(function (response) {\n        updateMoveToFolder(response.entries);\n        for (let element of moveToFolder) {\n          if (element[\".tag\"] === \"folder\") {\n            folderList.push({ name: element.name, path: element.path_display })\n          }\n        }\n        allfolders = folderList.map(folder =>\n          <option value={folder.path}>{folder.name}</option>\n        );\n      })\n      .catch(function (error) {\n        console.error(error);\n      })\n  }); */\n\n  /* function getAllFolderElements(folderList) {\n    folderList.map(folder =>\n      <option value={folder.path}>{folder.name}</option>\n    )\n    console.log(folderList);\n    return folderList;\n  } */\n\n\n\n\n  return (\n    <>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Move file</ModalHeader>\n        <ModalBody>\n          Move \"{fileToMove && fileToMove.name}\" to <AllFolders />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => handleMoveFile(props.file)}>Move</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n\n  )\n}\n\nexport default MoveFile;","import React, { Component } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport \"./Dropdown.css\";\nimport Delete from \"./Delete\";\nimport MoveFile from \"./MoveFile\";\n\nclass Action extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdownOpen: false,\n      file: props.file,\n      deleteModal: false,\n      moveModal: false,\n      onDataChange: props.onDataChange,\n      location: props.location\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.deleteToggle = this.deleteToggle.bind(this);\n    this.moveToggle = this.moveToggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  deleteToggle() {\n    this.setState(prevState => ({\n      deleteModal: !prevState.deleteModal\n    }))  \n  }\n\n  moveToggle() {\n    this.setState(prevState => ({\n      moveModal: !prevState.moveModal\n    }))\n  }\n\n  render() {\n    return (\n      <Dropdown\n        isOpen={this.state.dropdownOpen}\n        toggle={this.toggle}\n      >\n        <DropdownToggle color=\"primary\" outline caret><i class=\"material-icons\">more_horiz</i></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem onClick={this.deleteToggle}><Delete file={this.state.file} toggle={this.state.deleteModal} onDataChange={this.state.onDataChange} />Delete</DropdownItem> \n          <DropdownItem>Rename</DropdownItem>\n          <DropdownItem onClick={this.moveToggle}><MoveFile file={this.state.file} toggle={this.state.moveModal} onDataChange={this.state.onDataChange} location={this.state.location} />Move</DropdownItem>\n          <DropdownItem>Copy</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    )\n  }\n}\n\nexport default Action;","import React from 'react';\n\nexport function Star(props) {\n  return <i class=\"material-icons\" id={props.id} onClick={props.onClickAddFavorite} style={{ verticalAlign: \"bottom\", color: \"#31572C\" }}>star_border</i>;\n}\n","import React from 'react';\n\nexport function FilledStar(props) {\n  return <i class=\"material-icons\" id={props.id} onClick={props.onClickRemoveFavorite} style={{ verticalAlign: \"bottom\", color: \"#31572C\" }}>star</i>;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Dropbox } from 'dropbox';\nimport { token$ } from '../store';\n\nconst fileType = /\\.(gif|jpg|jpeg|tiff|tif|png|bmp)$/i;\n\nconst Thumbnail = props => {\n  const [url, updateUrl] = useState('');\n\n  useEffect(() => {\n    if (fileType.test(props.file.name)) {\n      const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n      dropbox.filesGetThumbnail({ path: props.file.path_lower, size: 'w32h32' })\n        .then((response) => {\n          let urlBlob = URL.createObjectURL(response.fileBlob);\n          updateUrl(urlBlob);\n        })\n        .catch(function (error) {\n          console.error(error);\n        });\n    }\n  }, [props.file.name, props.file.path_lower])\n\n  // filetype: image\n  if (fileType.test(props.file.name)) {\n    return (\n      <img src={url} alt={props.file.name}></img>\n    )\n    // filetype: file\n  } else if (props.file['.tag'] === 'file') {\n    return (\n      <i class=\"material-icons\">insert_drive_file</i>\n    )\n    // filetype: folder\n  } else if (props.file['.tag'] === 'folder') {\n    return (\n      <i class=\"material-icons\">folder_open</i>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default Thumbnail\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Data.css\";\nimport { Dropbox } from \"dropbox\";\nimport { token$, updateToken, favorites$, updateFavoriteObservable } from \"../store\";\nimport { Table, Input } from \"reactstrap\";\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport Dropdown from './Dropdown';\nimport { Star } from './Star.js';\nimport { FilledStar } from './FilledStar.js';\nimport Thumbnail from './Thumbnail';\n\n\nfunction Data(props) {\n  const [modal, updateModal] = useState(false);\n  const [favorites, updateFavorites] = useState(favorites$.value); //favorites is an array of objects\n  const [search, updateSearch] = useState(\"\");\n  const [token, updateTokenState] = useState(token$.value);\n  const [user, updateUser] = useState(\"\");\n\n  let currentLocation = props.location.pathname.substring(5);\n  const updateData = props.updateData;\n\n  useEffect(() => {\n    // If token exists\n    if (token) {\n      let dropbox = new Dropbox({ accessToken: token });\n\n      // if then (Fetching files/folders) else (search)\n      if (search) {\n        // Search\n        dropbox.filesSearch({ path: '', query: search })\n          .then(function (response) {\n            const files = response.matches.map(file => {\n              return file.metadata\n            });\n            updateData(files)\n          })\n      }\n    }\n  }, [token, search, currentLocation]);\n\n  //Listening to favorites observable\n  //updateFavorites is used only here. Anywhere else, use updateFavoriteObservable to update favorites.\n  useEffect(() => {\n    const subscription = favorites$.subscribe(updateFavorites);\n    return () => subscription.unsubscribe();\n  }, []);\n\n  function onClickAddFavorite(event) {\n    //Finding out id\n    let id = event.target.id;\n\n    //Looking for the right file/folder in data (matching on id)\n    let targetObject;\n    for (let object of props.data) {\n      if (object.id === id) {\n        targetObject = { ...object };\n      }\n    }\n\n    //Making a copy of favorites array to work with\n    let newFavoritesArray = favorites.slice();\n\n    //Adding new object to array\n    newFavoritesArray.push(targetObject);\n\n    //Updating favorites\n    updateFavoriteObservable(newFavoritesArray);\n  }\n\n  function onClickRemoveFavorite(event) {\n    let id = event.target.id;\n    let filteredFavorites = favorites.filter(object => {\n      return object.id !== id;\n    });\n    updateFavoriteObservable(filteredFavorites);\n  }\n\n\n  /*------------------------------------- Render table data ---------------------------------------------*/\n  // Table data Last modified calculations\n  function handleLastModified(date) {\n    let day = date.substring(8, 10);\n    let month = date.substring(5, 7);\n    let year = date.substring(0, 4);\n\n    let months = [\n      \"January\", \"February\", \"March\",\n      \"April\", \"May\", \"June\", \"July\",\n      \"August\", \"September\", \"October\",\n      \"November\", \"December\"\n    ];\n\n    month = month.replace(/^0+/, '');\n    day = day.replace(/^0+/, '');\n    let monthShow = months[month - 1];\n\n    return <label>{day + ' ' + monthShow + ' ' + year}</label>\n  }\n\n  // Table data size calculations in Bytes, KB, MB, GB, TB, PB, EB, ZB, YB\n  function handleSize(size) {\n    let sizes = [' B', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\n    for (let i = 1; i < sizes.length; i++) {\n      if (size < Math.pow(1024, i))\n        return (Math.round((size / Math.pow(1024, i - 1)) * 100) / 100) + sizes[i - 1];\n    }\n    return size;\n  }\n  /*------------------------------------- End Render table data ---------------------------------------------*/\n\n  /*------------------------------------- Download files ---------------------------------------------*/\n  // Function to download files\n  function handleDownloadFile(fileName, filePath) {\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.filesDownload({ path: filePath })\n      .then((response) => {\n        console.log(\"File details to be download: \", response);\n        let url = URL.createObjectURL(response.fileBlob);\n        let downloadButton = document.createElement('a');\n        downloadButton.setAttribute('href', url);\n        downloadButton.setAttribute('download', response.name);\n        downloadButton.click();\n      })\n      .catch((error) => {\n        console.log(error.response);\n      })\n  }\n  /*------------------------------------- End Download files ---------------------------------------------*/\n\n  return (\n    <>\n      {/* ------------------------------------------ Search ----------------------------------------------- */}\n      <div style={{ position:\"relative\", width: \"100%\" }}>\n        <Breadcrumbs path={props.location.pathname} />\n        <Input type=\"text\" size=\"lg\" placeholder=\"Search\" onChange={(e) => { updateSearch(e.target.value); }} value={props.search} style={{ position: \"absolute\", width: \"30%\", minWidth: \"150px\", right: \"0px\", top: \"-1px\" }} />\n      </div>\n      \n      {/* Table file/folder data */}\n      <Table>\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Name</th>\n            <th>Last modified</th>\n            <th>Size</th>\n            <th>Menu</th>\n            <th><i class=\"material-icons\" style={{ verticalAlign: \"bottom\", color: \"#31572C\" }}>star_border</i></th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.data.map(file => {\n\n            //Favorite logic\n            let favorite = false;\n            for (let object of favorites) {\n              if (object.id === file.id) {\n                favorite = true;\n                break;\n              }\n            }\n\n            return (\n              <tr key={file.id}>\n                <td style={{color: \"#31572C\"}}><Thumbnail file={file} /></td>\n                <td className=\"link\">{file[\".tag\"] === \"folder\" ? <Link to={`/home${file.path_display}`}>{file.name}</Link> : <span onClick={() => handleDownloadFile(file.name, file.path_display)} style={{ cursor: 'pointer', color: '#31572C' }}>{file.name}</span>}</td>\n                <td>{file.server_modified ? handleLastModified(file.server_modified) : null}</td>\n                <td>{handleSize(file.size)}</td>\n                <td><Dropdown file={file} onDataChange={props.onDataChange} location={props.location} /></td>\n                <td className=\"link\">\n                  { favorite ? <FilledStar id={file.id} onClickRemoveFavorite={onClickRemoveFavorite} /> : <Star id={file.id} onClickAddFavorite={onClickAddFavorite} />}\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n}\n\nexport default Data;\n","import React, { useState, useEffect } from \"react\";\nimport { Dropbox } from 'dropbox';\nimport { token$, updateToken } from '../store';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\n\nconst CreateFolder = (props) => {\n\n  const [modal, updateModal] = useState(false);\n  const [folderName, updateFolderName] = useState(\"\");\n  const filePath = props.location.pathname.substring(5);\n\n  // Triggering modal to open\n  function toggleFolder() {\n    updateModal(true)\n  }\n\n  //Closing modal\n  function exitModal() {\n    updateModal(false)\n  }\n\n  // Handle input\n  function handleFolderName(e) {\n    updateFolderName(e.target.value);\n  }\n\n  // Handling create button function\n  function handleNewFolder() {\n    let dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.filesCreateFolder({ path: filePath + \"/\" + folderName, autorename: true })\n      .then((response) => {\n        props.onNewFolder(response);\n        exitModal();\n        //window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  }\n\n  return (\n    <>\n      <Button onClick={toggleFolder}>New Folder</Button>\n      <Modal isOpen={modal} toggle={toggleFolder} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\n        <ModalHeader toggle={exitModal}>Create New Folder</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label for=\"name\">Folder name</Label>\n            <Input type=\"text\" placeholder=\"Folder name\" onChange={handleFolderName} value={folderName} />\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleNewFolder}>Create</Button>{' '}\n          <Button color=\"secondary\" onClick={exitModal}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateFolder;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from \"reactstrap\";\nimport \"./Data.css\";\nimport { Dropbox } from \"dropbox\";\nimport { token$, updateToken } from \"../store\";\nimport { favorites$, updateFavoriteObservable } from '../store';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from \"reactstrap\";\nimport Dropdown from './Dropdown';\nimport { Star } from './Star.js';\nimport { FilledStar } from './FilledStar.js';\nimport Thumbnail from './Thumbnail';\nimport CreateFolder from './CreateFolder';\n\nexport default function Favorite(props) {\n  const [token, updateToken] = useState(token$.value);\n  const [favorites, updateFavorites] = useState(favorites$.value); //favorites is an array of objects\n  const [search, updateSearch] = useState('');\n\n  // Using this instead of helmet because it was causing problem while search\n  useEffect(() => {\n    document.title = \"Home\";\n  })\n\n  //Listening to token observable\n  useEffect(() => {\n    const subscription = token$.subscribe(updateToken);\n    return () => subscription.unsubscribe();\n  }, []);\n\n  //Listening to favorites observable\n  //'updateFavorites' is used only here. Anywhere else, use updateFavoriteObservable to update favorites.\n  useEffect(() => {\n    const subscription = favorites$.subscribe(updateFavorites);\n    return () => subscription.unsubscribe();\n  }, []);\n\n  /*------------------------------------- Download files ---------------------------------------------*/\n  // Function to download files\n  function handleDownloadFile(fileName, filePath) {\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.filesDownload({ path: filePath })\n      .then((response) => {\n        console.log(\"File details to be download: \", response);\n        let url = URL.createObjectURL(response.fileBlob);\n        let downloadButton = document.createElement('a');\n        downloadButton.setAttribute('href', url);\n        downloadButton.setAttribute('download', response.name);\n        downloadButton.click();\n      })\n      .catch((error) => {\n        console.log(error.response);\n      })\n  }\n/*------------------------------------- End Download files ---------------------------------------------*/\n\n  // Table data Last modified calculations\n  function handleLastModified(date) {\n    let day = date.substring(8, 10);\n    let month = date.substring(5, 7);\n    let year = date.substring(0, 4);\n\n    let months = [\n      \"January\", \"February\", \"March\",\n      \"April\", \"May\", \"June\", \"July\",\n      \"August\", \"September\", \"October\",\n      \"November\", \"December\"\n    ];\n\n    month = month.replace(/^0+/, '');\n    day = day.replace(/^0+/, '');\n    let monthShow = months[month - 1];\n\n    return <label>{day + ' ' + monthShow + ' ' + year}</label>\n  }\n\n  // Table data size calculations in Bytes, KB, MB, GB, TB, PB, EB, ZB, YB\n  function handleSize(size) {\n    let sizes = [' B', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\n    for (let i = 1; i < sizes.length; i++) {\n      if (size < Math.pow(1024, i))\n        return (Math.round((size / Math.pow(1024, i - 1)) * 100) / 100) + sizes[i - 1];\n    }\n    return size;\n  }\n\n  function onClickRemoveFavorite(event) {\n    let id = event.target.id;\n    let filteredFavorites = favorites.filter(object => {\n      return object.id !== id;\n    });\n    updateFavoriteObservable(filteredFavorites);\n  }\n\n  function redirectToHome(event) {\n    props.updateActiveTab('1');\n  }\n\n  return (\n    <>\n      <Table style={{ marginTop: \"1em\" }}>\n          <thead>\n            <tr>\n              <th>Type</th>\n              <th>Name</th>\n              <th>Last modified</th>\n              <th>Size</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {favorites.map((file) => {\n\n              //console.log('file.path_display: ', file.path_display);\n\n              return (\n                <tr key={file.id}>\n                  <td style={{color: \"#31572C\"}}><Thumbnail file={file} /></td>\n                  <td>{file[\".tag\"] === \"folder\" ? <Link to={`/home${file.path_display}`} onClick={redirectToHome}>{file.name}</Link> : <span onClick={() => handleDownloadFile(file.name, file.path_display)} style={{ cursor: 'pointer', color: 'blue' }}>{file.name}</span>}</td>\n                  <td>{file.server_modified ? handleLastModified(file.server_modified) : null}</td>\n                  <td>{handleSize(file.size)}</td>\n                  <td><Button size=\"sm\" id={file.id} onClick={onClickRemoveFavorite}>Remove from favorites</Button></td>\n                </tr>\n              )\n            })}\n          </tbody>\n       </Table>\n\n    </>\n  );\n\n}\n","import React, { useState } from \"react\";\nimport { Dropbox } from 'dropbox';\nimport { token$, updateToken, updateFavoriteObservable } from '../store';\nimport { Button, FormGroup, FormText, Input, Label, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nfunction UploadFile(props) {\n  const [token, updateTokenState] = useState(token$.value);\n  const [modal, updateModal] = useState(false);\n  const [file, updateFile] =  useState(null);\n  const currentLocation = props.location.pathname.substring(5);\n\n  function toggle() {\n    updateModal(!modal)\n  }\n\n  function handleUploadFile(file) {\n    const dropbox = new Dropbox({ accessToken: token, fetch });\n  \n    if (file.size > 0 && file.size < 150000000) {\n      dropbox\n        .filesUpload({\n          contents: file,\n          path: `${currentLocation}/${file.name}`\n        })\n        .then(response => {\n          props.onUpload();\n          updateModal(false);\n        })\n        .catch(function (error) {\n          console.error(error);\n        });\n    }\n  }\n\n  function onUploadSubmit(e) {\n    e.preventDefault();\n    handleUploadFile(file);\n    updateModal(false);\n  }\n\n  function onChangeFile(e) {\n    updateFile(e.target.files[0] || null);\n  }\n\n  return (\n    <>\n      <Button onClick={toggle}>Upload File</Button>\n      <Modal isOpen={modal} toggle={toggle} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}>\n        <ModalHeader toggle={toggle}>Upload file</ModalHeader>\n        <ModalBody>\n          <FormGroup id=\"upload\">\n            <Label htmlFor=\"uploadfile\" id=\"uploadLabel\">Please select a file to upload</Label>\n            <Input type=\"file\" name=\"file\" id=\"uploadfile\" onChange={onChangeFile} />\n            <FormText color=\"muted\">The size of a file should not exceed 150MB.</FormText>\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            htmlFor=\"upload\"\n            type=\"submit\"\n            color=\"success\"\n            disabled={file === null}\n            onClick={(e) => onUploadSubmit(e)}\n          >\n            Upload\n          </Button>{\" \"}\n          <Button\n            color=\"secondary\"\n            onClick={toggle}\n          >\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n\nexport default UploadFile;\n","import React, { useState } from \"react\";\nimport { Button, ButtonGroup } from 'reactstrap';\nimport UploadFile from './UploadFile';\nimport CreateFolder from './CreateFolder';\n\nconst asideStyle = {\n  margin: \"41px 6px 0 6px\",\n  width: \"20%\",\n  minWidth: \"50px\"\n}\n\nconst accountStyle = {\n  position: \"absolute\",\n  right: \"10px\",\n  top: \"10px\"\n}\n\nconst usernameStyle = {\n  marginRight: \"5px\",\n  verticalAlign: \"baseline\"\n};\n\nfunction SideMenu(props) {\n  return (\n    <aside style={asideStyle}>\n      <ButtonGroup vertical>\n        <UploadFile onUpload={props.onUpload} location={props.location} file={props.file} />\n        <CreateFolder onNewFolder={props.onNewFolder} location={props.location} />\n      </ButtonGroup>\n      <div style={accountStyle}>\n        <span style={usernameStyle}>{props.user}</span>\n        <Button color=\"success\" onClick={props.logOut}>Log out</Button>\n      </div>\n    </aside>\n  );\n}\n\nexport default SideMenu;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport { Table, TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col, Input } from \"reactstrap\";\nimport { Dropbox } from \"dropbox\";\nimport { token$, updateToken, removeAllFavorites } from \"../store\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Data from \"./Data\";\nimport Favorite from \"./Favorite\";\nimport SideMenu from \"./SideMenu\";\n//import Breadcrumbs from \"./Breadcrumbs\";\n\nfunction Home(props) {\n  const [token, updateTokenState] = useState(token$.value);\n  const [data, updateData] = useState([]);\n  //const [search, updateSearch] = useState(\"\");\n  const [user, updateUser] = useState(\"\");\n  const [activeTab, updateActiveTab] = useState(props.location.pathname === \"/home/favorites\" ? \"2\" : \"1\");\n  let currentLocation = props.location.pathname.substring(5);\n\n  // Using this instead of helmet because it was causing problem while search\n  useEffect(() => {\n    document.title = \"TeaCup\";\n  });\n\n  useEffect(() => {\n    const subscription = token$.subscribe(updateTokenState);\n    return () => subscription.unsubscribe();\n  });\n\n  //Fetching files/folders in designated path\n  function renderData() {\n    //If the favorite tab is active, do not make a new fetch\n    if(currentLocation === \"/favorites\") {\n      return;\n    }\n\n    const dropbox = new Dropbox({ accessToken: token, fetch });\n    if (currentLocation === \"/\") {\n      currentLocation = \"\";\n    }\n    dropbox.filesListFolder({ path: currentLocation })\n      .then(function (response) {\n        updateData(response.entries);\n        console.log(response.entries);\n        \n      })\n      .catch(function (error) {\n        console.error(error);\n      })\n  }\n\n  useEffect(() => {\n      renderData();\n  }, []);\n\n  useEffect(() => {\n    const poll = setInterval(() => {\n      renderData();\n    }, 3000);\n    return() => clearInterval(poll);\n  }, [currentLocation]); \n\n  // Fetch user name\n  useEffect(() => {\n    const dropbox = new Dropbox({ accessToken: token });\n    dropbox\n      .usersGetCurrentAccount()\n      .then(function (response) {\n        updateUser(response.name.given_name);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, [token]);\n\n  if (!token) {\n    return <Redirect to=\"/\" />;\n  }\n\n  function onNewFolder(folder) {\n    renderData();\n  }\n\n  function onUpload() {\n    renderData();\n  }\n\n  function onDataChange() {\n    renderData()\n  }\n\n  function logOut(e) {\n    e.preventDefault();\n    const dropbox = new Dropbox({ accessToken: token$.value, fetch });\n    dropbox.authTokenRevoke();\n    updateToken(null);\n    removeAllFavorites();\n  }\n\n  return (\n    <div style={{ display: \"flex\", width: \"100%\" }}>\n      <div style={{ flexGrow: 1 }}>\n        <Nav tabs>\n          <NavItem>\n            <Link to=\"/home\">\n            <NavLink\n              className={activeTab === \"1\" ? \"active\" : \"\"}\n              onClick={() => updateActiveTab(\"1\")}\n              style={{color: \"#31572C\"}}\n            >\n              <i class=\"material-icons\" style={{ verticalAlign: \"bottom\" }}>\n                folder\n              </i>\n              All\n            </NavLink>\n            </Link>\n          </NavItem>\n          <NavItem>\n            <Link to=\"/home/favorites\">\n            <NavLink\n              className={activeTab === \"2\" ? \"active\" : \"\"}\n              onClick={() => {\n                updateActiveTab(\"2\");\n          }}\n              style={{color: \"#31572C\"}}\n            >\n              <i class=\"material-icons\" style={{ verticalAlign: \"bottom\" }}>\n                star\n              </i>\n              Favorites\n            </NavLink>\n            </Link>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                {/*<Breadcrumbs path={props.location.pathname} />*/}\n              </Col>\n            </Row>\n            <Row>\n              <Col sm=\"12\">\n                <Data\n                  location={props.location}\n                  data={data}\n                  updateData={updateData}\n                  renderData={renderData}\n                  onDataChange={onDataChange} />\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Route path=\"/home/favorites\" render={(props) => (\n                  <Favorite activeTab={activeTab} updateActiveTab={updateActiveTab} {...props} />\n                )} />\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n      <SideMenu\n        location={props.location}\n        logOut={logOut}\n        user={user}\n        onNewFolder={onNewFolder}\n        onUpload={onUpload}\n      />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Start from \"./Components/Start\";\nimport Auth from \"./Components/Auth\";\nimport Home from \"./Components/Home\";\nimport logoImage from \"./logo.png\";\n\nconst navStyle = {\n  width: \"100%\",\n  height: \"80px\",\n  margin: \"10px 0 0 0\",\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"flex-end\",\n};\n\nconst logoStyle = {\n  width: \"50px\",\n  position: \"absolute\",\n  left: \"10px\",\n  top: \"8px\"\n};\n\nconst headerStyle = {\n  margin: 0,\n  position: \"absolute\",\n  left: \"64px\",\n  top: \"24px\",\n  color: \"#212529\"\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router basename={process.env.PUBLIC_URL}>\n        <nav style={navStyle}>\n          <Link to=\"/\">\n            <img src={logoImage} style={logoStyle} />\n          </Link>\n          <h1 style={headerStyle}>TeaCup</h1>\n        </nav>\n      \n        <Route exact path=\"/\" component={Start} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/home\" component={Home} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}